

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Nov 30 00:14:13 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53     0000                     
    54                           ; Generated 06/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F1827 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000D                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0014                     	;# 
   106     0015                     	;# 
   107     0016                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001B                     	;# 
   114     001C                     	;# 
   115     001E                     	;# 
   116     001F                     	;# 
   117     008C                     	;# 
   118     008D                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     0111                     	;# 
   137     0112                     	;# 
   138     0113                     	;# 
   139     0114                     	;# 
   140     0115                     	;# 
   141     0116                     	;# 
   142     0117                     	;# 
   143     0118                     	;# 
   144     0119                     	;# 
   145     011A                     	;# 
   146     011B                     	;# 
   147     011D                     	;# 
   148     011E                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0191                     	;# 
   152     0191                     	;# 
   153     0192                     	;# 
   154     0193                     	;# 
   155     0193                     	;# 
   156     0193                     	;# 
   157     0194                     	;# 
   158     0195                     	;# 
   159     0196                     	;# 
   160     0199                     	;# 
   161     019A                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019C                     	;# 
   167     019C                     	;# 
   168     019D                     	;# 
   169     019E                     	;# 
   170     019F                     	;# 
   171     020C                     	;# 
   172     020D                     	;# 
   173     0211                     	;# 
   174     0211                     	;# 
   175     0212                     	;# 
   176     0212                     	;# 
   177     0213                     	;# 
   178     0213                     	;# 
   179     0214                     	;# 
   180     0214                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0215                     	;# 
   184     0216                     	;# 
   185     0216                     	;# 
   186     0217                     	;# 
   187     0217                     	;# 
   188     0219                     	;# 
   189     021A                     	;# 
   190     021B                     	;# 
   191     021C                     	;# 
   192     021D                     	;# 
   193     021E                     	;# 
   194     021F                     	;# 
   195     0291                     	;# 
   196     0291                     	;# 
   197     0292                     	;# 
   198     0293                     	;# 
   199     0294                     	;# 
   200     0295                     	;# 
   201     0295                     	;# 
   202     0296                     	;# 
   203     0298                     	;# 
   204     0298                     	;# 
   205     0299                     	;# 
   206     029A                     	;# 
   207     029B                     	;# 
   208     029C                     	;# 
   209     029C                     	;# 
   210     029D                     	;# 
   211     029E                     	;# 
   212     029E                     	;# 
   213     0311                     	;# 
   214     0311                     	;# 
   215     0312                     	;# 
   216     0313                     	;# 
   217     0318                     	;# 
   218     0318                     	;# 
   219     0319                     	;# 
   220     031A                     	;# 
   221     0394                     	;# 
   222     0395                     	;# 
   223     0396                     	;# 
   224     039A                     	;# 
   225     039C                     	;# 
   226     039D                     	;# 
   227     039E                     	;# 
   228     039F                     	;# 
   229     0415                     	;# 
   230     0416                     	;# 
   231     0417                     	;# 
   232     041C                     	;# 
   233     041D                     	;# 
   234     041E                     	;# 
   235     0FE4                     	;# 
   236     0FE5                     	;# 
   237     0FE6                     	;# 
   238     0FE7                     	;# 
   239     0FE8                     	;# 
   240     0FE9                     	;# 
   241     0FEA                     	;# 
   242     0FEB                     	;# 
   243     0FED                     	;# 
   244     0FEE                     	;# 
   245     0FEF                     	;# 
   246     0000                     	;# 
   247     0001                     	;# 
   248     0002                     	;# 
   249     0003                     	;# 
   250     0004                     	;# 
   251     0005                     	;# 
   252     0006                     	;# 
   253     0007                     	;# 
   254     0008                     	;# 
   255     0009                     	;# 
   256     000A                     	;# 
   257     000B                     	;# 
   258     000C                     	;# 
   259     000D                     	;# 
   260     0011                     	;# 
   261     0012                     	;# 
   262     0013                     	;# 
   263     0014                     	;# 
   264     0015                     	;# 
   265     0016                     	;# 
   266     0016                     	;# 
   267     0017                     	;# 
   268     0018                     	;# 
   269     0019                     	;# 
   270     001A                     	;# 
   271     001B                     	;# 
   272     001C                     	;# 
   273     001E                     	;# 
   274     001F                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0095                     	;# 
   282     0096                     	;# 
   283     0097                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009A                     	;# 
   287     009B                     	;# 
   288     009B                     	;# 
   289     009C                     	;# 
   290     009D                     	;# 
   291     009E                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     0111                     	;# 
   295     0112                     	;# 
   296     0113                     	;# 
   297     0114                     	;# 
   298     0115                     	;# 
   299     0116                     	;# 
   300     0117                     	;# 
   301     0118                     	;# 
   302     0119                     	;# 
   303     011A                     	;# 
   304     011B                     	;# 
   305     011D                     	;# 
   306     011E                     	;# 
   307     018C                     	;# 
   308     018D                     	;# 
   309     0191                     	;# 
   310     0191                     	;# 
   311     0192                     	;# 
   312     0193                     	;# 
   313     0193                     	;# 
   314     0193                     	;# 
   315     0194                     	;# 
   316     0195                     	;# 
   317     0196                     	;# 
   318     0199                     	;# 
   319     019A                     	;# 
   320     019B                     	;# 
   321     019B                     	;# 
   322     019B                     	;# 
   323     019B                     	;# 
   324     019C                     	;# 
   325     019C                     	;# 
   326     019D                     	;# 
   327     019E                     	;# 
   328     019F                     	;# 
   329     020C                     	;# 
   330     020D                     	;# 
   331     0211                     	;# 
   332     0211                     	;# 
   333     0212                     	;# 
   334     0212                     	;# 
   335     0213                     	;# 
   336     0213                     	;# 
   337     0214                     	;# 
   338     0214                     	;# 
   339     0215                     	;# 
   340     0215                     	;# 
   341     0215                     	;# 
   342     0216                     	;# 
   343     0216                     	;# 
   344     0217                     	;# 
   345     0217                     	;# 
   346     0219                     	;# 
   347     021A                     	;# 
   348     021B                     	;# 
   349     021C                     	;# 
   350     021D                     	;# 
   351     021E                     	;# 
   352     021F                     	;# 
   353     0291                     	;# 
   354     0291                     	;# 
   355     0292                     	;# 
   356     0293                     	;# 
   357     0294                     	;# 
   358     0295                     	;# 
   359     0295                     	;# 
   360     0296                     	;# 
   361     0298                     	;# 
   362     0298                     	;# 
   363     0299                     	;# 
   364     029A                     	;# 
   365     029B                     	;# 
   366     029C                     	;# 
   367     029C                     	;# 
   368     029D                     	;# 
   369     029E                     	;# 
   370     029E                     	;# 
   371     0311                     	;# 
   372     0311                     	;# 
   373     0312                     	;# 
   374     0313                     	;# 
   375     0318                     	;# 
   376     0318                     	;# 
   377     0319                     	;# 
   378     031A                     	;# 
   379     0394                     	;# 
   380     0395                     	;# 
   381     0396                     	;# 
   382     039A                     	;# 
   383     039C                     	;# 
   384     039D                     	;# 
   385     039E                     	;# 
   386     039F                     	;# 
   387     0415                     	;# 
   388     0416                     	;# 
   389     0417                     	;# 
   390     041C                     	;# 
   391     041D                     	;# 
   392     041E                     	;# 
   393     0FE4                     	;# 
   394     0FE5                     	;# 
   395     0FE6                     	;# 
   396     0FE7                     	;# 
   397     0FE8                     	;# 
   398     0FE9                     	;# 
   399     0FEA                     	;# 
   400     0FEB                     	;# 
   401     0FED                     	;# 
   402     0FEE                     	;# 
   403     0FEF                     	;# 
   404     0000                     	;# 
   405     0001                     	;# 
   406     0002                     	;# 
   407     0003                     	;# 
   408     0004                     	;# 
   409     0005                     	;# 
   410     0006                     	;# 
   411     0007                     	;# 
   412     0008                     	;# 
   413     0009                     	;# 
   414     000A                     	;# 
   415     000B                     	;# 
   416     000C                     	;# 
   417     000D                     	;# 
   418     0011                     	;# 
   419     0012                     	;# 
   420     0013                     	;# 
   421     0014                     	;# 
   422     0015                     	;# 
   423     0016                     	;# 
   424     0016                     	;# 
   425     0017                     	;# 
   426     0018                     	;# 
   427     0019                     	;# 
   428     001A                     	;# 
   429     001B                     	;# 
   430     001C                     	;# 
   431     001E                     	;# 
   432     001F                     	;# 
   433     008C                     	;# 
   434     008D                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0094                     	;# 
   439     0095                     	;# 
   440     0096                     	;# 
   441     0097                     	;# 
   442     0098                     	;# 
   443     0099                     	;# 
   444     009A                     	;# 
   445     009B                     	;# 
   446     009B                     	;# 
   447     009C                     	;# 
   448     009D                     	;# 
   449     009E                     	;# 
   450     010C                     	;# 
   451     010D                     	;# 
   452     0111                     	;# 
   453     0112                     	;# 
   454     0113                     	;# 
   455     0114                     	;# 
   456     0115                     	;# 
   457     0116                     	;# 
   458     0117                     	;# 
   459     0118                     	;# 
   460     0119                     	;# 
   461     011A                     	;# 
   462     011B                     	;# 
   463     011D                     	;# 
   464     011E                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0191                     	;# 
   468     0191                     	;# 
   469     0192                     	;# 
   470     0193                     	;# 
   471     0193                     	;# 
   472     0193                     	;# 
   473     0194                     	;# 
   474     0195                     	;# 
   475     0196                     	;# 
   476     0199                     	;# 
   477     019A                     	;# 
   478     019B                     	;# 
   479     019B                     	;# 
   480     019B                     	;# 
   481     019B                     	;# 
   482     019C                     	;# 
   483     019C                     	;# 
   484     019D                     	;# 
   485     019E                     	;# 
   486     019F                     	;# 
   487     020C                     	;# 
   488     020D                     	;# 
   489     0211                     	;# 
   490     0211                     	;# 
   491     0212                     	;# 
   492     0212                     	;# 
   493     0213                     	;# 
   494     0213                     	;# 
   495     0214                     	;# 
   496     0214                     	;# 
   497     0215                     	;# 
   498     0215                     	;# 
   499     0215                     	;# 
   500     0216                     	;# 
   501     0216                     	;# 
   502     0217                     	;# 
   503     0217                     	;# 
   504     0219                     	;# 
   505     021A                     	;# 
   506     021B                     	;# 
   507     021C                     	;# 
   508     021D                     	;# 
   509     021E                     	;# 
   510     021F                     	;# 
   511     0291                     	;# 
   512     0291                     	;# 
   513     0292                     	;# 
   514     0293                     	;# 
   515     0294                     	;# 
   516     0295                     	;# 
   517     0295                     	;# 
   518     0296                     	;# 
   519     0298                     	;# 
   520     0298                     	;# 
   521     0299                     	;# 
   522     029A                     	;# 
   523     029B                     	;# 
   524     029C                     	;# 
   525     029C                     	;# 
   526     029D                     	;# 
   527     029E                     	;# 
   528     029E                     	;# 
   529     0311                     	;# 
   530     0311                     	;# 
   531     0312                     	;# 
   532     0313                     	;# 
   533     0318                     	;# 
   534     0318                     	;# 
   535     0319                     	;# 
   536     031A                     	;# 
   537     0394                     	;# 
   538     0395                     	;# 
   539     0396                     	;# 
   540     039A                     	;# 
   541     039C                     	;# 
   542     039D                     	;# 
   543     039E                     	;# 
   544     039F                     	;# 
   545     0415                     	;# 
   546     0416                     	;# 
   547     0417                     	;# 
   548     041C                     	;# 
   549     041D                     	;# 
   550     041E                     	;# 
   551     0FE4                     	;# 
   552     0FE5                     	;# 
   553     0FE6                     	;# 
   554     0FE7                     	;# 
   555     0FE8                     	;# 
   556     0FE9                     	;# 
   557     0FEA                     	;# 
   558     0FEB                     	;# 
   559     0FED                     	;# 
   560     0FEE                     	;# 
   561     0FEF                     	;# 
   562     0000                     	;# 
   563     0001                     	;# 
   564     0002                     	;# 
   565     0003                     	;# 
   566     0004                     	;# 
   567     0005                     	;# 
   568     0006                     	;# 
   569     0007                     	;# 
   570     0008                     	;# 
   571     0009                     	;# 
   572     000A                     	;# 
   573     000B                     	;# 
   574     000C                     	;# 
   575     000D                     	;# 
   576     0011                     	;# 
   577     0012                     	;# 
   578     0013                     	;# 
   579     0014                     	;# 
   580     0015                     	;# 
   581     0016                     	;# 
   582     0016                     	;# 
   583     0017                     	;# 
   584     0018                     	;# 
   585     0019                     	;# 
   586     001A                     	;# 
   587     001B                     	;# 
   588     001C                     	;# 
   589     001E                     	;# 
   590     001F                     	;# 
   591     008C                     	;# 
   592     008D                     	;# 
   593     0091                     	;# 
   594     0092                     	;# 
   595     0093                     	;# 
   596     0094                     	;# 
   597     0095                     	;# 
   598     0096                     	;# 
   599     0097                     	;# 
   600     0098                     	;# 
   601     0099                     	;# 
   602     009A                     	;# 
   603     009B                     	;# 
   604     009B                     	;# 
   605     009C                     	;# 
   606     009D                     	;# 
   607     009E                     	;# 
   608     010C                     	;# 
   609     010D                     	;# 
   610     0111                     	;# 
   611     0112                     	;# 
   612     0113                     	;# 
   613     0114                     	;# 
   614     0115                     	;# 
   615     0116                     	;# 
   616     0117                     	;# 
   617     0118                     	;# 
   618     0119                     	;# 
   619     011A                     	;# 
   620     011B                     	;# 
   621     011D                     	;# 
   622     011E                     	;# 
   623     018C                     	;# 
   624     018D                     	;# 
   625     0191                     	;# 
   626     0191                     	;# 
   627     0192                     	;# 
   628     0193                     	;# 
   629     0193                     	;# 
   630     0193                     	;# 
   631     0194                     	;# 
   632     0195                     	;# 
   633     0196                     	;# 
   634     0199                     	;# 
   635     019A                     	;# 
   636     019B                     	;# 
   637     019B                     	;# 
   638     019B                     	;# 
   639     019B                     	;# 
   640     019C                     	;# 
   641     019C                     	;# 
   642     019D                     	;# 
   643     019E                     	;# 
   644     019F                     	;# 
   645     020C                     	;# 
   646     020D                     	;# 
   647     0211                     	;# 
   648     0211                     	;# 
   649     0212                     	;# 
   650     0212                     	;# 
   651     0213                     	;# 
   652     0213                     	;# 
   653     0214                     	;# 
   654     0214                     	;# 
   655     0215                     	;# 
   656     0215                     	;# 
   657     0215                     	;# 
   658     0216                     	;# 
   659     0216                     	;# 
   660     0217                     	;# 
   661     0217                     	;# 
   662     0219                     	;# 
   663     021A                     	;# 
   664     021B                     	;# 
   665     021C                     	;# 
   666     021D                     	;# 
   667     021E                     	;# 
   668     021F                     	;# 
   669     0291                     	;# 
   670     0291                     	;# 
   671     0292                     	;# 
   672     0293                     	;# 
   673     0294                     	;# 
   674     0295                     	;# 
   675     0295                     	;# 
   676     0296                     	;# 
   677     0298                     	;# 
   678     0298                     	;# 
   679     0299                     	;# 
   680     029A                     	;# 
   681     029B                     	;# 
   682     029C                     	;# 
   683     029C                     	;# 
   684     029D                     	;# 
   685     029E                     	;# 
   686     029E                     	;# 
   687     0311                     	;# 
   688     0311                     	;# 
   689     0312                     	;# 
   690     0313                     	;# 
   691     0318                     	;# 
   692     0318                     	;# 
   693     0319                     	;# 
   694     031A                     	;# 
   695     0394                     	;# 
   696     0395                     	;# 
   697     0396                     	;# 
   698     039A                     	;# 
   699     039C                     	;# 
   700     039D                     	;# 
   701     039E                     	;# 
   702     039F                     	;# 
   703     0415                     	;# 
   704     0416                     	;# 
   705     0417                     	;# 
   706     041C                     	;# 
   707     041D                     	;# 
   708     041E                     	;# 
   709     0FE4                     	;# 
   710     0FE5                     	;# 
   711     0FE6                     	;# 
   712     0FE7                     	;# 
   713     0FE8                     	;# 
   714     0FE9                     	;# 
   715     0FEA                     	;# 
   716     0FEB                     	;# 
   717     0FED                     	;# 
   718     0FEE                     	;# 
   719     0FEF                     	;# 
   720     0000                     	;# 
   721     0001                     	;# 
   722     0002                     	;# 
   723     0003                     	;# 
   724     0004                     	;# 
   725     0005                     	;# 
   726     0006                     	;# 
   727     0007                     	;# 
   728     0008                     	;# 
   729     0009                     	;# 
   730     000A                     	;# 
   731     000B                     	;# 
   732     000C                     	;# 
   733     000D                     	;# 
   734     0011                     	;# 
   735     0012                     	;# 
   736     0013                     	;# 
   737     0014                     	;# 
   738     0015                     	;# 
   739     0016                     	;# 
   740     0016                     	;# 
   741     0017                     	;# 
   742     0018                     	;# 
   743     0019                     	;# 
   744     001A                     	;# 
   745     001B                     	;# 
   746     001C                     	;# 
   747     001E                     	;# 
   748     001F                     	;# 
   749     008C                     	;# 
   750     008D                     	;# 
   751     0091                     	;# 
   752     0092                     	;# 
   753     0093                     	;# 
   754     0094                     	;# 
   755     0095                     	;# 
   756     0096                     	;# 
   757     0097                     	;# 
   758     0098                     	;# 
   759     0099                     	;# 
   760     009A                     	;# 
   761     009B                     	;# 
   762     009B                     	;# 
   763     009C                     	;# 
   764     009D                     	;# 
   765     009E                     	;# 
   766     010C                     	;# 
   767     010D                     	;# 
   768     0111                     	;# 
   769     0112                     	;# 
   770     0113                     	;# 
   771     0114                     	;# 
   772     0115                     	;# 
   773     0116                     	;# 
   774     0117                     	;# 
   775     0118                     	;# 
   776     0119                     	;# 
   777     011A                     	;# 
   778     011B                     	;# 
   779     011D                     	;# 
   780     011E                     	;# 
   781     018C                     	;# 
   782     018D                     	;# 
   783     0191                     	;# 
   784     0191                     	;# 
   785     0192                     	;# 
   786     0193                     	;# 
   787     0193                     	;# 
   788     0193                     	;# 
   789     0194                     	;# 
   790     0195                     	;# 
   791     0196                     	;# 
   792     0199                     	;# 
   793     019A                     	;# 
   794     019B                     	;# 
   795     019B                     	;# 
   796     019B                     	;# 
   797     019B                     	;# 
   798     019C                     	;# 
   799     019C                     	;# 
   800     019D                     	;# 
   801     019E                     	;# 
   802     019F                     	;# 
   803     020C                     	;# 
   804     020D                     	;# 
   805     0211                     	;# 
   806     0211                     	;# 
   807     0212                     	;# 
   808     0212                     	;# 
   809     0213                     	;# 
   810     0213                     	;# 
   811     0214                     	;# 
   812     0214                     	;# 
   813     0215                     	;# 
   814     0215                     	;# 
   815     0215                     	;# 
   816     0216                     	;# 
   817     0216                     	;# 
   818     0217                     	;# 
   819     0217                     	;# 
   820     0219                     	;# 
   821     021A                     	;# 
   822     021B                     	;# 
   823     021C                     	;# 
   824     021D                     	;# 
   825     021E                     	;# 
   826     021F                     	;# 
   827     0291                     	;# 
   828     0291                     	;# 
   829     0292                     	;# 
   830     0293                     	;# 
   831     0294                     	;# 
   832     0295                     	;# 
   833     0295                     	;# 
   834     0296                     	;# 
   835     0298                     	;# 
   836     0298                     	;# 
   837     0299                     	;# 
   838     029A                     	;# 
   839     029B                     	;# 
   840     029C                     	;# 
   841     029C                     	;# 
   842     029D                     	;# 
   843     029E                     	;# 
   844     029E                     	;# 
   845     0311                     	;# 
   846     0311                     	;# 
   847     0312                     	;# 
   848     0313                     	;# 
   849     0318                     	;# 
   850     0318                     	;# 
   851     0319                     	;# 
   852     031A                     	;# 
   853     0394                     	;# 
   854     0395                     	;# 
   855     0396                     	;# 
   856     039A                     	;# 
   857     039C                     	;# 
   858     039D                     	;# 
   859     039E                     	;# 
   860     039F                     	;# 
   861     0415                     	;# 
   862     0416                     	;# 
   863     0417                     	;# 
   864     041C                     	;# 
   865     041D                     	;# 
   866     041E                     	;# 
   867     0FE4                     	;# 
   868     0FE5                     	;# 
   869     0FE6                     	;# 
   870     0FE7                     	;# 
   871     0FE8                     	;# 
   872     0FE9                     	;# 
   873     0FEA                     	;# 
   874     0FEB                     	;# 
   875     0FED                     	;# 
   876     0FEE                     	;# 
   877     0FEF                     	;# 
   878     0000                     	;# 
   879     0001                     	;# 
   880     0002                     	;# 
   881     0003                     	;# 
   882     0004                     	;# 
   883     0005                     	;# 
   884     0006                     	;# 
   885     0007                     	;# 
   886     0008                     	;# 
   887     0009                     	;# 
   888     000A                     	;# 
   889     000B                     	;# 
   890     000C                     	;# 
   891     000D                     	;# 
   892     0011                     	;# 
   893     0012                     	;# 
   894     0013                     	;# 
   895     0014                     	;# 
   896     0015                     	;# 
   897     0016                     	;# 
   898     0016                     	;# 
   899     0017                     	;# 
   900     0018                     	;# 
   901     0019                     	;# 
   902     001A                     	;# 
   903     001B                     	;# 
   904     001C                     	;# 
   905     001E                     	;# 
   906     001F                     	;# 
   907     008C                     	;# 
   908     008D                     	;# 
   909     0091                     	;# 
   910     0092                     	;# 
   911     0093                     	;# 
   912     0094                     	;# 
   913     0095                     	;# 
   914     0096                     	;# 
   915     0097                     	;# 
   916     0098                     	;# 
   917     0099                     	;# 
   918     009A                     	;# 
   919     009B                     	;# 
   920     009B                     	;# 
   921     009C                     	;# 
   922     009D                     	;# 
   923     009E                     	;# 
   924     010C                     	;# 
   925     010D                     	;# 
   926     0111                     	;# 
   927     0112                     	;# 
   928     0113                     	;# 
   929     0114                     	;# 
   930     0115                     	;# 
   931     0116                     	;# 
   932     0117                     	;# 
   933     0118                     	;# 
   934     0119                     	;# 
   935     011A                     	;# 
   936     011B                     	;# 
   937     011D                     	;# 
   938     011E                     	;# 
   939     018C                     	;# 
   940     018D                     	;# 
   941     0191                     	;# 
   942     0191                     	;# 
   943     0192                     	;# 
   944     0193                     	;# 
   945     0193                     	;# 
   946     0193                     	;# 
   947     0194                     	;# 
   948     0195                     	;# 
   949     0196                     	;# 
   950     0199                     	;# 
   951     019A                     	;# 
   952     019B                     	;# 
   953     019B                     	;# 
   954     019B                     	;# 
   955     019B                     	;# 
   956     019C                     	;# 
   957     019C                     	;# 
   958     019D                     	;# 
   959     019E                     	;# 
   960     019F                     	;# 
   961     020C                     	;# 
   962     020D                     	;# 
   963     0211                     	;# 
   964     0211                     	;# 
   965     0212                     	;# 
   966     0212                     	;# 
   967     0213                     	;# 
   968     0213                     	;# 
   969     0214                     	;# 
   970     0214                     	;# 
   971     0215                     	;# 
   972     0215                     	;# 
   973     0215                     	;# 
   974     0216                     	;# 
   975     0216                     	;# 
   976     0217                     	;# 
   977     0217                     	;# 
   978     0219                     	;# 
   979     021A                     	;# 
   980     021B                     	;# 
   981     021C                     	;# 
   982     021D                     	;# 
   983     021E                     	;# 
   984     021F                     	;# 
   985     0291                     	;# 
   986     0291                     	;# 
   987     0292                     	;# 
   988     0293                     	;# 
   989     0294                     	;# 
   990     0295                     	;# 
   991     0295                     	;# 
   992     0296                     	;# 
   993     0298                     	;# 
   994     0298                     	;# 
   995     0299                     	;# 
   996     029A                     	;# 
   997     029B                     	;# 
   998     029C                     	;# 
   999     029C                     	;# 
  1000     029D                     	;# 
  1001     029E                     	;# 
  1002     029E                     	;# 
  1003     0311                     	;# 
  1004     0311                     	;# 
  1005     0312                     	;# 
  1006     0313                     	;# 
  1007     0318                     	;# 
  1008     0318                     	;# 
  1009     0319                     	;# 
  1010     031A                     	;# 
  1011     0394                     	;# 
  1012     0395                     	;# 
  1013     0396                     	;# 
  1014     039A                     	;# 
  1015     039C                     	;# 
  1016     039D                     	;# 
  1017     039E                     	;# 
  1018     039F                     	;# 
  1019     0415                     	;# 
  1020     0416                     	;# 
  1021     0417                     	;# 
  1022     041C                     	;# 
  1023     041D                     	;# 
  1024     041E                     	;# 
  1025     0FE4                     	;# 
  1026     0FE5                     	;# 
  1027     0FE6                     	;# 
  1028     0FE7                     	;# 
  1029     0FE8                     	;# 
  1030     0FE9                     	;# 
  1031     0FEA                     	;# 
  1032     0FEB                     	;# 
  1033     0FED                     	;# 
  1034     0FEE                     	;# 
  1035     0FEF                     	;# 
  1036     0000                     	;# 
  1037     0001                     	;# 
  1038     0002                     	;# 
  1039     0003                     	;# 
  1040     0004                     	;# 
  1041     0005                     	;# 
  1042     0006                     	;# 
  1043     0007                     	;# 
  1044     0008                     	;# 
  1045     0009                     	;# 
  1046     000A                     	;# 
  1047     000B                     	;# 
  1048     000C                     	;# 
  1049     000D                     	;# 
  1050     0011                     	;# 
  1051     0012                     	;# 
  1052     0013                     	;# 
  1053     0014                     	;# 
  1054     0015                     	;# 
  1055     0016                     	;# 
  1056     0016                     	;# 
  1057     0017                     	;# 
  1058     0018                     	;# 
  1059     0019                     	;# 
  1060     001A                     	;# 
  1061     001B                     	;# 
  1062     001C                     	;# 
  1063     001E                     	;# 
  1064     001F                     	;# 
  1065     008C                     	;# 
  1066     008D                     	;# 
  1067     0091                     	;# 
  1068     0092                     	;# 
  1069     0093                     	;# 
  1070     0094                     	;# 
  1071     0095                     	;# 
  1072     0096                     	;# 
  1073     0097                     	;# 
  1074     0098                     	;# 
  1075     0099                     	;# 
  1076     009A                     	;# 
  1077     009B                     	;# 
  1078     009B                     	;# 
  1079     009C                     	;# 
  1080     009D                     	;# 
  1081     009E                     	;# 
  1082     010C                     	;# 
  1083     010D                     	;# 
  1084     0111                     	;# 
  1085     0112                     	;# 
  1086     0113                     	;# 
  1087     0114                     	;# 
  1088     0115                     	;# 
  1089     0116                     	;# 
  1090     0117                     	;# 
  1091     0118                     	;# 
  1092     0119                     	;# 
  1093     011A                     	;# 
  1094     011B                     	;# 
  1095     011D                     	;# 
  1096     011E                     	;# 
  1097     018C                     	;# 
  1098     018D                     	;# 
  1099     0191                     	;# 
  1100     0191                     	;# 
  1101     0192                     	;# 
  1102     0193                     	;# 
  1103     0193                     	;# 
  1104     0193                     	;# 
  1105     0194                     	;# 
  1106     0195                     	;# 
  1107     0196                     	;# 
  1108     0199                     	;# 
  1109     019A                     	;# 
  1110     019B                     	;# 
  1111     019B                     	;# 
  1112     019B                     	;# 
  1113     019B                     	;# 
  1114     019C                     	;# 
  1115     019C                     	;# 
  1116     019D                     	;# 
  1117     019E                     	;# 
  1118     019F                     	;# 
  1119     020C                     	;# 
  1120     020D                     	;# 
  1121     0211                     	;# 
  1122     0211                     	;# 
  1123     0212                     	;# 
  1124     0212                     	;# 
  1125     0213                     	;# 
  1126     0213                     	;# 
  1127     0214                     	;# 
  1128     0214                     	;# 
  1129     0215                     	;# 
  1130     0215                     	;# 
  1131     0215                     	;# 
  1132     0216                     	;# 
  1133     0216                     	;# 
  1134     0217                     	;# 
  1135     0217                     	;# 
  1136     0219                     	;# 
  1137     021A                     	;# 
  1138     021B                     	;# 
  1139     021C                     	;# 
  1140     021D                     	;# 
  1141     021E                     	;# 
  1142     021F                     	;# 
  1143     0291                     	;# 
  1144     0291                     	;# 
  1145     0292                     	;# 
  1146     0293                     	;# 
  1147     0294                     	;# 
  1148     0295                     	;# 
  1149     0295                     	;# 
  1150     0296                     	;# 
  1151     0298                     	;# 
  1152     0298                     	;# 
  1153     0299                     	;# 
  1154     029A                     	;# 
  1155     029B                     	;# 
  1156     029C                     	;# 
  1157     029C                     	;# 
  1158     029D                     	;# 
  1159     029E                     	;# 
  1160     029E                     	;# 
  1161     0311                     	;# 
  1162     0311                     	;# 
  1163     0312                     	;# 
  1164     0313                     	;# 
  1165     0318                     	;# 
  1166     0318                     	;# 
  1167     0319                     	;# 
  1168     031A                     	;# 
  1169     0394                     	;# 
  1170     0395                     	;# 
  1171     0396                     	;# 
  1172     039A                     	;# 
  1173     039C                     	;# 
  1174     039D                     	;# 
  1175     039E                     	;# 
  1176     039F                     	;# 
  1177     0415                     	;# 
  1178     0416                     	;# 
  1179     0417                     	;# 
  1180     041C                     	;# 
  1181     041D                     	;# 
  1182     041E                     	;# 
  1183     0FE4                     	;# 
  1184     0FE5                     	;# 
  1185     0FE6                     	;# 
  1186     0FE7                     	;# 
  1187     0FE8                     	;# 
  1188     0FE9                     	;# 
  1189     0FEA                     	;# 
  1190     0FEB                     	;# 
  1191     0FED                     	;# 
  1192     0FEE                     	;# 
  1193     0FEF                     	;# 
  1194     0000                     	;# 
  1195     0001                     	;# 
  1196     0002                     	;# 
  1197     0003                     	;# 
  1198     0004                     	;# 
  1199     0005                     	;# 
  1200     0006                     	;# 
  1201     0007                     	;# 
  1202     0008                     	;# 
  1203     0009                     	;# 
  1204     000A                     	;# 
  1205     000B                     	;# 
  1206     000C                     	;# 
  1207     000D                     	;# 
  1208     0011                     	;# 
  1209     0012                     	;# 
  1210     0013                     	;# 
  1211     0014                     	;# 
  1212     0015                     	;# 
  1213     0016                     	;# 
  1214     0016                     	;# 
  1215     0017                     	;# 
  1216     0018                     	;# 
  1217     0019                     	;# 
  1218     001A                     	;# 
  1219     001B                     	;# 
  1220     001C                     	;# 
  1221     001E                     	;# 
  1222     001F                     	;# 
  1223     008C                     	;# 
  1224     008D                     	;# 
  1225     0091                     	;# 
  1226     0092                     	;# 
  1227     0093                     	;# 
  1228     0094                     	;# 
  1229     0095                     	;# 
  1230     0096                     	;# 
  1231     0097                     	;# 
  1232     0098                     	;# 
  1233     0099                     	;# 
  1234     009A                     	;# 
  1235     009B                     	;# 
  1236     009B                     	;# 
  1237     009C                     	;# 
  1238     009D                     	;# 
  1239     009E                     	;# 
  1240     010C                     	;# 
  1241     010D                     	;# 
  1242     0111                     	;# 
  1243     0112                     	;# 
  1244     0113                     	;# 
  1245     0114                     	;# 
  1246     0115                     	;# 
  1247     0116                     	;# 
  1248     0117                     	;# 
  1249     0118                     	;# 
  1250     0119                     	;# 
  1251     011A                     	;# 
  1252     011B                     	;# 
  1253     011D                     	;# 
  1254     011E                     	;# 
  1255     018C                     	;# 
  1256     018D                     	;# 
  1257     0191                     	;# 
  1258     0191                     	;# 
  1259     0192                     	;# 
  1260     0193                     	;# 
  1261     0193                     	;# 
  1262     0193                     	;# 
  1263     0194                     	;# 
  1264     0195                     	;# 
  1265     0196                     	;# 
  1266     0199                     	;# 
  1267     019A                     	;# 
  1268     019B                     	;# 
  1269     019B                     	;# 
  1270     019B                     	;# 
  1271     019B                     	;# 
  1272     019C                     	;# 
  1273     019C                     	;# 
  1274     019D                     	;# 
  1275     019E                     	;# 
  1276     019F                     	;# 
  1277     020C                     	;# 
  1278     020D                     	;# 
  1279     0211                     	;# 
  1280     0211                     	;# 
  1281     0212                     	;# 
  1282     0212                     	;# 
  1283     0213                     	;# 
  1284     0213                     	;# 
  1285     0214                     	;# 
  1286     0214                     	;# 
  1287     0215                     	;# 
  1288     0215                     	;# 
  1289     0215                     	;# 
  1290     0216                     	;# 
  1291     0216                     	;# 
  1292     0217                     	;# 
  1293     0217                     	;# 
  1294     0219                     	;# 
  1295     021A                     	;# 
  1296     021B                     	;# 
  1297     021C                     	;# 
  1298     021D                     	;# 
  1299     021E                     	;# 
  1300     021F                     	;# 
  1301     0291                     	;# 
  1302     0291                     	;# 
  1303     0292                     	;# 
  1304     0293                     	;# 
  1305     0294                     	;# 
  1306     0295                     	;# 
  1307     0295                     	;# 
  1308     0296                     	;# 
  1309     0298                     	;# 
  1310     0298                     	;# 
  1311     0299                     	;# 
  1312     029A                     	;# 
  1313     029B                     	;# 
  1314     029C                     	;# 
  1315     029C                     	;# 
  1316     029D                     	;# 
  1317     029E                     	;# 
  1318     029E                     	;# 
  1319     0311                     	;# 
  1320     0311                     	;# 
  1321     0312                     	;# 
  1322     0313                     	;# 
  1323     0318                     	;# 
  1324     0318                     	;# 
  1325     0319                     	;# 
  1326     031A                     	;# 
  1327     0394                     	;# 
  1328     0395                     	;# 
  1329     0396                     	;# 
  1330     039A                     	;# 
  1331     039C                     	;# 
  1332     039D                     	;# 
  1333     039E                     	;# 
  1334     039F                     	;# 
  1335     0415                     	;# 
  1336     0416                     	;# 
  1337     0417                     	;# 
  1338     041C                     	;# 
  1339     041D                     	;# 
  1340     041E                     	;# 
  1341     0FE4                     	;# 
  1342     0FE5                     	;# 
  1343     0FE6                     	;# 
  1344     0FE7                     	;# 
  1345     0FE8                     	;# 
  1346     0FE9                     	;# 
  1347     0FEA                     	;# 
  1348     0FEB                     	;# 
  1349     0FED                     	;# 
  1350     0FEE                     	;# 
  1351     0FEF                     	;# 
  1352                           
  1353 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1354     0000                     
  1355 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1356     0000                     
  1357 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1358     0000                     
  1359                           	psect	idataBANK1
  1360     073B                     __pidataBANK1:
  1361                           
  1362                           ;initializer for _randx
  1363     073B  3401               	retlw	1
  1364     073C  3400               	retlw	0
  1365     073D  3400               	retlw	0
  1366     073E  3400               	retlw	0
  1367                           
  1368                           	psect	stringtext1
  1369     073F                     __pstringtext1:
  1370     073F                     _spi1_configuration:
  1371     073F  3401               	retlw	1
  1372     0740  3440               	retlw	64
  1373     0741  3401               	retlw	1
  1374     0742  3400               	retlw	0
  1375     0743                     __end_of_spi1_configuration:
  1376                           
  1377                           	psect	nvBANK0
  1378     0063                     __pnvBANK0:
  1379     0063                     _a:
  1380     0063                     	ds	3
  1381     0066                     _TMR1_InterruptHandler:
  1382     0066                     	ds	2
  1383     0068                     _T:
  1384     0068                     	ds	1
  1385                           
  1386                           	psect	nvBANK1
  1387     00D9                     __pnvBANK1:
  1388     00D9                     _EUSART_ErrorHandler:
  1389     00D9                     	ds	2
  1390     00DB                     _EUSART_OverrunErrorHandler:
  1391     00DB                     	ds	2
  1392     00DD                     _EUSART_FramingErrorHandler:
  1393     00DD                     	ds	2
  1394     000B                     _INTCONbits	set	11
  1395     0018                     _T1CONbits	set	24
  1396     0018                     _T1CON	set	24
  1397     0011                     _PIR1bits	set	17
  1398     0016                     _TMR1L	set	22
  1399     0017                     _TMR1H	set	23
  1400     0019                     _T1GCON	set	25
  1401     008D                     _TRISBbits	set	141
  1402     0091                     _PIE1bits	set	145
  1403     0095                     _OPTION_REGbits	set	149
  1404     008D                     _TRISB	set	141
  1405     008C                     _TRISA	set	140
  1406     0097                     _WDTCON	set	151
  1407     0098                     _OSCTUNE	set	152
  1408     0099                     _OSCCON	set	153
  1409     011E                     _APFCON1	set	286
  1410     011D                     _APFCON0	set	285
  1411     010D                     _LATB	set	269
  1412     010C                     _LATA	set	268
  1413     0116                     _BORCON	set	278
  1414     0199                     _RCREG	set	409
  1415     019D                     _RCSTAbits	set	413
  1416     019C                     _SPBRGH	set	412
  1417     019B                     _SPBRGL	set	411
  1418     019E                     _TXSTA	set	414
  1419     019D                     _RCSTA	set	413
  1420     019F                     _BAUDCON	set	415
  1421     018C                     _ANSELA	set	396
  1422     018D                     _ANSELB	set	397
  1423     0215                     _SSP1CON1bits	set	533
  1424     0212                     _SSP1ADD	set	530
  1425     0215                     _SSP1CON1	set	533
  1426     0214                     _SSP1STAT	set	532
  1427     020C                     _WPUA	set	524
  1428     020D                     _WPUB	set	525
  1429                           
  1430                           	psect	cinit
  1431     0014                     start_initialization:	
  1432                           ; #config settings
  1433                           
  1434     0014                     __initialization:
  1435                           
  1436                           ; Initialize objects allocated to BANK1
  1437     0014  0021               	movlb	1	; select bank1
  1438     0015  3187  273B  3180   	fcall	__pidataBANK1	;fetch initializer
  1439     0018  00DF               	movwf	__pdataBANK1& (0+127)
  1440     0019  3187  273C  3180   	fcall	__pidataBANK1+1	;fetch initializer
  1441     001C  00E0               	movwf	(__pdataBANK1+1)& (0+127)
  1442     001D  3187  273D  3180   	fcall	__pidataBANK1+2	;fetch initializer
  1443     0020  00E1               	movwf	(__pdataBANK1+2)& (0+127)
  1444     0021  3187  273E         	fcall	__pidataBANK1+3	;fetch initializer
  1445     0023  00E2               	movwf	(__pdataBANK1+3)& (0+127)
  1446                           
  1447                           ; Clear objects allocated to BANK0
  1448     0024  0020               	movlb	0	; select bank0
  1449     0025  01DC               	clrf	__pbssBANK0& (0+127)
  1450     0026  01DD               	clrf	(__pbssBANK0+1)& (0+127)
  1451     0027  01DE               	clrf	(__pbssBANK0+2)& (0+127)
  1452     0028  01DF               	clrf	(__pbssBANK0+3)& (0+127)
  1453     0029  01E0               	clrf	(__pbssBANK0+4)& (0+127)
  1454     002A  01E1               	clrf	(__pbssBANK0+5)& (0+127)
  1455     002B  01E2               	clrf	(__pbssBANK0+6)& (0+127)
  1456                           
  1457                           ; Clear objects allocated to BANK1
  1458     002C  0021               	movlb	1	; select bank1
  1459     002D  01E3               	clrf	__pbssBANK1& (0+127)
  1460     002E                     end_of_initialization:	
  1461                           ;End of C runtime variable initialization code
  1462                           
  1463     002E                     __end_of__initialization:
  1464     002E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1465     002F  0020               	movlb	0
  1466     0030  3182  2A92         	ljmp	_main	;jump to C main() function
  1467                           
  1468                           	psect	bssBANK0
  1469     005C                     __pbssBANK0:
  1470     005C                     _errno:
  1471     005C                     	ds	2
  1472     005E                     _timer1ReloadVal:
  1473     005E                     	ds	2
  1474     0060                     renderMatrix@count:
  1475     0060                     	ds	1
  1476     0061                     _coordinates:
  1477     0061                     	ds	1
  1478     0062                     _incX:
  1479     0062                     	ds	1
  1480                           
  1481                           	psect	bssBANK1
  1482     00E3                     __pbssBANK1:
  1483     00E3                     _eusartRxLastError:
  1484     00E3                     	ds	1
  1485                           
  1486                           	psect	dataBANK1
  1487     00DF                     __pdataBANK1:
  1488     00DF                     _randx:
  1489     00DF                     	ds	4
  1490                           
  1491                           	psect	cstackBANK1
  1492     00A0                     __pcstackBANK1:
  1493     00A0                     ??_SPI1_Initialize:
  1494     00A0                     ??_PIN_MANAGER_Initialize:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497     00A0                     ??_OSCILLATOR_Initialize:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500     00A0                     ??_WDT_Initialize:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503     00A0                     ?_TMR1_SetInterruptHandler:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506     00A0                     ?_EUSART_SetFramingErrorHandler:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509     00A0                     ?_EUSART_SetOverrunErrorHandler:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512     00A0                     ?_EUSART_SetErrorHandler:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515     00A0                     ??_EUSART_is_rx_ready:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518     00A0                     ??_EUSART_Read:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521     00A0                     ?___ftpack:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524     00A0                     ?___lmul:	
  1525                           ; 3 bytes @ 0x0
  1526                           
  1527     00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  1528                           ; 4 bytes @ 0x0
  1529                           
  1530     00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1531                           ; 2 bytes @ 0x0
  1532                           
  1533     00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1534                           ; 2 bytes @ 0x0
  1535                           
  1536     00A0                     EUSART_SetErrorHandler@interruptHandler:	
  1537                           ; 2 bytes @ 0x0
  1538                           
  1539     00A0                     ___ftpack@arg:	
  1540                           ; 2 bytes @ 0x0
  1541                           
  1542     00A0                     ___lmul@multiplier:	
  1543                           ; 3 bytes @ 0x0
  1544                           
  1545                           
  1546                           ; 4 bytes @ 0x0
  1547     00A0                     	ds	2
  1548     00A2                     ??_TMR1_Initialize:
  1549     00A2                     ??_EUSART_Initialize:	
  1550                           ; 1 bytes @ 0x2
  1551                           
  1552     00A2                     ??_TMR1_SetInterruptHandler:	
  1553                           ; 1 bytes @ 0x2
  1554                           
  1555     00A2                     ??_EUSART_SetFramingErrorHandler:	
  1556                           ; 1 bytes @ 0x2
  1557                           
  1558     00A2                     ??_EUSART_SetOverrunErrorHandler:	
  1559                           ; 1 bytes @ 0x2
  1560                           
  1561     00A2                     ??_EUSART_SetErrorHandler:	
  1562                           ; 1 bytes @ 0x2
  1563                           
  1564     00A2                     ??_SYSTEM_Initialize:	
  1565                           ; 1 bytes @ 0x2
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x2
  1569     00A2                     	ds	1
  1570     00A3                     ___ftpack@exp:
  1571                           
  1572                           ; 1 bytes @ 0x3
  1573     00A3                     	ds	1
  1574     00A4                     ___ftpack@sign:
  1575     00A4                     ___lmul@multiplicand:	
  1576                           ; 1 bytes @ 0x4
  1577                           
  1578                           
  1579                           ; 4 bytes @ 0x4
  1580     00A4                     	ds	1
  1581     00A5                     ??___ftpack:
  1582                           
  1583                           ; 1 bytes @ 0x5
  1584     00A5                     	ds	3
  1585     00A8                     ??___lmul:
  1586     00A8                     ___lmul@product:	
  1587                           ; 1 bytes @ 0x8
  1588                           
  1589                           
  1590                           ; 4 bytes @ 0x8
  1591     00A8                     	ds	4
  1592     00AC                     ?_rand:
  1593                           
  1594                           ; 2 bytes @ 0xC
  1595     00AC                     	ds	2
  1596     00AE                     ??_rand:
  1597                           
  1598                           ; 1 bytes @ 0xE
  1599     00AE                     	ds	5
  1600     00B3                     ?___awtoft:
  1601     00B3                     ___awtoft@c:	
  1602                           ; 3 bytes @ 0x13
  1603                           
  1604                           
  1605                           ; 2 bytes @ 0x13
  1606     00B3                     	ds	3
  1607     00B6                     ??___awtoft:
  1608     00B6                     ___awtoft@sign:	
  1609                           ; 1 bytes @ 0x16
  1610                           
  1611                           
  1612                           ; 1 bytes @ 0x16
  1613     00B6                     	ds	1
  1614     00B7                     ?___ftmul:
  1615     00B7                     ___ftmul@f1:	
  1616                           ; 3 bytes @ 0x17
  1617                           
  1618                           
  1619                           ; 3 bytes @ 0x17
  1620     00B7                     	ds	3
  1621     00BA                     ___ftmul@f2:
  1622                           
  1623                           ; 3 bytes @ 0x1A
  1624     00BA                     	ds	3
  1625     00BD                     ??___ftmul:
  1626                           
  1627                           ; 1 bytes @ 0x1D
  1628     00BD                     	ds	3
  1629     00C0                     ___ftmul@exp:
  1630                           
  1631                           ; 1 bytes @ 0x20
  1632     00C0                     	ds	1
  1633     00C1                     ___ftmul@f3_as_product:
  1634                           
  1635                           ; 3 bytes @ 0x21
  1636     00C1                     	ds	3
  1637     00C4                     ___ftmul@cntr:
  1638                           
  1639                           ; 1 bytes @ 0x24
  1640     00C4                     	ds	1
  1641     00C5                     ___ftmul@sign:
  1642                           
  1643                           ; 1 bytes @ 0x25
  1644     00C5                     	ds	1
  1645     00C6                     ?___ftadd:
  1646     00C6                     ___ftadd@f1:	
  1647                           ; 3 bytes @ 0x26
  1648                           
  1649                           
  1650                           ; 3 bytes @ 0x26
  1651     00C6                     	ds	3
  1652     00C9                     ___ftadd@f2:
  1653                           
  1654                           ; 3 bytes @ 0x29
  1655     00C9                     	ds	3
  1656     00CC                     ??___ftadd:
  1657                           
  1658                           ; 1 bytes @ 0x2C
  1659     00CC                     	ds	3
  1660     00CF                     ___ftadd@sign:
  1661                           
  1662                           ; 1 bytes @ 0x2F
  1663     00CF                     	ds	1
  1664     00D0                     ___ftadd@exp2:
  1665                           
  1666                           ; 1 bytes @ 0x30
  1667     00D0                     	ds	1
  1668     00D1                     ___ftadd@exp1:
  1669                           
  1670                           ; 1 bytes @ 0x31
  1671     00D1                     	ds	1
  1672     00D2                     ??_restart:
  1673                           
  1674                           ; 1 bytes @ 0x32
  1675     00D2                     	ds	3
  1676     00D5                     ??_main:
  1677                           
  1678                           ; 1 bytes @ 0x35
  1679     00D5                     	ds	3
  1680     00D8                     main@rxByte:
  1681                           
  1682                           ; 1 bytes @ 0x38
  1683     00D8                     	ds	1
  1684                           
  1685                           	psect	cstackCOMMON
  1686     0070                     __pcstackCOMMON:
  1687     0070                     ?_SPI1_Initialize:
  1688     0070                     ?_PIN_MANAGER_Initialize:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691     0070                     ?_OSCILLATOR_Initialize:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694     0070                     ?_WDT_Initialize:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697     0070                     ?_TMR1_Initialize:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700     0070                     ?_EUSART_Initialize:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703     0070                     ?_TMR1_DefaultInterruptHandler:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706     0070                     ??_TMR1_DefaultInterruptHandler:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709     0070                     ?_renderMatrix:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712     0070                     ?_restart:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715     0070                     ?_getParameters:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718     0070                     ??_getParameters:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721     0070                     ?_SYSTEM_Initialize:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724     0070                     ?_TMR1_WriteTimer:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727     0070                     ?_TMR1_ISR:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730     0070                     ?_INTERRUPT_InterruptManager:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733     0070                     ?_EUSART_is_rx_ready:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736     0070                     ?_EUSART_Read:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739     0070                     ?_main:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742     0070                     ?_frexp:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745     0070                     ?i1___ftpack:	
  1746                           ; 3 bytes @ 0x0
  1747                           
  1748     0070                     TMR1_WriteTimer@timerVal:	
  1749                           ; 3 bytes @ 0x0
  1750                           
  1751     0070                     frexp@value:	
  1752                           ; 2 bytes @ 0x0
  1753                           
  1754     0070                     i1___ftpack@arg:	
  1755                           ; 3 bytes @ 0x0
  1756                           
  1757                           
  1758                           ; 3 bytes @ 0x0
  1759     0070                     	ds	2
  1760     0072                     ??_TMR1_WriteTimer:
  1761                           
  1762                           ; 1 bytes @ 0x2
  1763     0072                     	ds	1
  1764     0073                     frexp@eptr:
  1765     0073                     i1___ftpack@exp:	
  1766                           ; 1 bytes @ 0x3
  1767                           
  1768                           
  1769                           ; 1 bytes @ 0x3
  1770     0073                     	ds	1
  1771     0074                     ??_frexp:
  1772     0074                     i1___ftpack@sign:	
  1773                           ; 1 bytes @ 0x4
  1774                           
  1775                           
  1776                           ; 1 bytes @ 0x4
  1777     0074                     	ds	1
  1778     0075                     ??i1___ftpack:
  1779                           
  1780                           ; 1 bytes @ 0x5
  1781     0075                     	ds	3
  1782     0078                     ?___lbtoft:
  1783                           
  1784                           ; 3 bytes @ 0x8
  1785     0078                     	ds	3
  1786     007B                     ??___lbtoft:
  1787                           
  1788                           ; 1 bytes @ 0xB
  1789     007B                     	ds	3
  1790     007E                     ??_round:
  1791     007E                     ??_trunc:	
  1792                           ; 1 bytes @ 0xE
  1793                           
  1794     007E                     ??_TMR1_ISR:	
  1795                           ; 1 bytes @ 0xE
  1796                           
  1797     007E                     ??_INTERRUPT_InterruptManager:	
  1798                           ; 1 bytes @ 0xE
  1799                           
  1800     007E                     ??___ftsub:	
  1801                           ; 1 bytes @ 0xE
  1802                           
  1803                           
  1804                           	psect	cstackBANK0
  1805     0020                     __pcstackBANK0:	
  1806                           ; 1 bytes @ 0xE
  1807                           
  1808     0020                     ___lbtoft@c:
  1809                           
  1810                           ; 1 bytes @ 0x0
  1811     0020                     	ds	1
  1812     0021                     ?i1___ftadd:
  1813     0021                     i1___ftadd@f1:	
  1814                           ; 3 bytes @ 0x1
  1815                           
  1816                           
  1817                           ; 3 bytes @ 0x1
  1818     0021                     	ds	3
  1819     0024                     i1___ftadd@f2:
  1820                           
  1821                           ; 3 bytes @ 0x4
  1822     0024                     	ds	3
  1823     0027                     ??i1___ftadd:
  1824                           
  1825                           ; 1 bytes @ 0x7
  1826     0027                     	ds	3
  1827     002A                     i1___ftadd@sign:
  1828                           
  1829                           ; 1 bytes @ 0xA
  1830     002A                     	ds	1
  1831     002B                     i1___ftadd@exp2:
  1832                           
  1833                           ; 1 bytes @ 0xB
  1834     002B                     	ds	1
  1835     002C                     i1___ftadd@exp1:
  1836                           
  1837                           ; 1 bytes @ 0xC
  1838     002C                     	ds	1
  1839     002D                     ?___fttol:
  1840     002D                     ___fttol@f1:	
  1841                           ; 4 bytes @ 0xD
  1842                           
  1843                           
  1844                           ; 3 bytes @ 0xD
  1845     002D                     	ds	4
  1846     0031                     ??___fttol:
  1847                           
  1848                           ; 1 bytes @ 0x11
  1849     0031                     	ds	3
  1850     0034                     ___fttol@sign1:
  1851                           
  1852                           ; 1 bytes @ 0x14
  1853     0034                     	ds	1
  1854     0035                     ___fttol@lval:
  1855                           
  1856                           ; 4 bytes @ 0x15
  1857     0035                     	ds	4
  1858     0039                     ___fttol@exp1:
  1859                           
  1860                           ; 1 bytes @ 0x19
  1861     0039                     	ds	1
  1862     003A                     ?___altoft:
  1863     003A                     ___altoft@c:	
  1864                           ; 3 bytes @ 0x1A
  1865                           
  1866                           
  1867                           ; 4 bytes @ 0x1A
  1868     003A                     	ds	4
  1869     003E                     ??___altoft:
  1870                           
  1871                           ; 1 bytes @ 0x1E
  1872     003E                     	ds	1
  1873     003F                     ___altoft@exp:
  1874                           
  1875                           ; 1 bytes @ 0x1F
  1876     003F                     	ds	1
  1877     0040                     ___altoft@sign:
  1878                           
  1879                           ; 1 bytes @ 0x20
  1880     0040                     	ds	1
  1881     0041                     ?_trunc:
  1882     0041                     trunc@x:	
  1883                           ; 3 bytes @ 0x21
  1884                           
  1885                           
  1886                           ; 3 bytes @ 0x21
  1887     0041                     	ds	3
  1888     0044                     trunc@i:
  1889                           
  1890                           ; 3 bytes @ 0x24
  1891     0044                     	ds	3
  1892     0047                     trunc@expon:
  1893                           
  1894                           ; 2 bytes @ 0x27
  1895     0047                     	ds	2
  1896     0049                     ?___ftsub:
  1897     0049                     ___ftsub@f2:	
  1898                           ; 3 bytes @ 0x29
  1899                           
  1900                           
  1901                           ; 3 bytes @ 0x29
  1902     0049                     	ds	3
  1903     004C                     ___ftsub@f1:
  1904                           
  1905                           ; 3 bytes @ 0x2C
  1906     004C                     	ds	3
  1907     004F                     ?_round:
  1908     004F                     round@x:	
  1909                           ; 3 bytes @ 0x2F
  1910                           
  1911                           
  1912                           ; 3 bytes @ 0x2F
  1913     004F                     	ds	3
  1914     0052                     round@f:
  1915                           
  1916                           ; 3 bytes @ 0x32
  1917     0052                     	ds	3
  1918     0055                     ??_renderMatrix:
  1919                           
  1920                           ; 1 bytes @ 0x35
  1921     0055                     	ds	1
  1922     0056                     _renderMatrix$1354:
  1923                           
  1924                           ; 3 bytes @ 0x36
  1925     0056                     	ds	3
  1926     0059                     _renderMatrix$1372:
  1927                           
  1928                           ; 3 bytes @ 0x39
  1929     0059                     	ds	3
  1930                           
  1931                           	psect	maintext
  1932     0292                     __pmaintext:	
  1933 ;;
  1934 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1935 ;;
  1936 ;; *************** function _main *****************
  1937 ;; Defined at:
  1938 ;;		line 51 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  rxByte          1   56[BANK1 ] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : B1F/0
  1949 ;;		On exit  : 1F/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1952 ;;      Params:         0       0       0       0       0       0
  1953 ;;      Locals:         0       0       1       0       0       0
  1954 ;;      Temps:          0       0       3       0       0       0
  1955 ;;      Totals:         0       0       4       0       0       0
  1956 ;;Total ram usage:        4 bytes
  1957 ;; Hardware stack levels required when called: 10
  1958 ;; This function calls:
  1959 ;;		_EUSART_Read
  1960 ;;		_EUSART_is_rx_ready
  1961 ;;		_SYSTEM_Initialize
  1962 ;;		_TMR1_SetInterruptHandler
  1963 ;;		___awtoft
  1964 ;;		___ftadd
  1965 ;;		___ftmul
  1966 ;;		_rand
  1967 ;;		_restart
  1968 ;; This function is called by:
  1969 ;;		Startup code after reset
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973     0292                     _main:	
  1974                           ;psect for function _main
  1975                           
  1976                           
  1977                           ;main.c: 54: SYSTEM_Initialize();
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1981     0292  3186  26CF  3182   	fcall	_SYSTEM_Initialize
  1982                           
  1983                           ;main.c: 55: TMR1_SetInterruptHandler(renderMatrix);
  1984     0295  308F               	movlw	low _renderMatrix
  1985     0296  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  1986     0297  3004               	movlw	high _renderMatrix
  1987     0298  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  1988     0299  3187  2718  3182   	fcall	_TMR1_SetInterruptHandler
  1989                           
  1990                           ;main.c: 56: coordinates.x = 0;
  1991     029C  300F               	movlw	-241
  1992     029D  05E1               	andwf	_coordinates,f
  1993                           
  1994                           ;main.c: 57: coordinates.y = rand() % 8;
  1995     029E  3185  2520  3182   	fcall	_rand
  1996     02A1  082C               	movf	?_rand^(0+128),w
  1997     02A2  00D5               	movwf	??_main^(0+128)
  1998     02A3  082D               	movf	(?_rand+1)^(0+128),w
  1999     02A4  00D6               	movwf	(??_main^(0+128)+1)
  2000     02A5  3007               	movlw	7
  2001     02A6  0555               	andwf	??_main^(0+128),w
  2002     02A7  00D7               	movwf	(??_main+2)^(0+128)
  2003     02A8  0020               	movlb	0	; select bank0
  2004     02A9  0861               	movf	_coordinates,w
  2005     02AA  0021               	movlb	1	; select bank1
  2006     02AB  0657               	xorwf	(??_main+2)^(0+128),w
  2007     02AC  39F0               	andlw	-16
  2008     02AD  0657               	xorwf	(??_main+2)^(0+128),w
  2009     02AE  0020               	movlb	0	; select bank0
  2010     02AF  00E1               	movwf	_coordinates
  2011                           
  2012                           ;main.c: 58: T = (rand() % 16) + 8;
  2013     02B0  3185  2520  3182   	fcall	_rand
  2014     02B3  082C               	movf	?_rand^(0+128),w
  2015     02B4  390F               	andlw	15
  2016     02B5  3E08               	addlw	8
  2017     02B6  0020               	movlb	0	; select bank0
  2018     02B7  00E8               	movwf	_T
  2019                           
  2020                           ;main.c: 59: a = (rand() % 32)*(float)0.1 + (float)1.6;
  2021     02B8  30CD               	movlw	205
  2022     02B9  0021               	movlb	1	; select bank1
  2023     02BA  00C6               	movwf	___ftadd@f1^(0+128)
  2024     02BB  30CC               	movlw	204
  2025     02BC  00C7               	movwf	(___ftadd@f1+1)^(0+128)
  2026     02BD  303F               	movlw	63
  2027     02BE  00C8               	movwf	(___ftadd@f1+2)^(0+128)
  2028     02BF  30CD               	movlw	205
  2029     02C0  00B7               	movwf	___ftmul@f1^(0+128)
  2030     02C1  30CC               	movlw	204
  2031     02C2  00B8               	movwf	(___ftmul@f1+1)^(0+128)
  2032     02C3  303D               	movlw	61
  2033     02C4  00B9               	movwf	(___ftmul@f1+2)^(0+128)
  2034     02C5  3185  2520  3182   	fcall	_rand
  2035     02C8  301F               	movlw	31
  2036     02C9  052C               	andwf	?_rand^(0+128),w
  2037     02CA  00B3               	movwf	___awtoft@c^(0+128)
  2038     02CB  3000               	movlw	0
  2039     02CC  052D               	andwf	(?_rand+1)^(0+128),w
  2040     02CD  00B4               	movwf	(___awtoft@c+1)^(0+128)
  2041     02CE  3186  2650  3182   	fcall	___awtoft
  2042     02D1  0833               	movf	?___awtoft^(0+128),w
  2043     02D2  00BA               	movwf	___ftmul@f2^(0+128)
  2044     02D3  0834               	movf	(?___awtoft+1)^(0+128),w
  2045     02D4  00BB               	movwf	(___ftmul@f2+1)^(0+128)
  2046     02D5  0835               	movf	(?___awtoft+2)^(0+128),w
  2047     02D6  00BC               	movwf	(___ftmul@f2+2)^(0+128)
  2048     02D7  3182  2206  3182   	fcall	___ftmul
  2049     02DA  0837               	movf	?___ftmul^(0+128),w
  2050     02DB  00C9               	movwf	___ftadd@f2^(0+128)
  2051     02DC  0838               	movf	(?___ftmul+1)^(0+128),w
  2052     02DD  00CA               	movwf	(___ftadd@f2+1)^(0+128)
  2053     02DE  0839               	movf	(?___ftmul+2)^(0+128),w
  2054     02DF  00CB               	movwf	(___ftadd@f2+2)^(0+128)
  2055     02E0  3180  2032  3182   	fcall	___ftadd
  2056     02E3  0846               	movf	?___ftadd^(0+128),w
  2057     02E4  0020               	movlb	0	; select bank0
  2058     02E5  00E3               	movwf	_a
  2059     02E6  0021               	movlb	1	; select bank1
  2060     02E7  0847               	movf	(?___ftadd+1)^(0+128),w
  2061     02E8  0020               	movlb	0	; select bank0
  2062     02E9  00E4               	movwf	_a+1
  2063     02EA  0021               	movlb	1	; select bank1
  2064     02EB  0848               	movf	(?___ftadd+2)^(0+128),w
  2065     02EC  0020               	movlb	0	; select bank0
  2066     02ED  00E5               	movwf	_a+2
  2067                           
  2068                           ;main.c: 65: (INTCONbits.GIE = 1);
  2069     02EE  178B               	bsf	11,7	;volatile
  2070                           
  2071                           ;main.c: 68: (INTCONbits.PEIE = 1);
  2072     02EF  170B               	bsf	11,6	;volatile
  2073     02F0                     l2071:
  2074                           
  2075                           ;main.c: 78: {;main.c: 79: if(EUSART_is_rx_ready())
  2076     02F0  3187  2736  3182   	fcall	_EUSART_is_rx_ready
  2077     02F3  3A00               	xorlw	0
  2078     02F4  1903               	skipnz
  2079     02F5  2AF0               	goto	l2071
  2080                           
  2081                           ;main.c: 80: {;main.c: 81: uint8_t rxByte = EUSART_Read();
  2082     02F6  3187  270D  3182   	fcall	_EUSART_Read
  2083     02F9  0021               	movlb	1	; select bank1
  2084     02FA  00D8               	movwf	main@rxByte^(0+128)
  2085                           
  2086                           ;main.c: 82: if (rxByte == 0x55)
  2087     02FB  3055               	movlw	85
  2088     02FC  0658               	xorwf	main@rxByte^(0+128),w
  2089     02FD  1D03               	btfss	3,2
  2090     02FE  2AF0               	goto	l2071
  2091                           
  2092                           ;main.c: 83: restart();
  2093     02FF  3184  243C  3182   	fcall	_restart
  2094     0302  2AF0               	goto	l2071
  2095     0303                     __end_of_main:
  2096                           
  2097                           	psect	text1
  2098     043C                     __ptext1:	
  2099 ;; *************** function _restart *****************
  2100 ;; Defined at:
  2101 ;;		line 103 in file "main.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0, pclath, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 1F/1
  2112 ;;		On exit  : 1F/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2115 ;;      Params:         0       0       0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0
  2117 ;;      Temps:          0       0       3       0       0       0
  2118 ;;      Totals:         0       0       3       0       0       0
  2119 ;;Total ram usage:        3 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 9
  2122 ;; This function calls:
  2123 ;;		___awtoft
  2124 ;;		___ftadd
  2125 ;;		___ftmul
  2126 ;;		_rand
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132     043C                     _restart:	
  2133                           ;psect for function _restart
  2134                           
  2135                           
  2136                           ;main.c: 105: coordinates.x = 0;
  2137                           
  2138                           ;incstack = 0
  2139                           ; Regs used in _restart: [wreg+status,2+status,0+pclath+cstack]
  2140     043C  300F               	movlw	-241
  2141     043D  0020               	movlb	0	; select bank0
  2142     043E  05E1               	andwf	_coordinates,f
  2143                           
  2144                           ;main.c: 106: coordinates.y = rand() % 8;
  2145     043F  3185  2520  3184   	fcall	_rand
  2146     0442  082C               	movf	?_rand^(0+128),w
  2147     0443  00D2               	movwf	??_restart^(0+128)
  2148     0444  082D               	movf	(?_rand+1)^(0+128),w
  2149     0445  00D3               	movwf	(??_restart^(0+128)+1)
  2150     0446  3007               	movlw	7
  2151     0447  0552               	andwf	??_restart^(0+128),w
  2152     0448  00D4               	movwf	(??_restart+2)^(0+128)
  2153     0449  0020               	movlb	0	; select bank0
  2154     044A  0861               	movf	_coordinates,w
  2155     044B  0021               	movlb	1	; select bank1
  2156     044C  0654               	xorwf	(??_restart+2)^(0+128),w
  2157     044D  39F0               	andlw	-16
  2158     044E  0654               	xorwf	(??_restart+2)^(0+128),w
  2159     044F  0020               	movlb	0	; select bank0
  2160     0450  00E1               	movwf	_coordinates
  2161                           
  2162                           ;main.c: 107: T = (rand() % 16) + 8;
  2163     0451  3185  2520  3184   	fcall	_rand
  2164     0454  082C               	movf	?_rand^(0+128),w
  2165     0455  390F               	andlw	15
  2166     0456  3E08               	addlw	8
  2167     0457  0020               	movlb	0	; select bank0
  2168     0458  00E8               	movwf	_T
  2169                           
  2170                           ;main.c: 108: a = (rand() % 32)*(float)0.1 - (float)1.6;
  2171     0459  30CD               	movlw	205
  2172     045A  0021               	movlb	1	; select bank1
  2173     045B  00C6               	movwf	___ftadd@f1^(0+128)
  2174     045C  30CC               	movlw	204
  2175     045D  00C7               	movwf	(___ftadd@f1+1)^(0+128)
  2176     045E  30BF               	movlw	191
  2177     045F  00C8               	movwf	(___ftadd@f1+2)^(0+128)
  2178     0460  30CD               	movlw	205
  2179     0461  00B7               	movwf	___ftmul@f1^(0+128)
  2180     0462  30CC               	movlw	204
  2181     0463  00B8               	movwf	(___ftmul@f1+1)^(0+128)
  2182     0464  303D               	movlw	61
  2183     0465  00B9               	movwf	(___ftmul@f1+2)^(0+128)
  2184     0466  3185  2520  3184   	fcall	_rand
  2185     0469  301F               	movlw	31
  2186     046A  052C               	andwf	?_rand^(0+128),w
  2187     046B  00B3               	movwf	___awtoft@c^(0+128)
  2188     046C  3000               	movlw	0
  2189     046D  052D               	andwf	(?_rand+1)^(0+128),w
  2190     046E  00B4               	movwf	(___awtoft@c+1)^(0+128)
  2191     046F  3186  2650  3184   	fcall	___awtoft
  2192     0472  0833               	movf	?___awtoft^(0+128),w
  2193     0473  00BA               	movwf	___ftmul@f2^(0+128)
  2194     0474  0834               	movf	(?___awtoft+1)^(0+128),w
  2195     0475  00BB               	movwf	(___ftmul@f2+1)^(0+128)
  2196     0476  0835               	movf	(?___awtoft+2)^(0+128),w
  2197     0477  00BC               	movwf	(___ftmul@f2+2)^(0+128)
  2198     0478  3182  2206  3184   	fcall	___ftmul
  2199     047B  0837               	movf	?___ftmul^(0+128),w
  2200     047C  00C9               	movwf	___ftadd@f2^(0+128)
  2201     047D  0838               	movf	(?___ftmul+1)^(0+128),w
  2202     047E  00CA               	movwf	(___ftadd@f2+1)^(0+128)
  2203     047F  0839               	movf	(?___ftmul+2)^(0+128),w
  2204     0480  00CB               	movwf	(___ftadd@f2+2)^(0+128)
  2205     0481  3180  2032         	fcall	___ftadd
  2206     0483  0846               	movf	?___ftadd^(0+128),w
  2207     0484  0020               	movlb	0	; select bank0
  2208     0485  00E3               	movwf	_a
  2209     0486  0021               	movlb	1	; select bank1
  2210     0487  0847               	movf	(?___ftadd+1)^(0+128),w
  2211     0488  0020               	movlb	0	; select bank0
  2212     0489  00E4               	movwf	_a+1
  2213     048A  0021               	movlb	1	; select bank1
  2214     048B  0848               	movf	(?___ftadd+2)^(0+128),w
  2215     048C  0020               	movlb	0	; select bank0
  2216     048D  00E5               	movwf	_a+2
  2217     048E  0008               	return
  2218     048F                     __end_of_restart:
  2219                           
  2220                           	psect	text2
  2221     0520                     __ptext2:	
  2222 ;; *************** function _rand *****************
  2223 ;; Defined at:
  2224 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\rand.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2   12[BANK1 ] int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 1E/0
  2235 ;;		On exit  : 1F/1
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2238 ;;      Params:         0       0       2       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0
  2240 ;;      Temps:          0       0       5       0       0       0
  2241 ;;      Totals:         0       0       7       0       0       0
  2242 ;;Total ram usage:        7 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 8
  2245 ;; This function calls:
  2246 ;;		___lmul
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;;		_restart
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253     0520                     _rand:	
  2254                           ;psect for function _rand
  2255                           
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2259     0520  0021               	movlb	1	; select bank1
  2260     0521  0862               	movf	(_randx+3)^(0+128),w
  2261     0522  00A3               	movwf	(___lmul@multiplier+3)^(0+128)
  2262     0523  0861               	movf	(_randx+2)^(0+128),w
  2263     0524  00A2               	movwf	(___lmul@multiplier+2)^(0+128)
  2264     0525  0860               	movf	(_randx+1)^(0+128),w
  2265     0526  00A1               	movwf	(___lmul@multiplier+1)^(0+128)
  2266     0527  085F               	movf	_randx^(0+128),w
  2267     0528  00A0               	movwf	___lmul@multiplier^(0+128)
  2268     0529  3041               	movlw	65
  2269     052A  00A7               	movwf	(___lmul@multiplicand+3)^(0+128)
  2270     052B  30C6               	movlw	198
  2271     052C  00A6               	movwf	(___lmul@multiplicand+2)^(0+128)
  2272     052D  304E               	movlw	78
  2273     052E  00A5               	movwf	(___lmul@multiplicand+1)^(0+128)
  2274     052F  306D               	movlw	109
  2275     0530  00A4               	movwf	___lmul@multiplicand^(0+128)
  2276     0531  3186  2600  3185   	fcall	___lmul
  2277     0534  0823               	movf	(?___lmul+3)^(0+128),w
  2278     0535  00E2               	movwf	(_randx+3)^(0+128)
  2279     0536  0822               	movf	(?___lmul+2)^(0+128),w
  2280     0537  00E1               	movwf	(_randx+2)^(0+128)
  2281     0538  0821               	movf	(?___lmul+1)^(0+128),w
  2282     0539  00E0               	movwf	(_randx+1)^(0+128)
  2283     053A  0820               	movf	?___lmul^(0+128),w
  2284     053B  00DF               	movwf	_randx^(0+128)
  2285     053C  3039               	movlw	57
  2286     053D  07DF               	addwf	_randx^(0+128),f
  2287     053E  3030               	movlw	48
  2288     053F  3DE0               	addwfc	(_randx+1)^(0+128),f
  2289     0540  3000               	movlw	0
  2290     0541  3DE1               	addwfc	(_randx+2)^(0+128),f
  2291     0542  3000               	movlw	0
  2292     0543  3DE2               	addwfc	(_randx+3)^(0+128),f
  2293     0544  085F               	movf	_randx^(0+128),w
  2294     0545  00AE               	movwf	??_rand^(0+128)
  2295     0546  0860               	movf	(_randx+1)^(0+128),w
  2296     0547  00AF               	movwf	(??_rand^(0+128)+1)
  2297     0548  0861               	movf	(_randx+2)^(0+128),w
  2298     0549  00B0               	movwf	(??_rand^(0+128)+2)
  2299     054A  0862               	movf	(_randx+3)^(0+128),w
  2300     054B  00B1               	movwf	(??_rand^(0+128)+3)
  2301     054C  3010               	movlw	16
  2302     054D  00B2               	movwf	(??_rand+4)^(0+128)
  2303     054E                     u1835:
  2304     054E  37B1               	asrf	(??_rand^(0+128)+3),f
  2305     054F  0CB0               	rrf	(??_rand^(0+128)+2),f
  2306     0550  0CAF               	rrf	(??_rand^(0+128)+1),f
  2307     0551  0CAE               	rrf	??_rand^(0+128),f
  2308     0552  0BB2               	decfsz	(??_rand+4)^(0+128),f
  2309     0553  2D4E               	goto	u1835
  2310     0554  30FF               	movlw	255
  2311     0555  052E               	andwf	??_rand^(0+128),w
  2312     0556  00AC               	movwf	?_rand^(0+128)
  2313     0557  307F               	movlw	127
  2314     0558  052F               	andwf	(??_rand+1)^(0+128),w
  2315     0559  00AD               	movwf	(?_rand+1)^(0+128)
  2316     055A  0008               	return
  2317     055B                     __end_of_rand:
  2318                           
  2319                           	psect	text3
  2320     0600                     __ptext3:	
  2321 ;; *************** function ___lmul *****************
  2322 ;; Defined at:
  2323 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\Umul32.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  multiplier      4    0[BANK1 ] unsigned long 
  2326 ;;  multiplicand    4    4[BANK1 ] unsigned long 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  product         4    8[BANK1 ] unsigned long 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  4    0[BANK1 ] unsigned long 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0
  2333 ;; Tracked objects:
  2334 ;;		On entry : 1F/1
  2335 ;;		On exit  : 1F/1
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2338 ;;      Params:         0       0       8       0       0       0
  2339 ;;      Locals:         0       0       4       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0
  2341 ;;      Totals:         0       0      12       0       0       0
  2342 ;;Total ram usage:       12 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 7
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_rand
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352     0600                     ___lmul:	
  2353                           ;psect for function ___lmul
  2354                           
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2358     0600  3000               	movlw	0
  2359     0601  00AB               	movwf	(___lmul@product+3)^(0+128)
  2360     0602  3000               	movlw	0
  2361     0603  00AA               	movwf	(___lmul@product+2)^(0+128)
  2362     0604  3000               	movlw	0
  2363     0605  00A9               	movwf	(___lmul@product+1)^(0+128)
  2364     0606  3000               	movlw	0
  2365     0607  00A8               	movwf	___lmul@product^(0+128)
  2366     0608                     l1745:
  2367     0608  1C20               	btfss	___lmul@multiplier^(0+128),0
  2368     0609  2E12               	goto	l1749
  2369     060A  0824               	movf	___lmul@multiplicand^(0+128),w
  2370     060B  07A8               	addwf	___lmul@product^(0+128),f
  2371     060C  0825               	movf	(___lmul@multiplicand+1)^(0+128),w
  2372     060D  3DA9               	addwfc	(___lmul@product+1)^(0+128),f
  2373     060E  0826               	movf	(___lmul@multiplicand+2)^(0+128),w
  2374     060F  3DAA               	addwfc	(___lmul@product+2)^(0+128),f
  2375     0610  0827               	movf	(___lmul@multiplicand+3)^(0+128),w
  2376     0611  3DAB               	addwfc	(___lmul@product+3)^(0+128),f
  2377     0612                     l1749:
  2378     0612  3001               	movlw	1
  2379     0613                     u1675:
  2380     0613  35A4               	lslf	___lmul@multiplicand^(0+128),f
  2381     0614  0DA5               	rlf	(___lmul@multiplicand+1)^(0+128),f
  2382     0615  0DA6               	rlf	(___lmul@multiplicand+2)^(0+128),f
  2383     0616  0DA7               	rlf	(___lmul@multiplicand+3)^(0+128),f
  2384     0617  0B89               	decfsz	9,f
  2385     0618  2E13               	goto	u1675
  2386     0619  3001               	movlw	1
  2387     061A                     u1685:
  2388     061A  36A3               	lsrf	(___lmul@multiplier+3)^(0+128),f
  2389     061B  0CA2               	rrf	(___lmul@multiplier+2)^(0+128),f
  2390     061C  0CA1               	rrf	(___lmul@multiplier+1)^(0+128),f
  2391     061D  0CA0               	rrf	___lmul@multiplier^(0+128),f
  2392     061E  0B89               	decfsz	9,f
  2393     061F  2E1A               	goto	u1685
  2394     0620  0823               	movf	(___lmul@multiplier+3)^(0+128),w
  2395     0621  0422               	iorwf	(___lmul@multiplier+2)^(0+128),w
  2396     0622  0421               	iorwf	(___lmul@multiplier+1)^(0+128),w
  2397     0623  0420               	iorwf	___lmul@multiplier^(0+128),w
  2398     0624  1D03               	skipz
  2399     0625  2E08               	goto	l1745
  2400     0626  082B               	movf	(___lmul@product+3)^(0+128),w
  2401     0627  00A3               	movwf	(?___lmul+3)^(0+128)
  2402     0628  082A               	movf	(___lmul@product+2)^(0+128),w
  2403     0629  00A2               	movwf	(?___lmul+2)^(0+128)
  2404     062A  0829               	movf	(___lmul@product+1)^(0+128),w
  2405     062B  00A1               	movwf	(?___lmul+1)^(0+128)
  2406     062C  0828               	movf	___lmul@product^(0+128),w
  2407     062D  00A0               	movwf	?___lmul^(0+128)
  2408     062E  0008               	return
  2409     062F                     __end_of___lmul:
  2410                           
  2411                           	psect	text4
  2412     0206                     __ptext4:	
  2413 ;; *************** function ___ftmul *****************
  2414 ;; Defined at:
  2415 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftmul.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  f1              3   23[BANK1 ] float 
  2418 ;;  f2              3   26[BANK1 ] float 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  f3_as_produc    3   33[BANK1 ] unsigned um
  2421 ;;  sign            1   37[BANK1 ] unsigned char 
  2422 ;;  cntr            1   36[BANK1 ] unsigned char 
  2423 ;;  exp             1   32[BANK1 ] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  3   23[BANK1 ] float 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 1F/1
  2430 ;;		On exit  : 1F/1
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2433 ;;      Params:         0       0       6       0       0       0
  2434 ;;      Locals:         0       0       6       0       0       0
  2435 ;;      Temps:          0       0       3       0       0       0
  2436 ;;      Totals:         0       0      15       0       0       0
  2437 ;;Total ram usage:       15 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; Hardware stack levels required when called: 8
  2440 ;; This function calls:
  2441 ;;		___ftpack
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;;		_restart
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448     0206                     ___ftmul:	
  2449                           ;psect for function ___ftmul
  2450                           
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2454     0206  0837               	movf	___ftmul@f1^(0+128),w
  2455     0207  00BD               	movwf	??___ftmul^(0+128)
  2456     0208  0838               	movf	(___ftmul@f1+1)^(0+128),w
  2457     0209  00BE               	movwf	(??___ftmul^(0+128)+1)
  2458     020A  0839               	movf	(___ftmul@f1+2)^(0+128),w
  2459     020B  00BF               	movwf	(??___ftmul^(0+128)+2)
  2460     020C  1003               	clrc
  2461     020D  0D3E               	rlf	(??___ftmul^(0+128)+1),w
  2462     020E  0D3F               	rlf	(??___ftmul^(0+128)+2),w
  2463     020F  00C0               	movwf	___ftmul@exp^(0+128)
  2464     0210  0840               	movf	___ftmul@exp^(0+128),w
  2465     0211  1D03               	btfss	3,2
  2466     0212  2A1A               	goto	l1965
  2467     0213  3000               	movlw	0
  2468     0214  00B7               	movwf	?___ftmul^(0+128)
  2469     0215  3000               	movlw	0
  2470     0216  00B8               	movwf	(?___ftmul+1)^(0+128)
  2471     0217  3000               	movlw	0
  2472     0218  00B9               	movwf	(?___ftmul+2)^(0+128)
  2473     0219  0008               	return
  2474     021A                     l1965:
  2475     021A  083A               	movf	___ftmul@f2^(0+128),w
  2476     021B  00BD               	movwf	??___ftmul^(0+128)
  2477     021C  083B               	movf	(___ftmul@f2+1)^(0+128),w
  2478     021D  00BE               	movwf	(??___ftmul^(0+128)+1)
  2479     021E  083C               	movf	(___ftmul@f2+2)^(0+128),w
  2480     021F  00BF               	movwf	(??___ftmul^(0+128)+2)
  2481     0220  1003               	clrc
  2482     0221  0D3E               	rlf	(??___ftmul^(0+128)+1),w
  2483     0222  0D3F               	rlf	(??___ftmul^(0+128)+2),w
  2484     0223  00C5               	movwf	___ftmul@sign^(0+128)
  2485     0224  0845               	movf	___ftmul@sign^(0+128),w
  2486     0225  1D03               	btfss	3,2
  2487     0226  2A2E               	goto	l1971
  2488     0227  3000               	movlw	0
  2489     0228  00B7               	movwf	?___ftmul^(0+128)
  2490     0229  3000               	movlw	0
  2491     022A  00B8               	movwf	(?___ftmul+1)^(0+128)
  2492     022B  3000               	movlw	0
  2493     022C  00B9               	movwf	(?___ftmul+2)^(0+128)
  2494     022D  0008               	return
  2495     022E                     l1971:
  2496     022E  0845               	movf	___ftmul@sign^(0+128),w
  2497     022F  3E7B               	addlw	123
  2498     0230  00BD               	movwf	??___ftmul^(0+128)
  2499     0231  083D               	movf	??___ftmul^(0+128),w
  2500     0232  07C0               	addwf	___ftmul@exp^(0+128),f
  2501     0233  0839               	movf	(___ftmul@f1^(0+128)+2),w
  2502     0234  00C5               	movwf	___ftmul@sign^(0+128)
  2503     0235  083C               	movf	(___ftmul@f2^(0+128)+2),w
  2504     0236  00BD               	movwf	??___ftmul^(0+128)
  2505     0237  083D               	movf	??___ftmul^(0+128),w
  2506     0238  06C5               	xorwf	___ftmul@sign^(0+128),f
  2507     0239  3080               	movlw	128
  2508     023A  00BD               	movwf	??___ftmul^(0+128)
  2509     023B  083D               	movf	??___ftmul^(0+128),w
  2510     023C  05C5               	andwf	___ftmul@sign^(0+128),f
  2511     023D  17B8               	bsf	(___ftmul@f1^(0+128)+1),7
  2512     023E  17BB               	bsf	(___ftmul@f2^(0+128)+1),7
  2513     023F  30FF               	movlw	255
  2514     0240  05BA               	andwf	___ftmul@f2^(0+128),f
  2515     0241  30FF               	movlw	255
  2516     0242  05BB               	andwf	(___ftmul@f2+1)^(0+128),f
  2517     0243  3000               	movlw	0
  2518     0244  05BC               	andwf	(___ftmul@f2+2)^(0+128),f
  2519     0245  3000               	movlw	0
  2520     0246  00C1               	movwf	___ftmul@f3_as_product^(0+128)
  2521     0247  3000               	movlw	0
  2522     0248  00C2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  2523     0249  3000               	movlw	0
  2524     024A  00C3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  2525     024B  3007               	movlw	7
  2526     024C  00C4               	movwf	___ftmul@cntr^(0+128)
  2527     024D                     l1989:
  2528     024D  1C37               	btfss	___ftmul@f1^(0+128),0
  2529     024E  2A55               	goto	l1993
  2530     024F  083A               	movf	___ftmul@f2^(0+128),w
  2531     0250  07C1               	addwf	___ftmul@f3_as_product^(0+128),f
  2532     0251  083B               	movf	(___ftmul@f2+1)^(0+128),w
  2533     0252  3DC2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  2534     0253  083C               	movf	(___ftmul@f2+2)^(0+128),w
  2535     0254  3DC3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  2536     0255                     l1993:
  2537     0255  3001               	movlw	1
  2538     0256                     u2125:
  2539     0256  36B9               	lsrf	(___ftmul@f1+2)^(0+128),f
  2540     0257  0CB8               	rrf	(___ftmul@f1+1)^(0+128),f
  2541     0258  0CB7               	rrf	___ftmul@f1^(0+128),f
  2542     0259  0B89               	decfsz	9,f
  2543     025A  2A56               	goto	u2125
  2544     025B  3001               	movlw	1
  2545     025C                     u2135:
  2546     025C  35BA               	lslf	___ftmul@f2^(0+128),f
  2547     025D  0DBB               	rlf	(___ftmul@f2+1)^(0+128),f
  2548     025E  0DBC               	rlf	(___ftmul@f2+2)^(0+128),f
  2549     025F  0B89               	decfsz	9,f
  2550     0260  2A5C               	goto	u2135
  2551     0261  3001               	movlw	1
  2552     0262  02C4               	subwf	___ftmul@cntr^(0+128),f
  2553     0263  1D03               	btfss	3,2
  2554     0264  2A4D               	goto	l1989
  2555     0265  3009               	movlw	9
  2556     0266  00C4               	movwf	___ftmul@cntr^(0+128)
  2557     0267                     l2001:
  2558     0267  1C37               	btfss	___ftmul@f1^(0+128),0
  2559     0268  2A6F               	goto	l2005
  2560     0269  083A               	movf	___ftmul@f2^(0+128),w
  2561     026A  07C1               	addwf	___ftmul@f3_as_product^(0+128),f
  2562     026B  083B               	movf	(___ftmul@f2+1)^(0+128),w
  2563     026C  3DC2               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  2564     026D  083C               	movf	(___ftmul@f2+2)^(0+128),w
  2565     026E  3DC3               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  2566     026F                     l2005:
  2567     026F  3001               	movlw	1
  2568     0270                     u2165:
  2569     0270  36B9               	lsrf	(___ftmul@f1+2)^(0+128),f
  2570     0271  0CB8               	rrf	(___ftmul@f1+1)^(0+128),f
  2571     0272  0CB7               	rrf	___ftmul@f1^(0+128),f
  2572     0273  0B89               	decfsz	9,f
  2573     0274  2A70               	goto	u2165
  2574     0275  3001               	movlw	1
  2575     0276                     u2175:
  2576     0276  36C3               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  2577     0277  0CC2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  2578     0278  0CC1               	rrf	___ftmul@f3_as_product^(0+128),f
  2579     0279  0B89               	decfsz	9,f
  2580     027A  2A76               	goto	u2175
  2581     027B  3001               	movlw	1
  2582     027C  02C4               	subwf	___ftmul@cntr^(0+128),f
  2583     027D  1D03               	btfss	3,2
  2584     027E  2A67               	goto	l2001
  2585     027F  0841               	movf	___ftmul@f3_as_product^(0+128),w
  2586     0280  00A0               	movwf	___ftpack@arg^(0+128)
  2587     0281  0842               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  2588     0282  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  2589     0283  0843               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  2590     0284  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  2591     0285  0840               	movf	___ftmul@exp^(0+128),w
  2592     0286  00A3               	movwf	___ftpack@exp^(0+128)
  2593     0287  0845               	movf	___ftmul@sign^(0+128),w
  2594     0288  00A4               	movwf	___ftpack@sign^(0+128)
  2595     0289  3183  2374         	fcall	___ftpack
  2596     028B  0820               	movf	?___ftpack^(0+128),w
  2597     028C  00B7               	movwf	?___ftmul^(0+128)
  2598     028D  0821               	movf	(?___ftpack+1)^(0+128),w
  2599     028E  00B8               	movwf	(?___ftmul+1)^(0+128)
  2600     028F  0822               	movf	(?___ftpack+2)^(0+128),w
  2601     0290  00B9               	movwf	(?___ftmul+2)^(0+128)
  2602     0291  0008               	return
  2603     0292                     __end_of___ftmul:
  2604                           
  2605                           	psect	text5
  2606     0032                     __ptext5:	
  2607 ;; *************** function ___ftadd *****************
  2608 ;; Defined at:
  2609 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftadd.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  f1              3   38[BANK1 ] float 
  2612 ;;  f2              3   41[BANK1 ] float 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  exp1            1   49[BANK1 ] unsigned char 
  2615 ;;  exp2            1   48[BANK1 ] unsigned char 
  2616 ;;  sign            1   47[BANK1 ] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  3   38[BANK1 ] float 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 1F/1
  2623 ;;		On exit  : 1F/1
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2626 ;;      Params:         0       0       6       0       0       0
  2627 ;;      Locals:         0       0       3       0       0       0
  2628 ;;      Temps:          0       0       3       0       0       0
  2629 ;;      Totals:         0       0      12       0       0       0
  2630 ;;Total ram usage:       12 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 8
  2633 ;; This function calls:
  2634 ;;		___ftpack
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;;		_restart
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641     0032                     ___ftadd:	
  2642                           ;psect for function ___ftadd
  2643                           
  2644                           
  2645                           ;incstack = 0
  2646                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2647     0032  0846               	movf	___ftadd@f1^(0+128),w
  2648     0033  00CC               	movwf	??___ftadd^(0+128)
  2649     0034  0847               	movf	(___ftadd@f1+1)^(0+128),w
  2650     0035  00CD               	movwf	(??___ftadd^(0+128)+1)
  2651     0036  0848               	movf	(___ftadd@f1+2)^(0+128),w
  2652     0037  00CE               	movwf	(??___ftadd^(0+128)+2)
  2653     0038  1003               	clrc
  2654     0039  0D4D               	rlf	(??___ftadd^(0+128)+1),w
  2655     003A  0D4E               	rlf	(??___ftadd^(0+128)+2),w
  2656     003B  00D1               	movwf	___ftadd@exp1^(0+128)
  2657     003C  0849               	movf	___ftadd@f2^(0+128),w
  2658     003D  00CC               	movwf	??___ftadd^(0+128)
  2659     003E  084A               	movf	(___ftadd@f2+1)^(0+128),w
  2660     003F  00CD               	movwf	(??___ftadd^(0+128)+1)
  2661     0040  084B               	movf	(___ftadd@f2+2)^(0+128),w
  2662     0041  00CE               	movwf	(??___ftadd^(0+128)+2)
  2663     0042  1003               	clrc
  2664     0043  0D4D               	rlf	(??___ftadd^(0+128)+1),w
  2665     0044  0D4E               	rlf	(??___ftadd^(0+128)+2),w
  2666     0045  00D0               	movwf	___ftadd@exp2^(0+128)
  2667     0046  0851               	movf	___ftadd@exp1^(0+128),w
  2668     0047  1903               	btfsc	3,2
  2669     0048  2855               	goto	l1895
  2670     0049  0850               	movf	___ftadd@exp2^(0+128),w
  2671     004A  0251               	subwf	___ftadd@exp1^(0+128),w
  2672     004B  1803               	skipnc
  2673     004C  285C               	goto	l1899
  2674     004D  0850               	movf	___ftadd@exp2^(0+128),w
  2675     004E  00CC               	movwf	??___ftadd^(0+128)
  2676     004F  0851               	movf	___ftadd@exp1^(0+128),w
  2677     0050  02CC               	subwf	??___ftadd^(0+128),f
  2678     0051  3019               	movlw	25
  2679     0052  024C               	subwf	??___ftadd^(0+128),w
  2680     0053  1C03               	skipc
  2681     0054  285C               	goto	l1899
  2682     0055                     l1895:
  2683     0055  0849               	movf	___ftadd@f2^(0+128),w
  2684     0056  00C6               	movwf	?___ftadd^(0+128)
  2685     0057  084A               	movf	(___ftadd@f2+1)^(0+128),w
  2686     0058  00C7               	movwf	(?___ftadd+1)^(0+128)
  2687     0059  084B               	movf	(___ftadd@f2+2)^(0+128),w
  2688     005A  00C8               	movwf	(?___ftadd+2)^(0+128)
  2689     005B  0008               	return
  2690     005C                     l1899:
  2691     005C  0850               	movf	___ftadd@exp2^(0+128),w
  2692     005D  1903               	btfsc	3,2
  2693     005E  0008               	return
  2694     005F  0851               	movf	___ftadd@exp1^(0+128),w
  2695     0060  0250               	subwf	___ftadd@exp2^(0+128),w
  2696     0061  1803               	skipnc
  2697     0062  286B               	goto	l1905
  2698     0063  0851               	movf	___ftadd@exp1^(0+128),w
  2699     0064  00CC               	movwf	??___ftadd^(0+128)
  2700     0065  0850               	movf	___ftadd@exp2^(0+128),w
  2701     0066  02CC               	subwf	??___ftadd^(0+128),f
  2702     0067  3019               	movlw	25
  2703     0068  024C               	subwf	??___ftadd^(0+128),w
  2704     0069  1803               	btfsc	3,0
  2705     006A  0008               	return
  2706     006B                     l1905:
  2707     006B  3006               	movlw	6
  2708     006C  00CF               	movwf	___ftadd@sign^(0+128)
  2709     006D  1BC8               	btfsc	(___ftadd@f1+2)^(0+128),7
  2710     006E  17CF               	bsf	___ftadd@sign^(0+128),7
  2711     006F  1BCB               	btfsc	(___ftadd@f2+2)^(0+128),7
  2712     0070  174F               	bsf	___ftadd@sign^(0+128),6
  2713     0071  17C7               	bsf	(___ftadd@f1^(0+128)+1),7
  2714     0072  30FF               	movlw	255
  2715     0073  05C6               	andwf	___ftadd@f1^(0+128),f
  2716     0074  30FF               	movlw	255
  2717     0075  05C7               	andwf	(___ftadd@f1+1)^(0+128),f
  2718     0076  3000               	movlw	0
  2719     0077  05C8               	andwf	(___ftadd@f1+2)^(0+128),f
  2720     0078  17CA               	bsf	(___ftadd@f2^(0+128)+1),7
  2721     0079  30FF               	movlw	255
  2722     007A  05C9               	andwf	___ftadd@f2^(0+128),f
  2723     007B  30FF               	movlw	255
  2724     007C  05CA               	andwf	(___ftadd@f2+1)^(0+128),f
  2725     007D  3000               	movlw	0
  2726     007E  05CB               	andwf	(___ftadd@f2+2)^(0+128),f
  2727     007F  0850               	movf	___ftadd@exp2^(0+128),w
  2728     0080  0251               	subwf	___ftadd@exp1^(0+128),w
  2729     0081  1803               	skipnc
  2730     0082  28A5               	goto	l1927
  2731     0083                     l1917:
  2732     0083  3001               	movlw	1
  2733     0084                     u1955:
  2734     0084  35C9               	lslf	___ftadd@f2^(0+128),f
  2735     0085  0DCA               	rlf	(___ftadd@f2+1)^(0+128),f
  2736     0086  0DCB               	rlf	(___ftadd@f2+2)^(0+128),f
  2737     0087  0B89               	decfsz	9,f
  2738     0088  2884               	goto	u1955
  2739     0089  3001               	movlw	1
  2740     008A  02D0               	subwf	___ftadd@exp2^(0+128),f
  2741     008B  0850               	movf	___ftadd@exp2^(0+128),w
  2742     008C  0651               	xorwf	___ftadd@exp1^(0+128),w
  2743     008D  1903               	skipnz
  2744     008E  28A0               	goto	l1925
  2745     008F  3001               	movlw	1
  2746     0090  02CF               	subwf	___ftadd@sign^(0+128),f
  2747     0091  084F               	movf	___ftadd@sign^(0+128),w
  2748     0092  3907               	andlw	7
  2749     0093  1903               	btfsc	3,2
  2750     0094  28A0               	goto	l1925
  2751     0095  2883               	goto	l1917
  2752     0096                     l1923:
  2753     0096  3001               	movlw	1
  2754     0097                     u1985:
  2755     0097  36C8               	lsrf	(___ftadd@f1+2)^(0+128),f
  2756     0098  0CC7               	rrf	(___ftadd@f1+1)^(0+128),f
  2757     0099  0CC6               	rrf	___ftadd@f1^(0+128),f
  2758     009A  0B89               	decfsz	9,f
  2759     009B  2897               	goto	u1985
  2760     009C  3001               	movlw	1
  2761     009D  00CC               	movwf	??___ftadd^(0+128)
  2762     009E  084C               	movf	??___ftadd^(0+128),w
  2763     009F  07D1               	addwf	___ftadd@exp1^(0+128),f
  2764     00A0                     l1925:
  2765     00A0  0851               	movf	___ftadd@exp1^(0+128),w
  2766     00A1  0650               	xorwf	___ftadd@exp2^(0+128),w
  2767     00A2  1903               	btfsc	3,2
  2768     00A3  28CA               	goto	l727
  2769     00A4  2896               	goto	l1923
  2770     00A5                     l1927:
  2771     00A5  0851               	movf	___ftadd@exp1^(0+128),w
  2772     00A6  0250               	subwf	___ftadd@exp2^(0+128),w
  2773     00A7  1803               	skipnc
  2774     00A8  28CA               	goto	l727
  2775     00A9                     l1929:
  2776     00A9  3001               	movlw	1
  2777     00AA                     u2015:
  2778     00AA  35C6               	lslf	___ftadd@f1^(0+128),f
  2779     00AB  0DC7               	rlf	(___ftadd@f1+1)^(0+128),f
  2780     00AC  0DC8               	rlf	(___ftadd@f1+2)^(0+128),f
  2781     00AD  0B89               	decfsz	9,f
  2782     00AE  28AA               	goto	u2015
  2783     00AF  3001               	movlw	1
  2784     00B0  02D1               	subwf	___ftadd@exp1^(0+128),f
  2785     00B1  0850               	movf	___ftadd@exp2^(0+128),w
  2786     00B2  0651               	xorwf	___ftadd@exp1^(0+128),w
  2787     00B3  1903               	skipnz
  2788     00B4  28C6               	goto	l1937
  2789     00B5  3001               	movlw	1
  2790     00B6  02CF               	subwf	___ftadd@sign^(0+128),f
  2791     00B7  084F               	movf	___ftadd@sign^(0+128),w
  2792     00B8  3907               	andlw	7
  2793     00B9  1903               	btfsc	3,2
  2794     00BA  28C6               	goto	l1937
  2795     00BB  28A9               	goto	l1929
  2796     00BC                     l1935:
  2797     00BC  3001               	movlw	1
  2798     00BD                     u2045:
  2799     00BD  36CB               	lsrf	(___ftadd@f2+2)^(0+128),f
  2800     00BE  0CCA               	rrf	(___ftadd@f2+1)^(0+128),f
  2801     00BF  0CC9               	rrf	___ftadd@f2^(0+128),f
  2802     00C0  0B89               	decfsz	9,f
  2803     00C1  28BD               	goto	u2045
  2804     00C2  3001               	movlw	1
  2805     00C3  00CC               	movwf	??___ftadd^(0+128)
  2806     00C4  084C               	movf	??___ftadd^(0+128),w
  2807     00C5  07D0               	addwf	___ftadd@exp2^(0+128),f
  2808     00C6                     l1937:
  2809     00C6  0851               	movf	___ftadd@exp1^(0+128),w
  2810     00C7  0650               	xorwf	___ftadd@exp2^(0+128),w
  2811     00C8  1D03               	skipz
  2812     00C9  28BC               	goto	l1935
  2813     00CA                     l727:
  2814     00CA  1FCF               	btfss	___ftadd@sign^(0+128),7
  2815     00CB  28DC               	goto	l1941
  2816     00CC  30FF               	movlw	255
  2817     00CD  06C6               	xorwf	___ftadd@f1^(0+128),f
  2818     00CE  30FF               	movlw	255
  2819     00CF  06C7               	xorwf	(___ftadd@f1+1)^(0+128),f
  2820     00D0  30FF               	movlw	255
  2821     00D1  06C8               	xorwf	(___ftadd@f1+2)^(0+128),f
  2822     00D2  3001               	movlw	1
  2823     00D3  07C6               	addwf	___ftadd@f1^(0+128),f
  2824     00D4  3000               	movlw	0
  2825     00D5  1803               	skipnc
  2826     00D6  3001               	movlw	1
  2827     00D7  07C7               	addwf	(___ftadd@f1+1)^(0+128),f
  2828     00D8  3000               	movlw	0
  2829     00D9  1803               	skipnc
  2830     00DA  3001               	movlw	1
  2831     00DB  07C8               	addwf	(___ftadd@f1+2)^(0+128),f
  2832     00DC                     l1941:
  2833     00DC  1F4F               	btfss	___ftadd@sign^(0+128),6
  2834     00DD  28EE               	goto	l1945
  2835     00DE  30FF               	movlw	255
  2836     00DF  06C9               	xorwf	___ftadd@f2^(0+128),f
  2837     00E0  30FF               	movlw	255
  2838     00E1  06CA               	xorwf	(___ftadd@f2+1)^(0+128),f
  2839     00E2  30FF               	movlw	255
  2840     00E3  06CB               	xorwf	(___ftadd@f2+2)^(0+128),f
  2841     00E4  3001               	movlw	1
  2842     00E5  07C9               	addwf	___ftadd@f2^(0+128),f
  2843     00E6  3000               	movlw	0
  2844     00E7  1803               	skipnc
  2845     00E8  3001               	movlw	1
  2846     00E9  07CA               	addwf	(___ftadd@f2+1)^(0+128),f
  2847     00EA  3000               	movlw	0
  2848     00EB  1803               	skipnc
  2849     00EC  3001               	movlw	1
  2850     00ED  07CB               	addwf	(___ftadd@f2+2)^(0+128),f
  2851     00EE                     l1945:
  2852     00EE  01CF               	clrf	___ftadd@sign^(0+128)
  2853     00EF  0846               	movf	___ftadd@f1^(0+128),w
  2854     00F0  07C9               	addwf	___ftadd@f2^(0+128),f
  2855     00F1  0847               	movf	(___ftadd@f1+1)^(0+128),w
  2856     00F2  3DCA               	addwfc	(___ftadd@f2+1)^(0+128),f
  2857     00F3  0848               	movf	(___ftadd@f1+2)^(0+128),w
  2858     00F4  3DCB               	addwfc	(___ftadd@f2+2)^(0+128),f
  2859     00F5  1FCB               	btfss	(___ftadd@f2+2)^(0+128),7
  2860     00F6  2909               	goto	l1955
  2861     00F7  30FF               	movlw	255
  2862     00F8  06C9               	xorwf	___ftadd@f2^(0+128),f
  2863     00F9  30FF               	movlw	255
  2864     00FA  06CA               	xorwf	(___ftadd@f2+1)^(0+128),f
  2865     00FB  30FF               	movlw	255
  2866     00FC  06CB               	xorwf	(___ftadd@f2+2)^(0+128),f
  2867     00FD  3001               	movlw	1
  2868     00FE  07C9               	addwf	___ftadd@f2^(0+128),f
  2869     00FF  3000               	movlw	0
  2870     0100  1803               	skipnc
  2871     0101  3001               	movlw	1
  2872     0102  07CA               	addwf	(___ftadd@f2+1)^(0+128),f
  2873     0103  3000               	movlw	0
  2874     0104  1803               	skipnc
  2875     0105  3001               	movlw	1
  2876     0106  07CB               	addwf	(___ftadd@f2+2)^(0+128),f
  2877     0107  01CF               	clrf	___ftadd@sign^(0+128)
  2878     0108  0ACF               	incf	___ftadd@sign^(0+128),f
  2879     0109                     l1955:
  2880     0109  0849               	movf	___ftadd@f2^(0+128),w
  2881     010A  00A0               	movwf	___ftpack@arg^(0+128)
  2882     010B  084A               	movf	(___ftadd@f2+1)^(0+128),w
  2883     010C  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  2884     010D  084B               	movf	(___ftadd@f2+2)^(0+128),w
  2885     010E  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  2886     010F  0851               	movf	___ftadd@exp1^(0+128),w
  2887     0110  00A3               	movwf	___ftpack@exp^(0+128)
  2888     0111  084F               	movf	___ftadd@sign^(0+128),w
  2889     0112  00A4               	movwf	___ftpack@sign^(0+128)
  2890     0113  3183  2374         	fcall	___ftpack
  2891     0115  0820               	movf	?___ftpack^(0+128),w
  2892     0116  00C6               	movwf	?___ftadd^(0+128)
  2893     0117  0821               	movf	(?___ftpack+1)^(0+128),w
  2894     0118  00C7               	movwf	(?___ftadd+1)^(0+128)
  2895     0119  0822               	movf	(?___ftpack+2)^(0+128),w
  2896     011A  00C8               	movwf	(?___ftadd+2)^(0+128)
  2897     011B  0008               	return
  2898     011C                     __end_of___ftadd:
  2899                           
  2900                           	psect	text6
  2901     0650                     __ptext6:	
  2902 ;; *************** function ___awtoft *****************
  2903 ;; Defined at:
  2904 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\awtoft.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  c               2   19[BANK1 ] int 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  sign            1   22[BANK1 ] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  3   19[BANK1 ] float 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 1F/1
  2915 ;;		On exit  : 1F/1
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2918 ;;      Params:         0       0       3       0       0       0
  2919 ;;      Locals:         0       0       1       0       0       0
  2920 ;;      Temps:          0       0       0       0       0       0
  2921 ;;      Totals:         0       0       4       0       0       0
  2922 ;;Total ram usage:        4 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 8
  2925 ;; This function calls:
  2926 ;;		___ftpack
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;;		_restart
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933     0650                     ___awtoft:	
  2934                           ;psect for function ___awtoft
  2935                           
  2936                           
  2937                           ;incstack = 0
  2938                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2939     0650  01B6               	clrf	___awtoft@sign^(0+128)
  2940     0651  1FB4               	btfss	(___awtoft@c+1)^(0+128),7
  2941     0652  2E5A               	goto	l1885
  2942     0653  09B3               	comf	___awtoft@c^(0+128),f
  2943     0654  09B4               	comf	(___awtoft@c+1)^(0+128),f
  2944     0655  0AB3               	incf	___awtoft@c^(0+128),f
  2945     0656  1903               	skipnz
  2946     0657  0AB4               	incf	(___awtoft@c+1)^(0+128),f
  2947     0658  01B6               	clrf	___awtoft@sign^(0+128)
  2948     0659  0AB6               	incf	___awtoft@sign^(0+128),f
  2949     065A                     l1885:
  2950     065A  0833               	movf	___awtoft@c^(0+128),w
  2951     065B  00A0               	movwf	___ftpack@arg^(0+128)
  2952     065C  0834               	movf	(___awtoft@c+1)^(0+128),w
  2953     065D  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  2954     065E  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  2955     065F  308E               	movlw	142
  2956     0660  00A3               	movwf	___ftpack@exp^(0+128)
  2957     0661  0836               	movf	___awtoft@sign^(0+128),w
  2958     0662  00A4               	movwf	___ftpack@sign^(0+128)
  2959     0663  3183  2374         	fcall	___ftpack
  2960     0665  0820               	movf	?___ftpack^(0+128),w
  2961     0666  00B3               	movwf	?___awtoft^(0+128)
  2962     0667  0821               	movf	(?___ftpack+1)^(0+128),w
  2963     0668  00B4               	movwf	(?___awtoft+1)^(0+128)
  2964     0669  0822               	movf	(?___ftpack+2)^(0+128),w
  2965     066A  00B5               	movwf	(?___awtoft+2)^(0+128)
  2966     066B  0008               	return
  2967     066C                     __end_of___awtoft:
  2968                           
  2969                           	psect	text7
  2970     0374                     __ptext7:	
  2971 ;; *************** function ___ftpack *****************
  2972 ;; Defined at:
  2973 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\float.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  arg             3    0[BANK1 ] unsigned um
  2976 ;;  exp             1    3[BANK1 ] unsigned char 
  2977 ;;  sign            1    4[BANK1 ] unsigned char 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  3    0[BANK1 ] float 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 1F/1
  2986 ;;		On exit  : 1F/1
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2989 ;;      Params:         0       0       5       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0
  2991 ;;      Temps:          0       0       3       0       0       0
  2992 ;;      Totals:         0       0       8       0       0       0
  2993 ;;Total ram usage:        8 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 7
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		___awtoft
  3000 ;;		___ftadd
  3001 ;;		___ftmul
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005     0374                     ___ftpack:	
  3006                           ;psect for function ___ftpack
  3007                           
  3008                           
  3009                           ;incstack = 0
  3010                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3011     0374  0823               	movf	___ftpack@exp^(0+128),w
  3012     0375  1903               	btfsc	3,2
  3013     0376  2B7C               	goto	l1761
  3014     0377  0822               	movf	(___ftpack@arg+2)^(0+128),w
  3015     0378  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  3016     0379  0420               	iorwf	___ftpack@arg^(0+128),w
  3017     037A  1D03               	skipz
  3018     037B  2B8D               	goto	l1767
  3019     037C                     l1761:
  3020     037C  3000               	movlw	0
  3021     037D  00A0               	movwf	?___ftpack^(0+128)
  3022     037E  3000               	movlw	0
  3023     037F  00A1               	movwf	(?___ftpack+1)^(0+128)
  3024     0380  3000               	movlw	0
  3025     0381  00A2               	movwf	(?___ftpack+2)^(0+128)
  3026     0382  0008               	return
  3027     0383                     l1765:
  3028     0383  3001               	movlw	1
  3029     0384  00A5               	movwf	??___ftpack^(0+128)
  3030     0385  0825               	movf	??___ftpack^(0+128),w
  3031     0386  07A3               	addwf	___ftpack@exp^(0+128),f
  3032     0387  3001               	movlw	1
  3033     0388                     u1725:
  3034     0388  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  3035     0389  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  3036     038A  0CA0               	rrf	___ftpack@arg^(0+128),f
  3037     038B  0B89               	decfsz	9,f
  3038     038C  2B88               	goto	u1725
  3039     038D                     l1767:
  3040     038D  30FE               	movlw	254
  3041     038E  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  3042     038F  1903               	btfsc	3,2
  3043     0390  2BA6               	goto	l696
  3044     0391  2B83               	goto	l1765
  3045     0392                     l1769:
  3046     0392  3001               	movlw	1
  3047     0393  00A5               	movwf	??___ftpack^(0+128)
  3048     0394  0825               	movf	??___ftpack^(0+128),w
  3049     0395  07A3               	addwf	___ftpack@exp^(0+128),f
  3050     0396  3001               	movlw	1
  3051     0397  07A0               	addwf	___ftpack@arg^(0+128),f
  3052     0398  3000               	movlw	0
  3053     0399  1803               	skipnc
  3054     039A  3001               	movlw	1
  3055     039B  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  3056     039C  3000               	movlw	0
  3057     039D  1803               	skipnc
  3058     039E  3001               	movlw	1
  3059     039F  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  3060     03A0  3001               	movlw	1
  3061     03A1                     u1745:
  3062     03A1  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  3063     03A2  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  3064     03A3  0CA0               	rrf	___ftpack@arg^(0+128),f
  3065     03A4  0B89               	decfsz	9,f
  3066     03A5  2BA1               	goto	u1745
  3067     03A6                     l696:
  3068     03A6  30FF               	movlw	255
  3069     03A7  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  3070     03A8  1903               	btfsc	3,2
  3071     03A9  2BB7               	goto	l1777
  3072     03AA  2B92               	goto	l1769
  3073     03AB                     l1779:
  3074     03AB  3002               	movlw	2
  3075     03AC  0223               	subwf	___ftpack@exp^(0+128),w
  3076     03AD  1C03               	btfss	3,0
  3077     03AE  2BB9               	goto	l703
  3078     03AF  3001               	movlw	1
  3079     03B0  02A3               	subwf	___ftpack@exp^(0+128),f
  3080     03B1  3001               	movlw	1
  3081     03B2                     u1765:
  3082     03B2  35A0               	lslf	___ftpack@arg^(0+128),f
  3083     03B3  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  3084     03B4  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  3085     03B5  0B89               	decfsz	9,f
  3086     03B6  2BB2               	goto	u1765
  3087     03B7                     l1777:
  3088     03B7  1FA1               	btfss	(___ftpack@arg+1)^(0+128),7
  3089     03B8  2BAB               	goto	l1779
  3090     03B9                     l703:
  3091     03B9  1823               	btfsc	___ftpack@exp^(0+128),0
  3092     03BA  2BC1               	goto	l704
  3093     03BB  30FF               	movlw	255
  3094     03BC  05A0               	andwf	___ftpack@arg^(0+128),f
  3095     03BD  307F               	movlw	127
  3096     03BE  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  3097     03BF  30FF               	movlw	255
  3098     03C0  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  3099     03C1                     l704:
  3100     03C1  1003               	clrc
  3101     03C2  0CA3               	rrf	___ftpack@exp^(0+128),f
  3102     03C3  0823               	movf	___ftpack@exp^(0+128),w
  3103     03C4  00A5               	movwf	??___ftpack^(0+128)
  3104     03C5  01A6               	clrf	(??___ftpack^(0+128)+1)
  3105     03C6  01A7               	clrf	(??___ftpack^(0+128)+2)
  3106     03C7  3010               	movlw	16
  3107     03C8                     u1805:
  3108     03C8  35A5               	lslf	??___ftpack^(0+128),f
  3109     03C9  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  3110     03CA  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  3111     03CB  0B89               	decfsz	9,f
  3112     03CC  2BC8               	goto	u1805
  3113     03CD  0825               	movf	??___ftpack^(0+128),w
  3114     03CE  04A0               	iorwf	___ftpack@arg^(0+128),f
  3115     03CF  0826               	movf	(??___ftpack+1)^(0+128),w
  3116     03D0  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  3117     03D1  0827               	movf	(??___ftpack+2)^(0+128),w
  3118     03D2  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  3119     03D3  0824               	movf	___ftpack@sign^(0+128),w
  3120     03D4  1903               	btfsc	3,2
  3121     03D5  0008               	return
  3122     03D6  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  3123     03D7  0008               	return
  3124     03D8                     __end_of___ftpack:
  3125                           
  3126                           	psect	text8
  3127     06CF                     __ptext8:	
  3128 ;; *************** function _SYSTEM_Initialize *****************
  3129 ;; Defined at:
  3130 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : B1F/0
  3141 ;;		On exit  : 1F/1
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3144 ;;      Params:         0       0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 9
  3151 ;; This function calls:
  3152 ;;		_EUSART_Initialize
  3153 ;;		_OSCILLATOR_Initialize
  3154 ;;		_PIN_MANAGER_Initialize
  3155 ;;		_SPI1_Initialize
  3156 ;;		_TMR1_Initialize
  3157 ;;		_WDT_Initialize
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163     06CF                     _SYSTEM_Initialize:	
  3164                           ;psect for function _SYSTEM_Initialize
  3165                           
  3166                           
  3167                           ;mcc.c: 53: SPI1_Initialize();
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3171     06CF  3187  2701  3186   	fcall	_SPI1_Initialize
  3172                           
  3173                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  3174     06D2  3186  2688  3186   	fcall	_PIN_MANAGER_Initialize
  3175                           
  3176                           ;mcc.c: 55: OSCILLATOR_Initialize();
  3177     06D5  3187  2720  3186   	fcall	_OSCILLATOR_Initialize
  3178                           
  3179                           ;mcc.c: 56: WDT_Initialize();
  3180     06D8  3187  2743  3186   	fcall	_WDT_Initialize
  3181                           
  3182                           ;mcc.c: 57: TMR1_Initialize();
  3183     06DB  3186  26B9  3186   	fcall	_TMR1_Initialize
  3184                           
  3185                           ;mcc.c: 58: EUSART_Initialize();
  3186     06DE  3186  262F         	fcall	_EUSART_Initialize
  3187     06E0  0008               	return
  3188     06E1                     __end_of_SYSTEM_Initialize:
  3189                           
  3190                           	psect	text9
  3191     0743                     __ptext9:	
  3192 ;; *************** function _WDT_Initialize *****************
  3193 ;; Defined at:
  3194 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg
  3203 ;; Tracked objects:
  3204 ;;		On entry : B1F/2
  3205 ;;		On exit  : B1F/1
  3206 ;;		Unchanged: B00/0
  3207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3208 ;;      Params:         0       0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 7
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_SYSTEM_Initialize
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222     0743                     _WDT_Initialize:	
  3223                           ;psect for function _WDT_Initialize
  3224                           
  3225                           
  3226                           ;mcc.c: 74: WDTCON = 0x16;
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in _WDT_Initialize: [wreg]
  3230     0743  3016               	movlw	22
  3231     0744  0021               	movlb	1	; select bank1
  3232     0745  0097               	movwf	23	;volatile
  3233     0746  0008               	return
  3234     0747                     __end_of_WDT_Initialize:
  3235                           
  3236                           	psect	text10
  3237     06B9                     __ptext10:	
  3238 ;; *************** function _TMR1_Initialize *****************
  3239 ;; Defined at:
  3240 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : B1F/1
  3251 ;;		On exit  : 1F/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3254 ;;      Params:         0       0       0       0       0       0
  3255 ;;      Locals:         0       0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0
  3257 ;;      Totals:         0       0       0       0       0       0
  3258 ;;Total ram usage:        0 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 8
  3261 ;; This function calls:
  3262 ;;		_TMR1_SetInterruptHandler
  3263 ;; This function is called by:
  3264 ;;		_SYSTEM_Initialize
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268     06B9                     _TMR1_Initialize:	
  3269                           ;psect for function _TMR1_Initialize
  3270                           
  3271                           
  3272                           ;tmr1.c: 69: T1GCON = 0x00;
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3276     06B9  0020               	movlb	0	; select bank0
  3277     06BA  0199               	clrf	25	;volatile
  3278                           
  3279                           ;tmr1.c: 72: TMR1H = 0x3C;
  3280     06BB  303C               	movlw	60
  3281     06BC  0097               	movwf	23	;volatile
  3282                           
  3283                           ;tmr1.c: 75: TMR1L = 0xB0;
  3284     06BD  30B0               	movlw	176
  3285     06BE  0096               	movwf	22	;volatile
  3286                           
  3287                           ;tmr1.c: 78: PIR1bits.TMR1IF = 0;
  3288     06BF  1011               	bcf	17,0	;volatile
  3289                           
  3290                           ;tmr1.c: 81: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3291     06C0  0817               	movf	23,w	;volatile
  3292     06C1  00DF               	movwf	_timer1ReloadVal+1	;volatile
  3293     06C2  0816               	movf	22,w	;volatile
  3294     06C3  00DE               	movwf	_timer1ReloadVal	;volatile
  3295                           
  3296                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  3297     06C4  0021               	movlb	1	; select bank1
  3298     06C5  1411               	bsf	17,0	;volatile
  3299                           
  3300                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3301     06C6  3047               	movlw	low _TMR1_DefaultInterruptHandler
  3302     06C7  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  3303     06C8  3007               	movlw	high _TMR1_DefaultInterruptHandler
  3304     06C9  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3305     06CA  3187  2718         	fcall	_TMR1_SetInterruptHandler
  3306                           
  3307                           ;tmr1.c: 90: T1CON = 0x11;
  3308     06CC  3011               	movlw	17
  3309     06CD  0098               	movwf	24	;volatile
  3310     06CE  0008               	return
  3311     06CF                     __end_of_TMR1_Initialize:
  3312                           
  3313                           	psect	text11
  3314     0718                     __ptext11:	
  3315 ;; *************** function _TMR1_SetInterruptHandler *****************
  3316 ;; Defined at:
  3317 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  3320 ;;		 -> renderMatrix(1), TMR1_DefaultInterruptHandler(1), 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg
  3327 ;; Tracked objects:
  3328 ;;		On entry : 1F/1
  3329 ;;		On exit  : 1F/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3332 ;;      Params:         0       0       2       0       0       0
  3333 ;;      Locals:         0       0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0
  3335 ;;      Totals:         0       0       2       0       0       0
  3336 ;;Total ram usage:        2 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 7
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_TMR1_Initialize
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347     0718                     _TMR1_SetInterruptHandler:	
  3348                           ;psect for function _TMR1_SetInterruptHandler
  3349                           
  3350                           
  3351                           ;tmr1.c: 172: TMR1_InterruptHandler = InterruptHandler;
  3352                           
  3353                           ;incstack = 0
  3354                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3355     0718  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3356     0719  0020               	movlb	0	; select bank0
  3357     071A  00E7               	movwf	_TMR1_InterruptHandler+1
  3358     071B  0021               	movlb	1	; select bank1
  3359     071C  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  3360     071D  0020               	movlb	0	; select bank0
  3361     071E  00E6               	movwf	_TMR1_InterruptHandler
  3362     071F  0008               	return
  3363     0720                     __end_of_TMR1_SetInterruptHandler:
  3364                           
  3365                           	psect	text12
  3366     0701                     __ptext12:	
  3367 ;; *************** function _SPI1_Initialize *****************
  3368 ;; Defined at:
  3369 ;;		line 62 in file "mcc_generated_files/spi1.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg
  3378 ;; Tracked objects:
  3379 ;;		On entry : B1F/0
  3380 ;;		On exit  : B1F/4
  3381 ;;		Unchanged: B00/0
  3382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3383 ;;      Params:         0       0       0       0       0       0
  3384 ;;      Locals:         0       0       0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0       0
  3386 ;;      Totals:         0       0       0       0       0       0
  3387 ;;Total ram usage:        0 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 7
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_SYSTEM_Initialize
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397     0701                     _SPI1_Initialize:	
  3398                           ;psect for function _SPI1_Initialize
  3399                           
  3400                           
  3401                           ;spi1.c: 65: SSP1STAT = 0x40;
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in _SPI1_Initialize: [wreg]
  3405     0701  3040               	movlw	64
  3406     0702  0024               	movlb	4	; select bank4
  3407     0703  0094               	movwf	20	;volatile
  3408                           
  3409                           ;spi1.c: 66: SSP1CON1 = 0x01;
  3410     0704  3001               	movlw	1
  3411     0705  0095               	movwf	21	;volatile
  3412                           
  3413                           ;spi1.c: 67: SSP1ADD = 0x01;
  3414     0706  3001               	movlw	1
  3415     0707  0092               	movwf	18	;volatile
  3416                           
  3417                           ;spi1.c: 68: TRISBbits.TRISB4 = 0;
  3418     0708  0021               	movlb	1	; select bank1
  3419     0709  120D               	bcf	13,4	;volatile
  3420                           
  3421                           ;spi1.c: 69: SSP1CON1bits.SSPEN = 0;
  3422     070A  0024               	movlb	4	; select bank4
  3423     070B  1295               	bcf	21,5	;volatile
  3424     070C  0008               	return
  3425     070D                     __end_of_SPI1_Initialize:
  3426                           
  3427                           	psect	text13
  3428     0688                     __ptext13:	
  3429 ;; *************** function _PIN_MANAGER_Initialize *****************
  3430 ;; Defined at:
  3431 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2
  3440 ;; Tracked objects:
  3441 ;;		On entry : B1F/4
  3442 ;;		On exit  : B1F/2
  3443 ;;		Unchanged: B00/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3445 ;;      Params:         0       0       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0       0
  3448 ;;      Totals:         0       0       0       0       0       0
  3449 ;;Total ram usage:        0 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; Hardware stack levels required when called: 7
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_SYSTEM_Initialize
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459     0688                     _PIN_MANAGER_Initialize:	
  3460                           ;psect for function _PIN_MANAGER_Initialize
  3461                           
  3462                           
  3463                           ;pin_manager.c: 60: LATA = 0x10;
  3464                           
  3465                           ;incstack = 0
  3466                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3467     0688  3010               	movlw	16
  3468     0689  0022               	movlb	2	; select bank2
  3469     068A  008C               	movwf	12	;volatile
  3470                           
  3471                           ;pin_manager.c: 61: LATB = 0x08;
  3472     068B  3008               	movlw	8
  3473     068C  008D               	movwf	13	;volatile
  3474                           
  3475                           ;pin_manager.c: 66: TRISA = 0xAF;
  3476     068D  30AF               	movlw	175
  3477     068E  0021               	movlb	1	; select bank1
  3478     068F  008C               	movwf	12	;volatile
  3479                           
  3480                           ;pin_manager.c: 67: TRISB = 0xE7;
  3481     0690  30E7               	movlw	231
  3482     0691  008D               	movwf	13	;volatile
  3483                           
  3484                           ;pin_manager.c: 72: ANSELB = 0xC0;
  3485     0692  30C0               	movlw	192
  3486     0693  0023               	movlb	3	; select bank3
  3487     0694  008D               	movwf	13	;volatile
  3488                           
  3489                           ;pin_manager.c: 73: ANSELA = 0x0F;
  3490     0695  300F               	movlw	15
  3491     0696  008C               	movwf	12	;volatile
  3492                           
  3493                           ;pin_manager.c: 78: WPUB = 0x00;
  3494     0697  0024               	movlb	4	; select bank4
  3495     0698  018D               	clrf	13	;volatile
  3496                           
  3497                           ;pin_manager.c: 79: WPUA = 0x00;
  3498     0699  018C               	clrf	12	;volatile
  3499                           
  3500                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  3501     069A  0021               	movlb	1	; select bank1
  3502     069B  1795               	bsf	21,7	;volatile
  3503                           
  3504                           ;pin_manager.c: 86: APFCON0 = 0xC0;
  3505     069C  30C0               	movlw	192
  3506     069D  0022               	movlb	2	; select bank2
  3507     069E  009D               	movwf	29	;volatile
  3508                           
  3509                           ;pin_manager.c: 87: APFCON1 = 0x01;
  3510     069F  3001               	movlw	1
  3511     06A0  009E               	movwf	30	;volatile
  3512     06A1  0008               	return
  3513     06A2                     __end_of_PIN_MANAGER_Initialize:
  3514                           
  3515                           	psect	text14
  3516     0720                     __ptext14:	
  3517 ;; *************** function _OSCILLATOR_Initialize *****************
  3518 ;; Defined at:
  3519 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2
  3528 ;; Tracked objects:
  3529 ;;		On entry : B1F/2
  3530 ;;		On exit  : B1F/2
  3531 ;;		Unchanged: B00/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3533 ;;      Params:         0       0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0
  3536 ;;      Totals:         0       0       0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used: 1
  3539 ;; Hardware stack levels required when called: 7
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_SYSTEM_Initialize
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547     0720                     _OSCILLATOR_Initialize:	
  3548                           ;psect for function _OSCILLATOR_Initialize
  3549                           
  3550                           
  3551                           ;mcc.c: 64: OSCCON = 0x78;
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3555     0720  3078               	movlw	120
  3556     0721  0021               	movlb	1	; select bank1
  3557     0722  0099               	movwf	25	;volatile
  3558                           
  3559                           ;mcc.c: 66: OSCTUNE = 0x00;
  3560     0723  0198               	clrf	24	;volatile
  3561                           
  3562                           ;mcc.c: 68: BORCON = 0x00;
  3563     0724  0022               	movlb	2	; select bank2
  3564     0725  0196               	clrf	22	;volatile
  3565     0726  0008               	return
  3566     0727                     __end_of_OSCILLATOR_Initialize:
  3567                           
  3568                           	psect	text15
  3569     062F                     __ptext15:	
  3570 ;; *************** function _EUSART_Initialize *****************
  3571 ;; Defined at:
  3572 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0, pclath, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 1F/0
  3583 ;;		On exit  : 1F/1
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3586 ;;      Params:         0       0       0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0
  3589 ;;      Totals:         0       0       0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used: 1
  3592 ;; Hardware stack levels required when called: 8
  3593 ;; This function calls:
  3594 ;;		_EUSART_SetErrorHandler
  3595 ;;		_EUSART_SetFramingErrorHandler
  3596 ;;		_EUSART_SetOverrunErrorHandler
  3597 ;; This function is called by:
  3598 ;;		_SYSTEM_Initialize
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602     062F                     _EUSART_Initialize:	
  3603                           ;psect for function _EUSART_Initialize
  3604                           
  3605                           
  3606                           ;eusart.c: 71: BAUDCON = 0x08;
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3610     062F  3008               	movlw	8
  3611     0630  0023               	movlb	3	; select bank3
  3612     0631  009F               	movwf	31	;volatile
  3613                           
  3614                           ;eusart.c: 74: RCSTA = 0x90;
  3615     0632  3090               	movlw	144
  3616     0633  009D               	movwf	29	;volatile
  3617                           
  3618                           ;eusart.c: 77: TXSTA = 0x24;
  3619     0634  3024               	movlw	36
  3620     0635  009E               	movwf	30	;volatile
  3621                           
  3622                           ;eusart.c: 80: SPBRGL = 0x22;
  3623     0636  3022               	movlw	34
  3624     0637  009B               	movwf	27	;volatile
  3625                           
  3626                           ;eusart.c: 83: SPBRGH = 0x00;
  3627     0638  019C               	clrf	28	;volatile
  3628                           
  3629                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  3630     0639  3000               	movlw	0
  3631     063A  0021               	movlb	1	; select bank1
  3632     063B  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  3633     063C  3000               	movlw	0
  3634     063D  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  3635     063E  3187  272C  3186   	fcall	_EUSART_SetFramingErrorHandler
  3636                           
  3637                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3638     0641  3000               	movlw	0
  3639     0642  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  3640     0643  3000               	movlw	0
  3641     0644  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  3642     0645  3187  2727  3186   	fcall	_EUSART_SetOverrunErrorHandler
  3643                           
  3644                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  3645     0648  3000               	movlw	0
  3646     0649  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  3647     064A  3000               	movlw	0
  3648     064B  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  3649     064C  3187  2731         	fcall	_EUSART_SetErrorHandler
  3650                           
  3651                           ;eusart.c: 90: eusartRxLastError.status = 0;
  3652     064E  01E3               	clrf	_eusartRxLastError^(0+128)	;volatile
  3653     064F  0008               	return
  3654     0650                     __end_of_EUSART_Initialize:
  3655                           
  3656                           	psect	text16
  3657     0727                     __ptext16:	
  3658 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3659 ;; Defined at:
  3660 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  3663 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg
  3670 ;; Tracked objects:
  3671 ;;		On entry : 1F/1
  3672 ;;		On exit  : 1F/1
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3675 ;;      Params:         0       0       2       0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0
  3678 ;;      Totals:         0       0       2       0       0       0
  3679 ;;Total ram usage:        2 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; Hardware stack levels required when called: 7
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_EUSART_Initialize
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689     0727                     _EUSART_SetOverrunErrorHandler:	
  3690                           ;psect for function _EUSART_SetOverrunErrorHandler
  3691                           
  3692                           
  3693                           ;eusart.c: 162: EUSART_OverrunErrorHandler = interruptHandler;
  3694                           
  3695                           ;incstack = 0
  3696                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3697     0727  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  3698     0728  00DC               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  3699     0729  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  3700     072A  00DB               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  3701     072B  0008               	return
  3702     072C                     __end_of_EUSART_SetOverrunErrorHandler:
  3703                           
  3704                           	psect	text17
  3705     072C                     __ptext17:	
  3706 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3707 ;; Defined at:
  3708 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  3711 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg
  3718 ;; Tracked objects:
  3719 ;;		On entry : 1F/1
  3720 ;;		On exit  : 1F/1
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3723 ;;      Params:         0       0       2       0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0
  3726 ;;      Totals:         0       0       2       0       0       0
  3727 ;;Total ram usage:        2 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; Hardware stack levels required when called: 7
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_EUSART_Initialize
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737     072C                     _EUSART_SetFramingErrorHandler:	
  3738                           ;psect for function _EUSART_SetFramingErrorHandler
  3739                           
  3740                           
  3741                           ;eusart.c: 158: EUSART_FramingErrorHandler = interruptHandler;
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3745     072C  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  3746     072D  00DE               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  3747     072E  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  3748     072F  00DD               	movwf	_EUSART_FramingErrorHandler^(0+128)
  3749     0730  0008               	return
  3750     0731                     __end_of_EUSART_SetFramingErrorHandler:
  3751                           
  3752                           	psect	text18
  3753     0731                     __ptext18:	
  3754 ;; *************** function _EUSART_SetErrorHandler *****************
  3755 ;; Defined at:
  3756 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  3759 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg
  3766 ;; Tracked objects:
  3767 ;;		On entry : 1F/1
  3768 ;;		On exit  : 1F/1
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3771 ;;      Params:         0       0       2       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0
  3774 ;;      Totals:         0       0       2       0       0       0
  3775 ;;Total ram usage:        2 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 7
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_EUSART_Initialize
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785     0731                     _EUSART_SetErrorHandler:	
  3786                           ;psect for function _EUSART_SetErrorHandler
  3787                           
  3788                           
  3789                           ;eusart.c: 166: EUSART_ErrorHandler = interruptHandler;
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3793     0731  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  3794     0732  00DA               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  3795     0733  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  3796     0734  00D9               	movwf	_EUSART_ErrorHandler^(0+128)
  3797     0735  0008               	return
  3798     0736                     __end_of_EUSART_SetErrorHandler:
  3799                           
  3800                           	psect	text19
  3801     0736                     __ptext19:	
  3802 ;; *************** function _EUSART_is_rx_ready *****************
  3803 ;; Defined at:
  3804 ;;		line 99 in file "mcc_generated_files/eusart.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      unsigned char 
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0
  3813 ;; Tracked objects:
  3814 ;;		On entry : 1E/0
  3815 ;;		On exit  : 1F/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3818 ;;      Params:         0       0       0       0       0       0
  3819 ;;      Locals:         0       0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0
  3821 ;;      Totals:         0       0       0       0       0       0
  3822 ;;Total ram usage:        0 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; Hardware stack levels required when called: 7
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_main
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832     0736                     _EUSART_is_rx_ready:	
  3833                           ;psect for function _EUSART_is_rx_ready
  3834                           
  3835                           
  3836                           ;eusart.c: 101: return (bool)(PIR1bits.RCIF);
  3837                           
  3838                           ;incstack = 0
  3839                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  3840     0736  0020               	movlb	0	; select bank0
  3841     0737  0E11               	swapf	17,w	;volatile
  3842     0738  0C89               	rrf	9,f
  3843     0739  3901               	andlw	1
  3844     073A  0008               	return
  3845     073B                     __end_of_EUSART_is_rx_ready:
  3846                           
  3847                           	psect	text20
  3848     070D                     __ptext20:	
  3849 ;; *************** function _EUSART_Read *****************
  3850 ;; Defined at:
  3851 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      unsigned char 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2
  3860 ;; Tracked objects:
  3861 ;;		On entry : 1F/0
  3862 ;;		On exit  : 1F/3
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3865 ;;      Params:         0       0       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0
  3868 ;;      Totals:         0       0       0       0       0       0
  3869 ;;Total ram usage:        0 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 7
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879     070D                     _EUSART_Read:	
  3880                           ;psect for function _EUSART_Read
  3881                           
  3882     070D                     l255:	
  3883                           ;eusart.c: 116: {
  3884                           
  3885                           ;incstack = 0
  3886                           ; Regs used in _EUSART_Read: [wreg+status,2]
  3887                           
  3888     070D  1E91               	btfss	17,5	;volatile
  3889     070E  2F0D               	goto	l255
  3890                           
  3891                           ;eusart.c: 117: };eusart.c: 119: eusartRxLastError.status = 0;
  3892     070F  0021               	movlb	1	; select bank1
  3893     0710  01E3               	clrf	_eusartRxLastError^(0+128)	;volatile
  3894                           
  3895                           ;eusart.c: 121: if(1 == RCSTAbits.OERR)
  3896     0711  0023               	movlb	3	; select bank3
  3897     0712  1C9D               	btfss	29,1	;volatile
  3898     0713  2F16               	goto	l2037
  3899                           
  3900                           ;eusart.c: 122: {;eusart.c: 125: RCSTAbits.CREN = 0;
  3901     0714  121D               	bcf	29,4	;volatile
  3902                           
  3903                           ;eusart.c: 126: RCSTAbits.CREN = 1;
  3904     0715  161D               	bsf	29,4	;volatile
  3905     0716                     l2037:
  3906                           
  3907                           ;eusart.c: 127: };eusart.c: 129: return RCREG;
  3908     0716  0819               	movf	25,w	;volatile
  3909     0717  0008               	return
  3910     0718                     __end_of_EUSART_Read:
  3911                           
  3912                           	psect	intentry
  3913     0004                     __pintentry:	
  3914 ;; *************** function _INTERRUPT_InterruptManager *****************
  3915 ;; Defined at:
  3916 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3930 ;;      Params:         0       0       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0       0
  3933 ;;      Totals:         0       0       0       0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 6
  3937 ;; This function calls:
  3938 ;;		_TMR1_ISR
  3939 ;; This function is called by:
  3940 ;;		Interrupt level 1
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944     0004                     _INTERRUPT_InterruptManager:
  3945                           
  3946                           ;incstack = 0
  3947     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3948                           
  3949                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3950     0005  3180               	pagesel	$
  3951                           
  3952                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  3953     0006  1F0B               	btfss	11,6	;volatile
  3954     0007  2810               	goto	i1l134
  3955                           
  3956                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE1bits.TMR1IE == 1 && PIR1bits
      +                          .TMR1IF == 1)
  3957     0008  0021               	movlb	1	; select bank1
  3958     0009  1C11               	btfss	17,0	;volatile
  3959     000A  2810               	goto	i1l134
  3960     000B  0020               	movlb	0	; select bank0
  3961     000C  1C11               	btfss	17,0	;volatile
  3962     000D  2810               	goto	i1l134
  3963                           
  3964                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR1_ISR();
  3965     000E  3186  26E1         	fcall	_TMR1_ISR
  3966     0010                     i1l134:	
  3967                           ;interrupt_manager.c: 60: }
  3968                           
  3969     0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3970     0011  0009               	retfie
  3971     0012                     __end_of_INTERRUPT_InterruptManager:
  3972                           
  3973                           	psect	text22
  3974     06E1                     __ptext22:	
  3975 ;; *************** function _TMR1_ISR *****************
  3976 ;; Defined at:
  3977 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 1F/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3991 ;;      Params:         0       0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; Hardware stack levels required when called: 5
  3998 ;; This function calls:
  3999 ;;		NULL
  4000 ;;		_TMR1_DefaultInterruptHandler
  4001 ;;		_TMR1_WriteTimer
  4002 ;;		_renderMatrix
  4003 ;; This function is called by:
  4004 ;;		_INTERRUPT_InterruptManager
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008     06E1                     _TMR1_ISR:	
  4009                           ;psect for function _TMR1_ISR
  4010                           
  4011                           
  4012                           ;tmr1.c: 161: PIR1bits.TMR1IF = 0;
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4016     06E1  1011               	bcf	17,0	;volatile
  4017                           
  4018                           ;tmr1.c: 162: TMR1_WriteTimer(timer1ReloadVal);
  4019     06E2  085F               	movf	_timer1ReloadVal+1,w	;volatile
  4020     06E3  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4021     06E4  085E               	movf	_timer1ReloadVal,w	;volatile
  4022     06E5  00F0               	movwf	TMR1_WriteTimer@timerVal
  4023     06E6  3186  26F3  3186   	fcall	_TMR1_WriteTimer
  4024                           
  4025                           ;tmr1.c: 164: if(TMR1_InterruptHandler)
  4026     06E9  0866               	movf	_TMR1_InterruptHandler,w
  4027     06EA  0467               	iorwf	_TMR1_InterruptHandler+1,w
  4028     06EB  1903               	btfsc	3,2
  4029     06EC  0008               	return
  4030                           
  4031                           ;tmr1.c: 165: {;tmr1.c: 166: TMR1_InterruptHandler();
  4032     06ED  0867               	movf	_TMR1_InterruptHandler+1,w
  4033     06EE  008A               	movwf	10
  4034     06EF  0866               	movf	_TMR1_InterruptHandler,w
  4035     06F0  000A               	callw
  4036     06F1  3186               	pagesel	$
  4037     06F2  0008               	return
  4038     06F3                     __end_of_TMR1_ISR:
  4039                           
  4040                           	psect	text23
  4041     0747                     __ptext23:	
  4042 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4043 ;; Defined at:
  4044 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;		None
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      void 
  4051 ;; Registers used:
  4052 ;;		None
  4053 ;; Tracked objects:
  4054 ;;		On entry : 1F/0
  4055 ;;		On exit  : 1F/0
  4056 ;;		Unchanged: 1F/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4058 ;;      Params:         0       0       0       0       0       0
  4059 ;;      Locals:         0       0       0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0       0
  4061 ;;      Totals:         0       0       0       0       0       0
  4062 ;;Total ram usage:        0 bytes
  4063 ;; Hardware stack levels used: 1
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_TMR1_Initialize
  4068 ;;		_TMR1_ISR
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072     0747                     _TMR1_DefaultInterruptHandler:	
  4073                           ;psect for function _TMR1_DefaultInterruptHandler
  4074                           
  4075                           
  4076                           ;incstack = 0
  4077                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4078     0747  0008               	return
  4079     0748                     __end_of_TMR1_DefaultInterruptHandler:
  4080                           
  4081                           	psect	text24
  4082     048F                     __ptext24:	
  4083 ;; *************** function _renderMatrix *****************
  4084 ;; Defined at:
  4085 ;;		line 88 in file "main.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 1F/0
  4096 ;;		On exit  : 1F/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4099 ;;      Params:         0       0       0       0       0       0
  4100 ;;      Locals:         0       6       0       0       0       0
  4101 ;;      Temps:          0       1       0       0       0       0
  4102 ;;      Totals:         0       7       0       0       0       0
  4103 ;;Total ram usage:        7 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 4
  4106 ;; This function calls:
  4107 ;;		___fttol
  4108 ;;		___lbtoft
  4109 ;;		_getParameters
  4110 ;;		_round
  4111 ;;		i1___ftadd
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;;		_TMR1_ISR
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118     048F                     _renderMatrix:	
  4119                           ;psect for function _renderMatrix
  4120                           
  4121                           
  4122                           ;main.c: 90: static uint8_t count = 0;;main.c: 92: if(count >= T)
  4123                           
  4124                           ;incstack = 0
  4125                           ; Regs used in _renderMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4126     048F  0868               	movf	_T,w
  4127     0490  0260               	subwf	renderMatrix@count,w
  4128     0491  1C03               	skipc
  4129     0492  2CD9               	goto	i1l1875
  4130                           
  4131                           ;main.c: 93: {;main.c: 94: getParameters();
  4132     0493  3187  2748  3184   	fcall	_getParameters
  4133                           
  4134                           ;main.c: 95: coordinates.x += incX;
  4135     0496  0E61               	swapf	_coordinates,w
  4136     0497  390F               	andlw	15
  4137     0498  00D5               	movwf	??_renderMatrix
  4138     0499  0862               	movf	_incX,w
  4139     049A  07D5               	addwf	??_renderMatrix,f
  4140     049B  0ED5               	swapf	??_renderMatrix,f
  4141     049C  0861               	movf	_coordinates,w
  4142     049D  0655               	xorwf	??_renderMatrix,w
  4143     049E  390F               	andlw	-241
  4144     049F  0655               	xorwf	??_renderMatrix,w
  4145     04A0  00E1               	movwf	_coordinates
  4146                           
  4147                           ;main.c: 96: coordinates.y = (uint8_t) round((float)coordinates.y + a);
  4148     04A1  0861               	movf	_coordinates,w
  4149     04A2  390F               	andlw	15
  4150     04A3  3186  26A2  3184   	fcall	___lbtoft
  4151     04A6  0878               	movf	?___lbtoft,w
  4152     04A7  00A4               	movwf	i1___ftadd@f2
  4153     04A8  0879               	movf	?___lbtoft+1,w
  4154     04A9  00A5               	movwf	i1___ftadd@f2+1
  4155     04AA  087A               	movf	?___lbtoft+2,w
  4156     04AB  00A6               	movwf	i1___ftadd@f2+2
  4157     04AC  0863               	movf	_a,w
  4158     04AD  00A1               	movwf	i1___ftadd@f1
  4159     04AE  0864               	movf	_a+1,w
  4160     04AF  00A2               	movwf	i1___ftadd@f1+1
  4161     04B0  0865               	movf	_a+2,w
  4162     04B1  00A3               	movwf	i1___ftadd@f1+2
  4163     04B2  3181  211C  3184   	fcall	i1___ftadd
  4164     04B5  0821               	movf	?i1___ftadd,w
  4165     04B6  00D9               	movwf	_renderMatrix$1372
  4166     04B7  0822               	movf	?i1___ftadd+1,w
  4167     04B8  00DA               	movwf	_renderMatrix$1372+1
  4168     04B9  0823               	movf	?i1___ftadd+2,w
  4169     04BA  00DB               	movwf	_renderMatrix$1372+2
  4170                           
  4171                           ;main.c: 96: coordinates.y = (uint8_t) round((float)coordinates.y + a);
  4172     04BB  0859               	movf	_renderMatrix$1372,w
  4173     04BC  00CF               	movwf	round@x
  4174     04BD  085A               	movf	_renderMatrix$1372+1,w
  4175     04BE  00D0               	movwf	round@x+1
  4176     04BF  085B               	movf	_renderMatrix$1372+2,w
  4177     04C0  00D1               	movwf	round@x+2
  4178     04C1  3184  24DE  3184   	fcall	_round
  4179     04C4  084F               	movf	?_round,w
  4180     04C5  00D6               	movwf	_renderMatrix$1354
  4181     04C6  0850               	movf	?_round+1,w
  4182     04C7  00D7               	movwf	_renderMatrix$1354+1
  4183     04C8  0851               	movf	?_round+2,w
  4184     04C9  00D8               	movwf	_renderMatrix$1354+2
  4185                           
  4186                           ;main.c: 96: coordinates.y = (uint8_t) round((float)coordinates.y + a);
  4187     04CA  0856               	movf	_renderMatrix$1354,w
  4188     04CB  00AD               	movwf	___fttol@f1
  4189     04CC  0857               	movf	_renderMatrix$1354+1,w
  4190     04CD  00AE               	movwf	___fttol@f1+1
  4191     04CE  0858               	movf	_renderMatrix$1354+2,w
  4192     04CF  00AF               	movwf	___fttol@f1+2
  4193     04D0  3183  2303         	fcall	___fttol
  4194     04D2  0861               	movf	_coordinates,w
  4195     04D3  062D               	xorwf	?___fttol,w
  4196     04D4  39F0               	andlw	-16
  4197     04D5  062D               	xorwf	?___fttol,w
  4198     04D6  00E1               	movwf	_coordinates
  4199                           
  4200                           ;main.c: 97: count = 0;
  4201     04D7  01E0               	clrf	renderMatrix@count
  4202                           
  4203                           ;main.c: 98: }
  4204     04D8  0008               	return
  4205     04D9                     i1l1875:
  4206                           
  4207                           ;main.c: 99: else;main.c: 100: count++;
  4208     04D9  3001               	movlw	1
  4209     04DA  00D5               	movwf	??_renderMatrix
  4210     04DB  0855               	movf	??_renderMatrix,w
  4211     04DC  07E0               	addwf	renderMatrix@count,f
  4212     04DD  0008               	return
  4213     04DE                     __end_of_renderMatrix:
  4214                           
  4215                           	psect	text25
  4216     04DE                     __ptext25:	
  4217 ;; *************** function _round *****************
  4218 ;; Defined at:
  4219 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\round.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  x               3   47[BANK0 ] void 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  f               3   50[BANK0 ] void 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  3   47[BANK0 ] void 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 1F/0
  4230 ;;		On exit  : 1F/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4233 ;;      Params:         0       3       0       0       0       0
  4234 ;;      Locals:         0       3       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0
  4236 ;;      Totals:         0       6       0       0       0       0
  4237 ;;Total ram usage:        6 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 3
  4240 ;; This function calls:
  4241 ;;		___ftsub
  4242 ;;		_trunc
  4243 ;;		i1___ftadd
  4244 ;; This function is called by:
  4245 ;;		_renderMatrix
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249     04DE                     _round:	
  4250                           ;psect for function _round
  4251                           
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _round: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4255     04DE  084F               	movf	round@x,w
  4256     04DF  00C1               	movwf	trunc@x
  4257     04E0  0850               	movf	round@x+1,w
  4258     04E1  00C2               	movwf	trunc@x+1
  4259     04E2  0851               	movf	round@x+2,w
  4260     04E3  00C3               	movwf	trunc@x+2
  4261     04E4  3185  255B  3184   	fcall	_trunc
  4262     04E7  0841               	movf	?_trunc,w
  4263     04E8  00C9               	movwf	___ftsub@f2
  4264     04E9  0842               	movf	?_trunc+1,w
  4265     04EA  00CA               	movwf	___ftsub@f2+1
  4266     04EB  0843               	movf	?_trunc+2,w
  4267     04EC  00CB               	movwf	___ftsub@f2+2
  4268     04ED  084F               	movf	round@x,w
  4269     04EE  00CC               	movwf	___ftsub@f1
  4270     04EF  0850               	movf	round@x+1,w
  4271     04F0  00CD               	movwf	___ftsub@f1+1
  4272     04F1  0851               	movf	round@x+2,w
  4273     04F2  00CE               	movwf	___ftsub@f1+2
  4274     04F3  3186  266C  3184   	fcall	___ftsub
  4275     04F6  0849               	movf	?___ftsub,w
  4276     04F7  00D2               	movwf	round@f
  4277     04F8  084A               	movf	?___ftsub+1,w
  4278     04F9  00D3               	movwf	round@f+1
  4279     04FA  084B               	movf	?___ftsub+2,w
  4280     04FB  00D4               	movwf	round@f+2
  4281     04FC  0852               	movf	round@f,w
  4282     04FD  00A1               	movwf	i1___ftadd@f1
  4283     04FE  0853               	movf	round@f+1,w
  4284     04FF  00A2               	movwf	i1___ftadd@f1+1
  4285     0500  0854               	movf	round@f+2,w
  4286     0501  00A3               	movwf	i1___ftadd@f1+2
  4287     0502  084F               	movf	round@x,w
  4288     0503  00A4               	movwf	i1___ftadd@f2
  4289     0504  0850               	movf	round@x+1,w
  4290     0505  00A5               	movwf	i1___ftadd@f2+1
  4291     0506  0851               	movf	round@x+2,w
  4292     0507  00A6               	movwf	i1___ftadd@f2+2
  4293     0508  3181  211C  3184   	fcall	i1___ftadd
  4294     050B  0821               	movf	?i1___ftadd,w
  4295     050C  00CF               	movwf	round@x
  4296     050D  0822               	movf	?i1___ftadd+1,w
  4297     050E  00D0               	movwf	round@x+1
  4298     050F  0823               	movf	?i1___ftadd+2,w
  4299     0510  00D1               	movwf	round@x+2
  4300     0511  084F               	movf	round@x,w
  4301     0512  00C1               	movwf	trunc@x
  4302     0513  0850               	movf	round@x+1,w
  4303     0514  00C2               	movwf	trunc@x+1
  4304     0515  0851               	movf	round@x+2,w
  4305     0516  00C3               	movwf	trunc@x+2
  4306     0517  3185  255B         	fcall	_trunc
  4307     0519  0841               	movf	?_trunc,w
  4308     051A  00CF               	movwf	?_round
  4309     051B  0842               	movf	?_trunc+1,w
  4310     051C  00D0               	movwf	?_round+1
  4311     051D  0843               	movf	?_trunc+2,w
  4312     051E  00D1               	movwf	?_round+2
  4313     051F  0008               	return
  4314     0520                     __end_of_round:
  4315                           
  4316                           	psect	text26
  4317     055B                     __ptext26:	
  4318 ;; *************** function _trunc *****************
  4319 ;; Defined at:
  4320 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\trunc.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  x               3   33[BANK0 ] void 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  i               3   36[BANK0 ] void 
  4325 ;;  expon           2   39[BANK0 ] int 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  3   33[BANK0 ] int 
  4328 ;; Registers used:
  4329 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4330 ;; Tracked objects:
  4331 ;;		On entry : 1F/0
  4332 ;;		On exit  : 1F/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4335 ;;      Params:         0       3       0       0       0       0
  4336 ;;      Locals:         0       5       0       0       0       0
  4337 ;;      Temps:          0       0       0       0       0       0
  4338 ;;      Totals:         0       8       0       0       0       0
  4339 ;;Total ram usage:        8 bytes
  4340 ;; Hardware stack levels used: 1
  4341 ;; Hardware stack levels required when called: 2
  4342 ;; This function calls:
  4343 ;;		___altoft
  4344 ;;		___fttol
  4345 ;;		_frexp
  4346 ;; This function is called by:
  4347 ;;		_round
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351     055B                     _trunc:	
  4352                           ;psect for function _trunc
  4353                           
  4354                           
  4355                           ;incstack = 0
  4356                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4357     055B  0841               	movf	trunc@x,w
  4358     055C  00F0               	movwf	frexp@value
  4359     055D  0842               	movf	trunc@x+1,w
  4360     055E  00F1               	movwf	frexp@value+1
  4361     055F  0843               	movf	trunc@x+2,w
  4362     0560  00F2               	movwf	frexp@value+2
  4363     0561  3047               	movlw	(low (trunc@expon| 0))& (0+255)
  4364     0562  00F3               	movwf	frexp@eptr
  4365     0563  3185  2596  3185   	fcall	_frexp
  4366     0566  1FC8               	btfss	trunc@expon+1,7
  4367     0567  2D6F               	goto	i1l1717
  4368     0568  3000               	movlw	0
  4369     0569  00C1               	movwf	?_trunc
  4370     056A  3000               	movlw	0
  4371     056B  00C2               	movwf	?_trunc+1
  4372     056C  3000               	movlw	0
  4373     056D  00C3               	movwf	?_trunc+2
  4374     056E  0008               	return
  4375     056F                     i1l1717:
  4376     056F  3000               	movlw	0
  4377     0570  0248               	subwf	trunc@expon+1,w
  4378     0571  3015               	movlw	21
  4379     0572  1903               	skipnz
  4380     0573  0247               	subwf	trunc@expon,w
  4381     0574  1803               	btfsc	3,0
  4382     0575  0008               	return
  4383     0576  0841               	movf	trunc@x,w
  4384     0577  00AD               	movwf	___fttol@f1
  4385     0578  0842               	movf	trunc@x+1,w
  4386     0579  00AE               	movwf	___fttol@f1+1
  4387     057A  0843               	movf	trunc@x+2,w
  4388     057B  00AF               	movwf	___fttol@f1+2
  4389     057C  3183  2303  3185   	fcall	___fttol
  4390     057F  0830               	movf	?___fttol+3,w
  4391     0580  00BD               	movwf	___altoft@c+3
  4392     0581  082F               	movf	?___fttol+2,w
  4393     0582  00BC               	movwf	___altoft@c+2
  4394     0583  082E               	movf	?___fttol+1,w
  4395     0584  00BB               	movwf	___altoft@c+1
  4396     0585  082D               	movf	?___fttol,w
  4397     0586  00BA               	movwf	___altoft@c
  4398     0587  3185  25CB         	fcall	___altoft
  4399     0589  083A               	movf	?___altoft,w
  4400     058A  00C4               	movwf	trunc@i
  4401     058B  083B               	movf	?___altoft+1,w
  4402     058C  00C5               	movwf	trunc@i+1
  4403     058D  083C               	movf	?___altoft+2,w
  4404     058E  00C6               	movwf	trunc@i+2
  4405     058F  0844               	movf	trunc@i,w
  4406     0590  00C1               	movwf	?_trunc
  4407     0591  0845               	movf	trunc@i+1,w
  4408     0592  00C2               	movwf	?_trunc+1
  4409     0593  0846               	movf	trunc@i+2,w
  4410     0594  00C3               	movwf	?_trunc+2
  4411     0595  0008               	return
  4412     0596                     __end_of_trunc:
  4413                           
  4414                           	psect	text27
  4415     0596                     __ptext27:	
  4416 ;; *************** function _frexp *****************
  4417 ;; Defined at:
  4418 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\frexp.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  value           3    0[COMMON] int 
  4421 ;;  eptr            1    3[COMMON] PTR int 
  4422 ;;		 -> trunc@expon(2), 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  3    0[COMMON] PTR int 
  4427 ;; Registers used:
  4428 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4429 ;; Tracked objects:
  4430 ;;		On entry : 1F/0
  4431 ;;		On exit  : 1F/0
  4432 ;;		Unchanged: 1F/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4434 ;;      Params:         4       0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0       0
  4436 ;;      Temps:          2       0       0       0       0       0
  4437 ;;      Totals:         6       0       0       0       0       0
  4438 ;;Total ram usage:        6 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_trunc
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447     0596                     _frexp:	
  4448                           ;psect for function _frexp
  4449                           
  4450                           
  4451                           ;incstack = 0
  4452                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  4453     0596  0872               	movf	frexp@value+2,w
  4454     0597  0471               	iorwf	frexp@value+1,w
  4455     0598  0470               	iorwf	frexp@value,w
  4456     0599  1D03               	skipz
  4457     059A  2DA2               	goto	i1l1621
  4458     059B  0873               	movf	frexp@eptr,w
  4459     059C  0086               	movwf	6
  4460     059D  0187               	clrf	7
  4461     059E  3000               	movlw	0
  4462     059F  3FC0               	movwi [0]fsr1
  4463     05A0  3FC1               	movwi [1]fsr1
  4464     05A1  0008               	return
  4465     05A2                     i1l1621:
  4466     05A2  0872               	movf	frexp@value+2,w
  4467     05A3  397F               	andlw	127
  4468     05A4  00F4               	movwf	??_frexp
  4469     05A5  01F5               	clrf	??_frexp+1
  4470     05A6  35F4               	lslf	??_frexp,f
  4471     05A7  0DF5               	rlf	??_frexp+1,f
  4472     05A8  0873               	movf	frexp@eptr,w
  4473     05A9  0086               	movwf	6
  4474     05AA  0187               	clrf	7
  4475     05AB  0874               	movf	??_frexp,w
  4476     05AC  3FC0               	movwi [0]fsr1
  4477     05AD  0875               	movf	??_frexp+1,w
  4478     05AE  3FC1               	movwi [1]fsr1
  4479     05AF  0D71               	rlf	frexp@value+1,w
  4480     05B0  0D71               	rlf	frexp@value+1,w
  4481     05B1  3901               	andlw	1
  4482     05B2  00F4               	movwf	??_frexp
  4483     05B3  01F5               	clrf	??_frexp+1
  4484     05B4  0873               	movf	frexp@eptr,w
  4485     05B5  0086               	movwf	6
  4486     05B6  0187               	clrf	7
  4487     05B7  0874               	movf	??_frexp,w
  4488     05B8  0481               	iorwf	1,f
  4489     05B9  3141               	addfsr 1,1
  4490     05BA  0875               	movf	??_frexp+1,w
  4491     05BB  0481               	iorwf	1,f
  4492     05BC  0873               	movf	frexp@eptr,w
  4493     05BD  0086               	movwf	6
  4494     05BE  0187               	clrf	7
  4495     05BF  3082               	movlw	130
  4496     05C0  0781               	addwf	1,f
  4497     05C1  3141               	addfsr 1,1
  4498     05C2  30FF               	movlw	255
  4499     05C3  3D81               	addwfc	1,f
  4500     05C4  317F               	addfsr 1,-1
  4501     05C5  0872               	movf	frexp@value+2,w
  4502     05C6  3980               	andlw	-128
  4503     05C7  383F               	iorlw	63
  4504     05C8  00F2               	movwf	frexp@value+2
  4505     05C9  13F1               	bcf	frexp@value+1,7
  4506     05CA  0008               	return
  4507     05CB                     __end_of_frexp:
  4508                           
  4509                           	psect	text28
  4510     0303                     __ptext28:	
  4511 ;; *************** function ___fttol *****************
  4512 ;; Defined at:
  4513 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\fttol.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  f1              3   13[BANK0 ] float 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  lval            4   21[BANK0 ] unsigned long 
  4518 ;;  exp1            1   25[BANK0 ] unsigned char 
  4519 ;;  sign1           1   20[BANK0 ] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  4   13[BANK0 ] long 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0
  4524 ;; Tracked objects:
  4525 ;;		On entry : 1F/0
  4526 ;;		On exit  : 1F/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4529 ;;      Params:         0       4       0       0       0       0
  4530 ;;      Locals:         0       6       0       0       0       0
  4531 ;;      Temps:          0       3       0       0       0       0
  4532 ;;      Totals:         0      13       0       0       0       0
  4533 ;;Total ram usage:       13 bytes
  4534 ;; Hardware stack levels used: 1
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_renderMatrix
  4539 ;;		_trunc
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543     0303                     ___fttol:	
  4544                           ;psect for function ___fttol
  4545                           
  4546                           
  4547                           ;incstack = 0
  4548                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4549     0303  082D               	movf	___fttol@f1,w
  4550     0304  00B1               	movwf	??___fttol
  4551     0305  082E               	movf	___fttol@f1+1,w
  4552     0306  00B2               	movwf	??___fttol+1
  4553     0307  082F               	movf	___fttol@f1+2,w
  4554     0308  00B3               	movwf	??___fttol+2
  4555     0309  1003               	clrc
  4556     030A  0D32               	rlf	??___fttol+1,w
  4557     030B  0D33               	rlf	??___fttol+2,w
  4558     030C  00B9               	movwf	___fttol@exp1
  4559     030D  0839               	movf	___fttol@exp1,w
  4560     030E  1D03               	btfss	3,2
  4561     030F  2B19               	goto	i1l1579
  4562     0310                     i1l1575:
  4563     0310  3000               	movlw	0
  4564     0311  00B0               	movwf	?___fttol+3
  4565     0312  3000               	movlw	0
  4566     0313  00AF               	movwf	?___fttol+2
  4567     0314  3000               	movlw	0
  4568     0315  00AE               	movwf	?___fttol+1
  4569     0316  3000               	movlw	0
  4570     0317  00AD               	movwf	?___fttol
  4571     0318  0008               	return
  4572     0319                     i1l1579:
  4573     0319  082D               	movf	___fttol@f1,w
  4574     031A  00B1               	movwf	??___fttol
  4575     031B  082E               	movf	___fttol@f1+1,w
  4576     031C  00B2               	movwf	??___fttol+1
  4577     031D  082F               	movf	___fttol@f1+2,w
  4578     031E  00B3               	movwf	??___fttol+2
  4579     031F  3017               	movlw	23
  4580     0320                     u130_25:
  4581     0320  36B3               	lsrf	??___fttol+2,f
  4582     0321  0CB2               	rrf	??___fttol+1,f
  4583     0322  0CB1               	rrf	??___fttol,f
  4584     0323  0B89               	decfsz	9,f
  4585     0324  2B20               	goto	u130_25
  4586     0325  0831               	movf	??___fttol,w
  4587     0326  00B4               	movwf	___fttol@sign1
  4588     0327  17AE               	bsf	___fttol@f1+1,7
  4589     0328  30FF               	movlw	255
  4590     0329  05AD               	andwf	___fttol@f1,f
  4591     032A  30FF               	movlw	255
  4592     032B  05AE               	andwf	___fttol@f1+1,f
  4593     032C  3000               	movlw	0
  4594     032D  05AF               	andwf	___fttol@f1+2,f
  4595     032E  082D               	movf	___fttol@f1,w
  4596     032F  00B5               	movwf	___fttol@lval
  4597     0330  082E               	movf	___fttol@f1+1,w
  4598     0331  00B6               	movwf	___fttol@lval+1
  4599     0332  082F               	movf	___fttol@f1+2,w
  4600     0333  00B7               	movwf	___fttol@lval+2
  4601     0334  01B8               	clrf	___fttol@lval+3
  4602     0335  308E               	movlw	142
  4603     0336  02B9               	subwf	___fttol@exp1,f
  4604     0337  1FB9               	btfss	___fttol@exp1,7
  4605     0338  2B4C               	goto	i1l1599
  4606     0339  0839               	movf	___fttol@exp1,w
  4607     033A  3A80               	xorlw	128
  4608     033B  3E8F               	addlw	143
  4609     033C  1C03               	btfss	3,0
  4610     033D  2B10               	goto	i1l1575
  4611     033E                     i1l1597:
  4612     033E  3001               	movlw	1
  4613     033F                     u133_25:
  4614     033F  36B8               	lsrf	___fttol@lval+3,f
  4615     0340  0CB7               	rrf	___fttol@lval+2,f
  4616     0341  0CB6               	rrf	___fttol@lval+1,f
  4617     0342  0CB5               	rrf	___fttol@lval,f
  4618     0343  0B89               	decfsz	9,f
  4619     0344  2B3F               	goto	u133_25
  4620     0345  3001               	movlw	1
  4621     0346  00B1               	movwf	??___fttol
  4622     0347  0831               	movf	??___fttol,w
  4623     0348  07B9               	addwf	___fttol@exp1,f
  4624     0349  1903               	btfsc	3,2
  4625     034A  2B5D               	goto	i1l1607
  4626     034B  2B3E               	goto	i1l1597
  4627     034C                     i1l1599:
  4628     034C  3018               	movlw	24
  4629     034D  0239               	subwf	___fttol@exp1,w
  4630     034E  1803               	btfsc	3,0
  4631     034F  2B10               	goto	i1l1575
  4632     0350                     i1l787:
  4633     0350  0839               	movf	___fttol@exp1,w
  4634     0351  1903               	btfsc	3,2
  4635     0352  2B5D               	goto	i1l1607
  4636     0353  3001               	movlw	1
  4637     0354                     u136_25:
  4638     0354  35B5               	lslf	___fttol@lval,f
  4639     0355  0DB6               	rlf	___fttol@lval+1,f
  4640     0356  0DB7               	rlf	___fttol@lval+2,f
  4641     0357  0DB8               	rlf	___fttol@lval+3,f
  4642     0358  0B89               	decfsz	9,f
  4643     0359  2B54               	goto	u136_25
  4644     035A  3001               	movlw	1
  4645     035B  02B9               	subwf	___fttol@exp1,f
  4646     035C  2B50               	goto	i1l787
  4647     035D                     i1l1607:
  4648     035D  0834               	movf	___fttol@sign1,w
  4649     035E  1903               	btfsc	3,2
  4650     035F  2B6B               	goto	i1l1611
  4651     0360  09B5               	comf	___fttol@lval,f
  4652     0361  09B6               	comf	___fttol@lval+1,f
  4653     0362  09B7               	comf	___fttol@lval+2,f
  4654     0363  09B8               	comf	___fttol@lval+3,f
  4655     0364  0AB5               	incf	___fttol@lval,f
  4656     0365  1903               	skipnz
  4657     0366  0AB6               	incf	___fttol@lval+1,f
  4658     0367  1903               	skipnz
  4659     0368  0AB7               	incf	___fttol@lval+2,f
  4660     0369  1903               	skipnz
  4661     036A  0AB8               	incf	___fttol@lval+3,f
  4662     036B                     i1l1611:
  4663     036B  0838               	movf	___fttol@lval+3,w
  4664     036C  00B0               	movwf	?___fttol+3
  4665     036D  0837               	movf	___fttol@lval+2,w
  4666     036E  00AF               	movwf	?___fttol+2
  4667     036F  0836               	movf	___fttol@lval+1,w
  4668     0370  00AE               	movwf	?___fttol+1
  4669     0371  0835               	movf	___fttol@lval,w
  4670     0372  00AD               	movwf	?___fttol
  4671     0373  0008               	return
  4672     0374                     __end_of___fttol:
  4673                           
  4674                           	psect	text29
  4675     05CB                     __ptext29:	
  4676 ;; *************** function ___altoft *****************
  4677 ;; Defined at:
  4678 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\altoft.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  c               4   26[BANK0 ] long 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  sign            1   32[BANK0 ] unsigned char 
  4683 ;;  exp             1   31[BANK0 ] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  3   26[BANK0 ] float 
  4686 ;; Registers used:
  4687 ;;		wreg, status,2, status,0, pclath, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 1F/0
  4690 ;;		On exit  : 1F/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4693 ;;      Params:         0       4       0       0       0       0
  4694 ;;      Locals:         0       2       0       0       0       0
  4695 ;;      Temps:          0       1       0       0       0       0
  4696 ;;      Totals:         0       7       0       0       0       0
  4697 ;;Total ram usage:        7 bytes
  4698 ;; Hardware stack levels used: 1
  4699 ;; Hardware stack levels required when called: 1
  4700 ;; This function calls:
  4701 ;;		i1___ftpack
  4702 ;; This function is called by:
  4703 ;;		_trunc
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707     05CB                     ___altoft:	
  4708                           ;psect for function ___altoft
  4709                           
  4710                           
  4711                           ;incstack = 0
  4712                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4713     05CB  01C0               	clrf	___altoft@sign
  4714     05CC  308E               	movlw	142
  4715     05CD  00BF               	movwf	___altoft@exp
  4716     05CE  1FBD               	btfss	___altoft@c+3,7
  4717     05CF  2DDD               	goto	i1l1567
  4718     05D0  09BA               	comf	___altoft@c,f
  4719     05D1  09BB               	comf	___altoft@c+1,f
  4720     05D2  09BC               	comf	___altoft@c+2,f
  4721     05D3  09BD               	comf	___altoft@c+3,f
  4722     05D4  0ABA               	incf	___altoft@c,f
  4723     05D5  1903               	skipnz
  4724     05D6  0ABB               	incf	___altoft@c+1,f
  4725     05D7  1903               	skipnz
  4726     05D8  0ABC               	incf	___altoft@c+2,f
  4727     05D9  1903               	skipnz
  4728     05DA  0ABD               	incf	___altoft@c+3,f
  4729     05DB  01C0               	clrf	___altoft@sign
  4730     05DC  0AC0               	incf	___altoft@sign,f
  4731     05DD                     i1l1567:
  4732     05DD  30FF               	movlw	255
  4733     05DE  053D               	andwf	___altoft@c+3,w
  4734     05DF  1903               	btfsc	3,2
  4735     05E0  2DED               	goto	i1l1569
  4736     05E1  3001               	movlw	1
  4737     05E2                     u127_25:
  4738     05E2  36BD               	lsrf	___altoft@c+3,f
  4739     05E3  0CBC               	rrf	___altoft@c+2,f
  4740     05E4  0CBB               	rrf	___altoft@c+1,f
  4741     05E5  0CBA               	rrf	___altoft@c,f
  4742     05E6  0B89               	decfsz	9,f
  4743     05E7  2DE2               	goto	u127_25
  4744     05E8  3001               	movlw	1
  4745     05E9  00BE               	movwf	??___altoft
  4746     05EA  083E               	movf	??___altoft,w
  4747     05EB  07BF               	addwf	___altoft@exp,f
  4748     05EC  2DDD               	goto	i1l1567
  4749     05ED                     i1l1569:
  4750     05ED  083A               	movf	___altoft@c,w
  4751     05EE  00F0               	movwf	i1___ftpack@arg
  4752     05EF  083B               	movf	___altoft@c+1,w
  4753     05F0  00F1               	movwf	i1___ftpack@arg+1
  4754     05F1  083C               	movf	___altoft@c+2,w
  4755     05F2  00F2               	movwf	i1___ftpack@arg+2
  4756     05F3  083F               	movf	___altoft@exp,w
  4757     05F4  00F3               	movwf	i1___ftpack@exp
  4758     05F5  0840               	movf	___altoft@sign,w
  4759     05F6  00F4               	movwf	i1___ftpack@sign
  4760     05F7  3183  23D8         	fcall	i1___ftpack
  4761     05F9  0870               	movf	?i1___ftpack,w
  4762     05FA  00BA               	movwf	?___altoft
  4763     05FB  0871               	movf	?i1___ftpack+1,w
  4764     05FC  00BB               	movwf	?___altoft+1
  4765     05FD  0872               	movf	?i1___ftpack+2,w
  4766     05FE  00BC               	movwf	?___altoft+2
  4767     05FF  0008               	return
  4768     0600                     __end_of___altoft:
  4769                           
  4770                           	psect	text30
  4771     066C                     __ptext30:	
  4772 ;; *************** function ___ftsub *****************
  4773 ;; Defined at:
  4774 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftsub.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  f2              3   41[BANK0 ] float 
  4777 ;;  f1              3   44[BANK0 ] float 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  3   41[BANK0 ] float 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0, pclath, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 1F/0
  4786 ;;		On exit  : 1F/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4789 ;;      Params:         0       6       0       0       0       0
  4790 ;;      Locals:         0       0       0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0       0
  4792 ;;      Totals:         0       6       0       0       0       0
  4793 ;;Total ram usage:        6 bytes
  4794 ;; Hardware stack levels used: 1
  4795 ;; Hardware stack levels required when called: 2
  4796 ;; This function calls:
  4797 ;;		i1___ftadd
  4798 ;; This function is called by:
  4799 ;;		_round
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803     066C                     ___ftsub:	
  4804                           ;psect for function ___ftsub
  4805                           
  4806                           
  4807                           ;incstack = 0
  4808                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4809     066C  084B               	movf	___ftsub@f2+2,w
  4810     066D  044A               	iorwf	___ftsub@f2+1,w
  4811     066E  0449               	iorwf	___ftsub@f2,w
  4812     066F  1903               	skipnz
  4813     0670  2E73               	goto	i1l1705
  4814     0671  3080               	movlw	128
  4815     0672  06CB               	xorwf	___ftsub@f2+2,f
  4816     0673                     i1l1705:
  4817     0673  084C               	movf	___ftsub@f1,w
  4818     0674  00A1               	movwf	i1___ftadd@f1
  4819     0675  084D               	movf	___ftsub@f1+1,w
  4820     0676  00A2               	movwf	i1___ftadd@f1+1
  4821     0677  084E               	movf	___ftsub@f1+2,w
  4822     0678  00A3               	movwf	i1___ftadd@f1+2
  4823     0679  0849               	movf	___ftsub@f2,w
  4824     067A  00A4               	movwf	i1___ftadd@f2
  4825     067B  084A               	movf	___ftsub@f2+1,w
  4826     067C  00A5               	movwf	i1___ftadd@f2+1
  4827     067D  084B               	movf	___ftsub@f2+2,w
  4828     067E  00A6               	movwf	i1___ftadd@f2+2
  4829     067F  3181  211C         	fcall	i1___ftadd
  4830     0681  0821               	movf	?i1___ftadd,w
  4831     0682  00C9               	movwf	?___ftsub
  4832     0683  0822               	movf	?i1___ftadd+1,w
  4833     0684  00CA               	movwf	?___ftsub+1
  4834     0685  0823               	movf	?i1___ftadd+2,w
  4835     0686  00CB               	movwf	?___ftsub+2
  4836     0687  0008               	return
  4837     0688                     __end_of___ftsub:
  4838                           
  4839                           	psect	text31
  4840     011C                     __ptext31:	
  4841 ;; *************** function i1___ftadd *****************
  4842 ;; Defined at:
  4843 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\ftadd.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  f1              3    1[BANK0 ] float 
  4846 ;;  f2              3    4[BANK0 ] float 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  exp1            1   12[BANK0 ] unsigned char 
  4849 ;;  exp2            1   11[BANK0 ] unsigned char 
  4850 ;;  sign            1   10[BANK0 ] unsigned char 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  3    1[BANK0 ] float 
  4853 ;; Registers used:
  4854 ;;		wreg, status,2, status,0, pclath, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 1F/0
  4857 ;;		On exit  : 1F/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4860 ;;      Params:         0       6       0       0       0       0
  4861 ;;      Locals:         0       3       0       0       0       0
  4862 ;;      Temps:          0       3       0       0       0       0
  4863 ;;      Totals:         0      12       0       0       0       0
  4864 ;;Total ram usage:       12 bytes
  4865 ;; Hardware stack levels used: 1
  4866 ;; Hardware stack levels required when called: 1
  4867 ;; This function calls:
  4868 ;;		i1___ftpack
  4869 ;; This function is called by:
  4870 ;;		_renderMatrix
  4871 ;;		___ftsub
  4872 ;;		_round
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876     011C                     i1___ftadd:	
  4877                           ;psect for function i1___ftadd
  4878                           
  4879                           
  4880                           ;incstack = 0
  4881                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4882     011C  0821               	movf	i1___ftadd@f1,w
  4883     011D  00A7               	movwf	??i1___ftadd
  4884     011E  0822               	movf	i1___ftadd@f1+1,w
  4885     011F  00A8               	movwf	??i1___ftadd+1
  4886     0120  0823               	movf	i1___ftadd@f1+2,w
  4887     0121  00A9               	movwf	??i1___ftadd+2
  4888     0122  1003               	clrc
  4889     0123  0D28               	rlf	??i1___ftadd+1,w
  4890     0124  0D29               	rlf	??i1___ftadd+2,w
  4891     0125  00AC               	movwf	i1___ftadd@exp1
  4892     0126  0824               	movf	i1___ftadd@f2,w
  4893     0127  00A7               	movwf	??i1___ftadd
  4894     0128  0825               	movf	i1___ftadd@f2+1,w
  4895     0129  00A8               	movwf	??i1___ftadd+1
  4896     012A  0826               	movf	i1___ftadd@f2+2,w
  4897     012B  00A9               	movwf	??i1___ftadd+2
  4898     012C  1003               	clrc
  4899     012D  0D28               	rlf	??i1___ftadd+1,w
  4900     012E  0D29               	rlf	??i1___ftadd+2,w
  4901     012F  00AB               	movwf	i1___ftadd@exp2
  4902     0130  082C               	movf	i1___ftadd@exp1,w
  4903     0131  1903               	btfsc	3,2
  4904     0132  293F               	goto	i1l1637
  4905     0133  082B               	movf	i1___ftadd@exp2,w
  4906     0134  022C               	subwf	i1___ftadd@exp1,w
  4907     0135  1803               	skipnc
  4908     0136  2946               	goto	i1l1641
  4909     0137  082B               	movf	i1___ftadd@exp2,w
  4910     0138  00A7               	movwf	??i1___ftadd
  4911     0139  082C               	movf	i1___ftadd@exp1,w
  4912     013A  02A7               	subwf	??i1___ftadd,f
  4913     013B  3019               	movlw	25
  4914     013C  0227               	subwf	??i1___ftadd,w
  4915     013D  1C03               	skipc
  4916     013E  2946               	goto	i1l1641
  4917     013F                     i1l1637:
  4918     013F  0824               	movf	i1___ftadd@f2,w
  4919     0140  00A1               	movwf	?i1___ftadd
  4920     0141  0825               	movf	i1___ftadd@f2+1,w
  4921     0142  00A2               	movwf	?i1___ftadd+1
  4922     0143  0826               	movf	i1___ftadd@f2+2,w
  4923     0144  00A3               	movwf	?i1___ftadd+2
  4924     0145  0008               	return
  4925     0146                     i1l1641:
  4926     0146  082B               	movf	i1___ftadd@exp2,w
  4927     0147  1903               	btfsc	3,2
  4928     0148  0008               	return
  4929     0149  082C               	movf	i1___ftadd@exp1,w
  4930     014A  022B               	subwf	i1___ftadd@exp2,w
  4931     014B  1803               	skipnc
  4932     014C  2955               	goto	i1l1647
  4933     014D  082C               	movf	i1___ftadd@exp1,w
  4934     014E  00A7               	movwf	??i1___ftadd
  4935     014F  082B               	movf	i1___ftadd@exp2,w
  4936     0150  02A7               	subwf	??i1___ftadd,f
  4937     0151  3019               	movlw	25
  4938     0152  0227               	subwf	??i1___ftadd,w
  4939     0153  1803               	btfsc	3,0
  4940     0154  0008               	return
  4941     0155                     i1l1647:
  4942     0155  3006               	movlw	6
  4943     0156  00AA               	movwf	i1___ftadd@sign
  4944     0157  1BA3               	btfsc	i1___ftadd@f1+2,7
  4945     0158  17AA               	bsf	i1___ftadd@sign,7
  4946     0159  1BA6               	btfsc	i1___ftadd@f2+2,7
  4947     015A  172A               	bsf	i1___ftadd@sign,6
  4948     015B  17A2               	bsf	i1___ftadd@f1+1,7
  4949     015C  30FF               	movlw	255
  4950     015D  05A1               	andwf	i1___ftadd@f1,f
  4951     015E  30FF               	movlw	255
  4952     015F  05A2               	andwf	i1___ftadd@f1+1,f
  4953     0160  3000               	movlw	0
  4954     0161  05A3               	andwf	i1___ftadd@f1+2,f
  4955     0162  17A5               	bsf	i1___ftadd@f2+1,7
  4956     0163  30FF               	movlw	255
  4957     0164  05A4               	andwf	i1___ftadd@f2,f
  4958     0165  30FF               	movlw	255
  4959     0166  05A5               	andwf	i1___ftadd@f2+1,f
  4960     0167  3000               	movlw	0
  4961     0168  05A6               	andwf	i1___ftadd@f2+2,f
  4962     0169  082B               	movf	i1___ftadd@exp2,w
  4963     016A  022C               	subwf	i1___ftadd@exp1,w
  4964     016B  1803               	skipnc
  4965     016C  298F               	goto	i1l1669
  4966     016D                     i1l1659:
  4967     016D  3001               	movlw	1
  4968     016E                     u149_25:
  4969     016E  35A4               	lslf	i1___ftadd@f2,f
  4970     016F  0DA5               	rlf	i1___ftadd@f2+1,f
  4971     0170  0DA6               	rlf	i1___ftadd@f2+2,f
  4972     0171  0B89               	decfsz	9,f
  4973     0172  296E               	goto	u149_25
  4974     0173  3001               	movlw	1
  4975     0174  02AB               	subwf	i1___ftadd@exp2,f
  4976     0175  082B               	movf	i1___ftadd@exp2,w
  4977     0176  062C               	xorwf	i1___ftadd@exp1,w
  4978     0177  1903               	skipnz
  4979     0178  298A               	goto	i1l1667
  4980     0179  3001               	movlw	1
  4981     017A  02AA               	subwf	i1___ftadd@sign,f
  4982     017B  082A               	movf	i1___ftadd@sign,w
  4983     017C  3907               	andlw	7
  4984     017D  1903               	btfsc	3,2
  4985     017E  298A               	goto	i1l1667
  4986     017F  296D               	goto	i1l1659
  4987     0180                     i1l1665:
  4988     0180  3001               	movlw	1
  4989     0181                     u152_25:
  4990     0181  36A3               	lsrf	i1___ftadd@f1+2,f
  4991     0182  0CA2               	rrf	i1___ftadd@f1+1,f
  4992     0183  0CA1               	rrf	i1___ftadd@f1,f
  4993     0184  0B89               	decfsz	9,f
  4994     0185  2981               	goto	u152_25
  4995     0186  3001               	movlw	1
  4996     0187  00A7               	movwf	??i1___ftadd
  4997     0188  0827               	movf	??i1___ftadd,w
  4998     0189  07AC               	addwf	i1___ftadd@exp1,f
  4999     018A                     i1l1667:
  5000     018A  082C               	movf	i1___ftadd@exp1,w
  5001     018B  062B               	xorwf	i1___ftadd@exp2,w
  5002     018C  1903               	btfsc	3,2
  5003     018D  29B4               	goto	i1l727
  5004     018E  2980               	goto	i1l1665
  5005     018F                     i1l1669:
  5006     018F  082C               	movf	i1___ftadd@exp1,w
  5007     0190  022B               	subwf	i1___ftadd@exp2,w
  5008     0191  1803               	skipnc
  5009     0192  29B4               	goto	i1l727
  5010     0193                     i1l1671:
  5011     0193  3001               	movlw	1
  5012     0194                     u155_25:
  5013     0194  35A1               	lslf	i1___ftadd@f1,f
  5014     0195  0DA2               	rlf	i1___ftadd@f1+1,f
  5015     0196  0DA3               	rlf	i1___ftadd@f1+2,f
  5016     0197  0B89               	decfsz	9,f
  5017     0198  2994               	goto	u155_25
  5018     0199  3001               	movlw	1
  5019     019A  02AC               	subwf	i1___ftadd@exp1,f
  5020     019B  082B               	movf	i1___ftadd@exp2,w
  5021     019C  062C               	xorwf	i1___ftadd@exp1,w
  5022     019D  1903               	skipnz
  5023     019E  29B0               	goto	i1l1679
  5024     019F  3001               	movlw	1
  5025     01A0  02AA               	subwf	i1___ftadd@sign,f
  5026     01A1  082A               	movf	i1___ftadd@sign,w
  5027     01A2  3907               	andlw	7
  5028     01A3  1903               	btfsc	3,2
  5029     01A4  29B0               	goto	i1l1679
  5030     01A5  2993               	goto	i1l1671
  5031     01A6                     i1l1677:
  5032     01A6  3001               	movlw	1
  5033     01A7                     u158_25:
  5034     01A7  36A6               	lsrf	i1___ftadd@f2+2,f
  5035     01A8  0CA5               	rrf	i1___ftadd@f2+1,f
  5036     01A9  0CA4               	rrf	i1___ftadd@f2,f
  5037     01AA  0B89               	decfsz	9,f
  5038     01AB  29A7               	goto	u158_25
  5039     01AC  3001               	movlw	1
  5040     01AD  00A7               	movwf	??i1___ftadd
  5041     01AE  0827               	movf	??i1___ftadd,w
  5042     01AF  07AB               	addwf	i1___ftadd@exp2,f
  5043     01B0                     i1l1679:
  5044     01B0  082C               	movf	i1___ftadd@exp1,w
  5045     01B1  062B               	xorwf	i1___ftadd@exp2,w
  5046     01B2  1D03               	skipz
  5047     01B3  29A6               	goto	i1l1677
  5048     01B4                     i1l727:
  5049     01B4  1FAA               	btfss	i1___ftadd@sign,7
  5050     01B5  29C6               	goto	i1l1683
  5051     01B6  30FF               	movlw	255
  5052     01B7  06A1               	xorwf	i1___ftadd@f1,f
  5053     01B8  30FF               	movlw	255
  5054     01B9  06A2               	xorwf	i1___ftadd@f1+1,f
  5055     01BA  30FF               	movlw	255
  5056     01BB  06A3               	xorwf	i1___ftadd@f1+2,f
  5057     01BC  3001               	movlw	1
  5058     01BD  07A1               	addwf	i1___ftadd@f1,f
  5059     01BE  3000               	movlw	0
  5060     01BF  1803               	skipnc
  5061     01C0  3001               	movlw	1
  5062     01C1  07A2               	addwf	i1___ftadd@f1+1,f
  5063     01C2  3000               	movlw	0
  5064     01C3  1803               	skipnc
  5065     01C4  3001               	movlw	1
  5066     01C5  07A3               	addwf	i1___ftadd@f1+2,f
  5067     01C6                     i1l1683:
  5068     01C6  1F2A               	btfss	i1___ftadd@sign,6
  5069     01C7  29D8               	goto	i1l1687
  5070     01C8  30FF               	movlw	255
  5071     01C9  06A4               	xorwf	i1___ftadd@f2,f
  5072     01CA  30FF               	movlw	255
  5073     01CB  06A5               	xorwf	i1___ftadd@f2+1,f
  5074     01CC  30FF               	movlw	255
  5075     01CD  06A6               	xorwf	i1___ftadd@f2+2,f
  5076     01CE  3001               	movlw	1
  5077     01CF  07A4               	addwf	i1___ftadd@f2,f
  5078     01D0  3000               	movlw	0
  5079     01D1  1803               	skipnc
  5080     01D2  3001               	movlw	1
  5081     01D3  07A5               	addwf	i1___ftadd@f2+1,f
  5082     01D4  3000               	movlw	0
  5083     01D5  1803               	skipnc
  5084     01D6  3001               	movlw	1
  5085     01D7  07A6               	addwf	i1___ftadd@f2+2,f
  5086     01D8                     i1l1687:
  5087     01D8  01AA               	clrf	i1___ftadd@sign
  5088     01D9  0821               	movf	i1___ftadd@f1,w
  5089     01DA  07A4               	addwf	i1___ftadd@f2,f
  5090     01DB  0822               	movf	i1___ftadd@f1+1,w
  5091     01DC  3DA5               	addwfc	i1___ftadd@f2+1,f
  5092     01DD  0823               	movf	i1___ftadd@f1+2,w
  5093     01DE  3DA6               	addwfc	i1___ftadd@f2+2,f
  5094     01DF  1FA6               	btfss	i1___ftadd@f2+2,7
  5095     01E0  29F3               	goto	i1l1697
  5096     01E1  30FF               	movlw	255
  5097     01E2  06A4               	xorwf	i1___ftadd@f2,f
  5098     01E3  30FF               	movlw	255
  5099     01E4  06A5               	xorwf	i1___ftadd@f2+1,f
  5100     01E5  30FF               	movlw	255
  5101     01E6  06A6               	xorwf	i1___ftadd@f2+2,f
  5102     01E7  3001               	movlw	1
  5103     01E8  07A4               	addwf	i1___ftadd@f2,f
  5104     01E9  3000               	movlw	0
  5105     01EA  1803               	skipnc
  5106     01EB  3001               	movlw	1
  5107     01EC  07A5               	addwf	i1___ftadd@f2+1,f
  5108     01ED  3000               	movlw	0
  5109     01EE  1803               	skipnc
  5110     01EF  3001               	movlw	1
  5111     01F0  07A6               	addwf	i1___ftadd@f2+2,f
  5112     01F1  01AA               	clrf	i1___ftadd@sign
  5113     01F2  0AAA               	incf	i1___ftadd@sign,f
  5114     01F3                     i1l1697:
  5115     01F3  0824               	movf	i1___ftadd@f2,w
  5116     01F4  00F0               	movwf	i1___ftpack@arg
  5117     01F5  0825               	movf	i1___ftadd@f2+1,w
  5118     01F6  00F1               	movwf	i1___ftpack@arg+1
  5119     01F7  0826               	movf	i1___ftadd@f2+2,w
  5120     01F8  00F2               	movwf	i1___ftpack@arg+2
  5121     01F9  082C               	movf	i1___ftadd@exp1,w
  5122     01FA  00F3               	movwf	i1___ftpack@exp
  5123     01FB  082A               	movf	i1___ftadd@sign,w
  5124     01FC  00F4               	movwf	i1___ftpack@sign
  5125     01FD  3183  23D8         	fcall	i1___ftpack
  5126     01FF  0870               	movf	?i1___ftpack,w
  5127     0200  00A1               	movwf	?i1___ftadd
  5128     0201  0871               	movf	?i1___ftpack+1,w
  5129     0202  00A2               	movwf	?i1___ftadd+1
  5130     0203  0872               	movf	?i1___ftpack+2,w
  5131     0204  00A3               	movwf	?i1___ftadd+2
  5132     0205  0008               	return
  5133     0206                     __end_ofi1___ftadd:
  5134                           
  5135                           	psect	text32
  5136     0748                     __ptext32:	
  5137 ;; *************** function _getParameters *****************
  5138 ;; Defined at:
  5139 ;;		line 111 in file "main.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;		None
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		None
  5148 ;; Tracked objects:
  5149 ;;		On entry : 1F/0
  5150 ;;		On exit  : 1F/0
  5151 ;;		Unchanged: 1F/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5153 ;;      Params:         0       0       0       0       0       0
  5154 ;;      Locals:         0       0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0
  5156 ;;      Totals:         0       0       0       0       0       0
  5157 ;;Total ram usage:        0 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_renderMatrix
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166     0748                     _getParameters:	
  5167                           ;psect for function _getParameters
  5168                           
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in _getParameters: []
  5172     0748  0008               	return
  5173     0749                     __end_of_getParameters:
  5174                           
  5175                           	psect	text33
  5176     06A2                     __ptext33:	
  5177 ;; *************** function ___lbtoft *****************
  5178 ;; Defined at:
  5179 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\lbtoft.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  c               1    wreg     unsigned char 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  c               1    0[BANK0 ] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  3    8[COMMON] float 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0, pclath, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 1F/0
  5190 ;;		On exit  : 1F/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5193 ;;      Params:         3       0       0       0       0       0
  5194 ;;      Locals:         0       1       0       0       0       0
  5195 ;;      Temps:          3       0       0       0       0       0
  5196 ;;      Totals:         6       1       0       0       0       0
  5197 ;;Total ram usage:        7 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 1
  5200 ;; This function calls:
  5201 ;;		i1___ftpack
  5202 ;; This function is called by:
  5203 ;;		_renderMatrix
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207     06A2                     ___lbtoft:	
  5208                           ;psect for function ___lbtoft
  5209                           
  5210                           
  5211                           ;incstack = 0
  5212                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5213                           ;___lbtoft@c stored from wreg
  5214     06A2  00A0               	movwf	___lbtoft@c
  5215     06A3  0820               	movf	___lbtoft@c,w
  5216     06A4  00FB               	movwf	??___lbtoft
  5217     06A5  01FC               	clrf	??___lbtoft+1
  5218     06A6  01FD               	clrf	??___lbtoft+2
  5219     06A7  087B               	movf	??___lbtoft,w
  5220     06A8  00F0               	movwf	i1___ftpack@arg
  5221     06A9  087C               	movf	??___lbtoft+1,w
  5222     06AA  00F1               	movwf	i1___ftpack@arg+1
  5223     06AB  087D               	movf	??___lbtoft+2,w
  5224     06AC  00F2               	movwf	i1___ftpack@arg+2
  5225     06AD  308E               	movlw	142
  5226     06AE  00F3               	movwf	i1___ftpack@exp
  5227     06AF  01F4               	clrf	i1___ftpack@sign
  5228     06B0  3183  23D8         	fcall	i1___ftpack
  5229     06B2  0870               	movf	?i1___ftpack,w
  5230     06B3  00F8               	movwf	?___lbtoft
  5231     06B4  0871               	movf	?i1___ftpack+1,w
  5232     06B5  00F9               	movwf	?___lbtoft+1
  5233     06B6  0872               	movf	?i1___ftpack+2,w
  5234     06B7  00FA               	movwf	?___lbtoft+2
  5235     06B8  0008               	return
  5236     06B9                     __end_of___lbtoft:
  5237                           
  5238                           	psect	text34
  5239     03D8                     __ptext34:	
  5240 ;; *************** function i1___ftpack *****************
  5241 ;; Defined at:
  5242 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c90\common\float.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  arg             3    0[COMMON] unsigned um
  5245 ;;  exp             1    3[COMMON] unsigned char 
  5246 ;;  sign            1    4[COMMON] unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  3    0[COMMON] float 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0
  5253 ;; Tracked objects:
  5254 ;;		On entry : 1F/0
  5255 ;;		On exit  : 1F/0
  5256 ;;		Unchanged: 1F/0
  5257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5258 ;;      Params:         5       0       0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0
  5260 ;;      Temps:          3       0       0       0       0       0
  5261 ;;      Totals:         8       0       0       0       0       0
  5262 ;;Total ram usage:        8 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		___altoft
  5268 ;;		___lbtoft
  5269 ;;		i1___ftadd
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273     03D8                     i1___ftpack:	
  5274                           ;psect for function i1___ftpack
  5275                           
  5276                           
  5277                           ;incstack = 0
  5278                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  5279     03D8  0873               	movf	i1___ftpack@exp,w
  5280     03D9  1903               	btfsc	3,2
  5281     03DA  2BE0               	goto	i1l1529
  5282     03DB  0872               	movf	i1___ftpack@arg+2,w
  5283     03DC  0471               	iorwf	i1___ftpack@arg+1,w
  5284     03DD  0470               	iorwf	i1___ftpack@arg,w
  5285     03DE  1D03               	skipz
  5286     03DF  2BF1               	goto	i1l1535
  5287     03E0                     i1l1529:
  5288     03E0  3000               	movlw	0
  5289     03E1  00F0               	movwf	?i1___ftpack
  5290     03E2  3000               	movlw	0
  5291     03E3  00F1               	movwf	?i1___ftpack+1
  5292     03E4  3000               	movlw	0
  5293     03E5  00F2               	movwf	?i1___ftpack+2
  5294     03E6  0008               	return
  5295     03E7                     i1l1533:
  5296     03E7  3001               	movlw	1
  5297     03E8  00F5               	movwf	??i1___ftpack
  5298     03E9  0875               	movf	??i1___ftpack,w
  5299     03EA  07F3               	addwf	i1___ftpack@exp,f
  5300     03EB  3001               	movlw	1
  5301     03EC                     u116_25:
  5302     03EC  36F2               	lsrf	i1___ftpack@arg+2,f
  5303     03ED  0CF1               	rrf	i1___ftpack@arg+1,f
  5304     03EE  0CF0               	rrf	i1___ftpack@arg,f
  5305     03EF  0B89               	decfsz	9,f
  5306     03F0  2BEC               	goto	u116_25
  5307     03F1                     i1l1535:
  5308     03F1  30FE               	movlw	254
  5309     03F2  0572               	andwf	i1___ftpack@arg+2,w
  5310     03F3  1903               	btfsc	3,2
  5311     03F4  2C0A               	goto	i1l696
  5312     03F5  2BE7               	goto	i1l1533
  5313     03F6                     i1l1537:
  5314     03F6  3001               	movlw	1
  5315     03F7  00F5               	movwf	??i1___ftpack
  5316     03F8  0875               	movf	??i1___ftpack,w
  5317     03F9  07F3               	addwf	i1___ftpack@exp,f
  5318     03FA  3001               	movlw	1
  5319     03FB  07F0               	addwf	i1___ftpack@arg,f
  5320     03FC  3000               	movlw	0
  5321     03FD  1803               	skipnc
  5322     03FE  3001               	movlw	1
  5323     03FF  07F1               	addwf	i1___ftpack@arg+1,f
  5324     0400  3000               	movlw	0
  5325     0401  1803               	skipnc
  5326     0402  3001               	movlw	1
  5327     0403  07F2               	addwf	i1___ftpack@arg+2,f
  5328     0404  3001               	movlw	1
  5329     0405                     u118_25:
  5330     0405  36F2               	lsrf	i1___ftpack@arg+2,f
  5331     0406  0CF1               	rrf	i1___ftpack@arg+1,f
  5332     0407  0CF0               	rrf	i1___ftpack@arg,f
  5333     0408  0B89               	decfsz	9,f
  5334     0409  2C05               	goto	u118_25
  5335     040A                     i1l696:
  5336     040A  30FF               	movlw	255
  5337     040B  0572               	andwf	i1___ftpack@arg+2,w
  5338     040C  1903               	btfsc	3,2
  5339     040D  2C1B               	goto	i1l1545
  5340     040E  2BF6               	goto	i1l1537
  5341     040F                     i1l1547:
  5342     040F  3002               	movlw	2
  5343     0410  0273               	subwf	i1___ftpack@exp,w
  5344     0411  1C03               	btfss	3,0
  5345     0412  2C1D               	goto	i1l703
  5346     0413  3001               	movlw	1
  5347     0414  02F3               	subwf	i1___ftpack@exp,f
  5348     0415  3001               	movlw	1
  5349     0416                     u120_25:
  5350     0416  35F0               	lslf	i1___ftpack@arg,f
  5351     0417  0DF1               	rlf	i1___ftpack@arg+1,f
  5352     0418  0DF2               	rlf	i1___ftpack@arg+2,f
  5353     0419  0B89               	decfsz	9,f
  5354     041A  2C16               	goto	u120_25
  5355     041B                     i1l1545:
  5356     041B  1FF1               	btfss	i1___ftpack@arg+1,7
  5357     041C  2C0F               	goto	i1l1547
  5358     041D                     i1l703:
  5359     041D  1873               	btfsc	i1___ftpack@exp,0
  5360     041E  2C25               	goto	i1l704
  5361     041F  30FF               	movlw	255
  5362     0420  05F0               	andwf	i1___ftpack@arg,f
  5363     0421  307F               	movlw	127
  5364     0422  05F1               	andwf	i1___ftpack@arg+1,f
  5365     0423  30FF               	movlw	255
  5366     0424  05F2               	andwf	i1___ftpack@arg+2,f
  5367     0425                     i1l704:
  5368     0425  1003               	clrc
  5369     0426  0CF3               	rrf	i1___ftpack@exp,f
  5370     0427  0873               	movf	i1___ftpack@exp,w
  5371     0428  00F5               	movwf	??i1___ftpack
  5372     0429  01F6               	clrf	??i1___ftpack+1
  5373     042A  01F7               	clrf	??i1___ftpack+2
  5374     042B  3010               	movlw	16
  5375     042C                     u124_25:
  5376     042C  35F5               	lslf	??i1___ftpack,f
  5377     042D  0DF6               	rlf	??i1___ftpack+1,f
  5378     042E  0DF7               	rlf	??i1___ftpack+2,f
  5379     042F  0B89               	decfsz	9,f
  5380     0430  2C2C               	goto	u124_25
  5381     0431  0875               	movf	??i1___ftpack,w
  5382     0432  04F0               	iorwf	i1___ftpack@arg,f
  5383     0433  0876               	movf	??i1___ftpack+1,w
  5384     0434  04F1               	iorwf	i1___ftpack@arg+1,f
  5385     0435  0877               	movf	??i1___ftpack+2,w
  5386     0436  04F2               	iorwf	i1___ftpack@arg+2,f
  5387     0437  0874               	movf	i1___ftpack@sign,w
  5388     0438  1903               	btfsc	3,2
  5389     0439  0008               	return
  5390     043A  17F2               	bsf	i1___ftpack@arg+2,7
  5391     043B  0008               	return
  5392     043C                     __end_ofi1___ftpack:
  5393                           
  5394                           	psect	text35
  5395     06F3                     __ptext35:	
  5396 ;; *************** function _TMR1_WriteTimer *****************
  5397 ;; Defined at:
  5398 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  timerVal        2    0[COMMON] unsigned int 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      void 
  5405 ;; Registers used:
  5406 ;;		wreg
  5407 ;; Tracked objects:
  5408 ;;		On entry : 1F/0
  5409 ;;		On exit  : 1F/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5412 ;;      Params:         2       0       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0
  5415 ;;      Totals:         2       0       0       0       0       0
  5416 ;;Total ram usage:        2 bytes
  5417 ;; Hardware stack levels used: 1
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_TMR1_ISR
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425     06F3                     _TMR1_WriteTimer:	
  5426                           ;psect for function _TMR1_WriteTimer
  5427                           
  5428                           
  5429                           ;tmr1.c: 122: if (T1CONbits.nT1SYNC == 1)
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _TMR1_WriteTimer: [wreg]
  5433     06F3  1D18               	btfss	24,2	;volatile
  5434     06F4  2EFC               	goto	i1l1851
  5435                           
  5436                           ;tmr1.c: 123: {;tmr1.c: 125: T1CONbits.TMR1ON = 0;
  5437     06F5  1018               	bcf	24,0	;volatile
  5438                           
  5439                           ;tmr1.c: 128: TMR1H = (uint8_t)(timerVal >> 8);
  5440     06F6  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5441     06F7  0097               	movwf	23	;volatile
  5442                           
  5443                           ;tmr1.c: 129: TMR1L = (uint8_t)timerVal;
  5444     06F8  0870               	movf	TMR1_WriteTimer@timerVal,w
  5445     06F9  0096               	movwf	22	;volatile
  5446                           
  5447                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
  5448     06FA  1418               	bsf	24,0	;volatile
  5449                           
  5450                           ;tmr1.c: 133: }
  5451     06FB  0008               	return
  5452     06FC                     i1l1851:
  5453                           
  5454                           ;tmr1.c: 134: else;tmr1.c: 135: {;tmr1.c: 137: TMR1H = (uint8_t)(timerVal >> 8);
  5455     06FC  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5456     06FD  0097               	movwf	23	;volatile
  5457                           
  5458                           ;tmr1.c: 138: TMR1L = (uint8_t)timerVal;
  5459     06FE  0870               	movf	TMR1_WriteTimer@timerVal,w
  5460     06FF  0096               	movwf	22	;volatile
  5461     0700  0008               	return
  5462     0701                     __end_of_TMR1_WriteTimer:
  5463     007E                     btemp	set	126	;btemp
  5464     007E                     int$flags	set	126
  5465     007E                     wtemp0	set	126
  5466                           
  5467                           	psect	config
  5468                           
  5469                           ;Config register CONFIG1 @ 0x8007
  5470                           ;	Oscillator Selection
  5471                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5472                           ;	Watchdog Timer Enable
  5473                           ;	WDTE = OFF, WDT disabled
  5474                           ;	Power-up Timer Enable
  5475                           ;	PWRTE = OFF, PWRT disabled
  5476                           ;	MCLR Pin Function Select
  5477                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5478                           ;	Flash Program Memory Code Protection
  5479                           ;	CP = OFF, Program memory code protection is disabled
  5480                           ;	Data Memory Code Protection
  5481                           ;	CPD = OFF, Data memory code protection is disabled
  5482                           ;	Brown-out Reset Enable
  5483                           ;	BOREN = ON, Brown-out Reset enabled
  5484                           ;	Clock Out Enable
  5485                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5486                           ;	Internal/External Switchover
  5487                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5488                           ;	Fail-Safe Clock Monitor Enable
  5489                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5490     8007                     	org	32775
  5491     8007  3FE4               	dw	16356
  5492                           
  5493                           ;Config register CONFIG2 @ 0x8008
  5494                           ;	Flash Memory Self-Write Protection
  5495                           ;	WRT = OFF, Write protection off
  5496                           ;	PLL Enable
  5497                           ;	PLLEN = OFF, 4x PLL disabled
  5498                           ;	Stack Overflow/Underflow Reset Enable
  5499                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5500                           ;	Brown-out Reset Voltage Selection
  5501                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5502                           ;	In-Circuit Debugger Mode
  5503                           ;	DEBUG = 0x1, unprogrammed default
  5504                           ;	Low-Voltage Programming Enable
  5505                           ;	LVP = ON, Low-voltage programming enabled
  5506     8008                     	org	32776
  5507     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    4
    Data        4
    BSS         8
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     60      73
    BANK1            80     57      68
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> renderMatrix(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> renderMatrix(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _renderMatrix->___lbtoft
    _round->___lbtoft
    ___fttol->___lbtoft
    i1___ftadd->___lbtoft
    ___lbtoft->i1___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_ISR->_renderMatrix
    _renderMatrix->_round
    _round->___ftsub
    _trunc->___altoft
    ___fttol->i1___ftadd
    ___altoft->___fttol
    ___ftsub->_trunc
    i1___ftadd->___lbtoft

Critical Paths under _main in BANK1

    _main->_restart
    _restart->___ftadd
    _rand->___lmul
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->_rand
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   18829
                                             53 BANK1      4     4      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                           ___awtoft
                            ___ftadd
                            ___ftmul
                               _rand
                            _restart
 ---------------------------------------------------------------------------------
 (1) _restart                                              3     3      0    9124
                                             50 BANK1      3     3      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     220
                                             12 BANK1      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     220
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2843
                                             23 BANK1     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3583
                                             38 BANK1     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2478
                                             19 BANK1      4     1      3
                           ___ftpack
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2259
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     408
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     150
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     150
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     258
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      86
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      86
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      86
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    7546
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    7546
                                NULL *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                       _renderMatrix *
 ---------------------------------------------------------------------------------
 (6) _renderMatrix                                         7     7      0    7341
                                             53 BANK0      7     7      0
                            ___fttol
                           ___lbtoft
                      _getParameters
                              _round
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (7) _round                                                6     3      3    4967
                                             47 BANK0      6     3      3
                            ___ftsub
                           ___lbtoft (ARG)
                              _trunc
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (8) _trunc                                                8     5      3    1674
                                             33 BANK0      8     5      3
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (9) _frexp                                                6     2      4     336
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___fttol                                             13     9      4     380
                                             13 BANK0     13     9      4
                           ___lbtoft (ARG)
                          i1___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (9) ___altoft                                             7     3      4     667
                                             26 BANK0      7     3      4
                            ___fttol (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftsub                                              6     0      6    1656
                                             41 BANK0      6     0      6
                              _trunc (ARG)
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (7) i1___ftadd                                           12     6      6    1461
                                              1 BANK0     12     6      6
                           ___lbtoft (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) _getParameters                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) ___lbtoft                                             7     4      3     487
                                              8 COMMON     6     3      3
                                              0 BANK0      1     1      0
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1___ftpack                                           8     3      5     465
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     205
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   ___awtoft
     ___ftpack
     _rand (ARG)
       ___lmul
   ___ftadd
     ___awtoft (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
       ___ftpack (ARG)
       _rand (ARG)
     ___ftpack (ARG)
     _rand (ARG)
   ___ftmul
   _rand
   _restart
     ___awtoft
     ___ftadd
     ___ftmul
     _rand

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _renderMatrix *
       ___fttol
         ___lbtoft (ARG)
           i1___ftpack
         i1___ftadd (ARG)
           ___lbtoft (ARG)
           i1___ftpack (ARG)
       ___lbtoft
       _getParameters
       _round
         ___ftsub
           _trunc (ARG)
             ___altoft
               ___fttol (ARG)
               i1___ftpack (ARG)
             ___fttol
             _frexp
           i1___ftadd (ARG)
         ___lbtoft (ARG)
         _trunc (ARG)
         i1___ftadd (ARG)
       i1___ftadd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      9B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3C      49       6       91.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     39      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      9B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Nov 30 00:14:13 2023

                                 ___altoft@exp 003F                                              _T 0068  
                                            _a 0063                                     i1___ftpack 03D8  
                                ___altoft@sign 0040                                   ___ftadd@exp1 00D1  
                                 ___ftadd@exp2 00D0                                   ___ftadd@sign 00CF  
                                          l255 070D                                            l703 03B9  
                                          l704 03C1                                            l727 00CA  
                                          l696 03A6                                   i1___ftadd@f1 0021  
                                 i1___ftadd@f2 0024                                _timer1ReloadVal 005E  
               ?_EUSART_SetFramingErrorHandler 00A0                                            wreg 0009  
                                 ?_EUSART_Read 0070                                           l2001 0267  
                                         l2005 026F                                           l2037 0716  
                                         l2071 02F0                                           l1761 037C  
                                         l1905 006B                                           l1745 0608  
                                         l1923 0096                                           l1765 0383  
                                         l1941 00DC                                           l1925 00A0  
                                         l1917 0083                                           l1749 0612  
                                         l1767 038D                                           l1935 00BC  
                                         l1927 00A5                                           l1777 03B7  
                                         l1769 0392                                           l1945 00EE  
                                         l1937 00C6                                           l1929 00A9  
                                         l1779 03AB                                           l1955 0109  
                                         l1971 022E                                           l1885 065A  
                                         l1965 021A                                           l1895 0055  
                                         l1993 0255                                           l1899 005C  
                                         l1989 024D                                           u2015 00AA  
                                         u2045 00BD                                           u2125 0256  
                                         _LATA 010C                                           _LATB 010D  
                                         u2135 025C                                           u2165 0270  
                                         u2175 0276                                           u1805 03C8  
                                         u1725 0388                                           u1745 03A1  
                                         u1675 0613                                           u1835 054E  
                                         u1765 03B2                                           u1685 061A  
                                         u1955 0084                                           u1985 0097  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _incX 0062                                           _main 0292  
                                 ___ftpack@arg 00A0                                           _rand 0520  
                                 ___ftpack@exp 00A3                                           fsr1h 0007  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0012  
                   ??_TMR1_SetInterruptHandler 00A2                                   ___ftmul@cntr 00C4  
                                 ___ftmul@sign 00C5                                   ___fttol@exp1 0039  
                                 ___fttol@lval 0035                  __end_of_OSCILLATOR_Initialize 0727  
                                        ?_main 0070                                          ?_rand 00AC  
                              __end_of___ftadd 011C                                __end_of___ftmul 0292  
                                        _T1CON 0018                                __end_of___ftsub 0688  
                              __end_of___fttol 0374                                          i1l134 0010  
                                        i1l703 041D                                          i1l704 0425  
                                        i1l727 01B4                                          i1l696 040A  
                                        i1l787 0350                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                 i1___ftadd@exp1 002C  
                               i1___ftadd@exp2 002B                                          _TRISA 008C  
                                        _TRISB 008D                                 i1___ftadd@sign 002A  
                                        _TXSTA 019E                            ___lmul@multiplicand 00A4  
                             __end_of_TMR1_ISR 06F3                                  ___awtoft@sign 00B6  
                               _WDT_Initialize 0743                                          _frexp 0596  
                                        _errno 005C                                          _randx 00DF  
                                ___ftpack@sign 00A4                                          _round 04DE  
                                        _trunc 055B                        __end_of_TMR1_Initialize 06CF  
                                        pclath 000A                                __end_of_restart 048F  
                                        status 0003                                          wtemp0 007E  
                              _TMR1_WriteTimer 06F3                                 i1___ftpack@arg 0070  
                               i1___ftpack@exp 0073                                __initialization 0014  
                                 __end_of_main 0303                                   __end_of_rand 055B  
                            _renderMatrix$1354 0056                              _renderMatrix$1372 0059  
                                  ?i1___ftpack 0070                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00D5                                  ___fttol@sign1 0034  
                                       ??_rand 00AE                         __end_of_WDT_Initialize 0747  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00DB  
                                       ?_frexp 0070                               __end_of___altoft 0600  
                             __end_of___awtoft 066C                                         _ANSELA 018C  
                                       _ANSELB 018D                               __end_of___ftpack 03D8  
                                       ?_round 004F                               __end_of___lbtoft 06B9  
                   __end_of_EUSART_is_rx_ready 073B                                         _BORCON 0116  
                                       _T1GCON 0019                                         ?_trunc 0041  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1611 036B  
                                       u120_25 0416                                         i1l1533 03E7  
                                       i1l1621 05A2                                         i1l1535 03F1  
                                       i1l1607 035D                                         i1l1545 041B  
                                       i1l1537 03F6                                         i1l1529 03E0  
                                       i1l1641 0146                                         i1l1705 0673  
                                       i1l1547 040F                                         i1l1637 013F  
                                       i1l1717 056F                                         i1l1671 0193  
                                       i1l1647 0155                                         i1l1567 05DD  
                                       i1l1575 0310                                         i1l1665 0180  
                                       i1l1569 05ED                                         i1l1851 06FC  
                                       i1l1683 01C6                                         i1l1667 018A  
                                       i1l1659 016D                                         i1l1579 0319  
                                       i1l1677 01A6                                         i1l1669 018F  
                                       i1l1597 033E                                         u130_25 0320  
                                       i1l1687 01D8                                         i1l1679 01B0  
                                       i1l1599 034C                                         i1l1697 01F3  
                                       i1l1875 04D9                                         u124_25 042C  
                                       u116_25 03EC                                         u133_25 033F  
                                       u118_25 0405                                         u127_25 05E2  
                                       u152_25 0181                                         u136_25 0354  
                                       u155_25 0194                                         u149_25 016E  
                                       u158_25 01A7                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097           __end_of_TMR1_DefaultInterruptHandler 0748  
                 _TMR1_DefaultInterruptHandler 0747                                         ___lmul 0600  
                                    ??___ftadd 00CC                                      ??___ftmul 00BD  
                                    ??___ftsub 007E                                      ??___fttol 0031  
                        ___ftmul@f3_as_product 00C1                              __end_ofi1___ftadd 0206  
                              ?_WDT_Initialize 0070                                      ??_restart 00D2  
                                       round@f 0052                                         round@x 004F  
     TMR1_SetInterruptHandler@InterruptHandler 00A0                                         trunc@i 0044  
                                       trunc@x 0041                        __end_of_TMR1_WriteTimer 0701  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 06CF  
                      __end_of__initialization 002E                                     ___altoft@c 003A  
                                   ___ftadd@f1 00C6                                     ___ftadd@f2 00C9  
                              i1___ftpack@sign 0074                             ?_SYSTEM_Initialize 0070  
                                   ___awtoft@c 00B3                                     ___lbtoft@c 0020  
                                   ___ftmul@f1 00B7                                     ___ftmul@f2 00BA  
                                   ___ftsub@f1 004C                                     ___ftsub@f2 0049  
                                   ___fttol@f1 002D                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 073B                            ??_SYSTEM_Initialize 00A2  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                __end_of_frexp 05CB                              ??_SPI1_Initialize 00A0  
                                __end_of_round 0520                                  __end_of_trunc 0596  
                           _spi1_configuration 073F                                 _OPTION_REGbits 0095  
                        __end_of_getParameters 0749                ??_EUSART_SetOverrunErrorHandler 00A2  
                                      ??_frexp 0074                      __end_of_SYSTEM_Initialize 06E1  
                                      ??_round 007E                                        ??_trunc 007E  
                                   __pbssBANK0 005C                                     __pbssBANK1 00E3  
                                ?_renderMatrix 0070                                     __pmaintext 0292  
                                      ?___lmul 00A0                                     ??_TMR1_ISR 007E  
                                   __pintentry 0004                                      ?___altoft 003A  
                                      _BAUDCON 019F                                 ___lmul@product 00A8  
                                    ?___awtoft 00B3                                      ?___ftpack 00A0  
                                    ?___lbtoft 0078                                        _APFCON0 011D  
                                      _APFCON1 011E                                        _OSCTUNE 0098  
                                      _SSP1ADD 0212                       ??_EUSART_SetErrorHandler 00A2  
                             ?_TMR1_WriteTimer 0070                                 ??_renderMatrix 0055  
                                 ??i1___ftpack 0075                                        ___ftadd 0032  
                                      ___ftmul 0206                                        ___ftsub 066C  
                                      ___fttol 0303                                     ??___altoft 003E  
                                   ??___awtoft 00B6                                     ??___ftpack 00A5  
                                   ??___lbtoft 007B                                        __ptext1 043C  
                                      __ptext2 0520                                        __ptext3 0600  
                                      __ptext4 0206                                        __ptext5 0032  
                                      __ptext6 0650                                        __ptext7 0374  
                                      __ptext8 06CF                                        __ptext9 0743  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 0720                       ??_PIN_MANAGER_Initialize 00A0  
                    ?_TMR1_SetInterruptHandler 00A0                                        _restart 043C  
                         end_of_initialization 002E          __end_of_EUSART_SetOverrunErrorHandler 072C  
                _EUSART_SetOverrunErrorHandler 0727                             __end_ofi1___ftpack 043C  
                            _EUSART_Initialize 062F                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0736  
                          ??_EUSART_Initialize 00A2                               ??_WDT_Initialize 00A0  
                          ?_EUSART_is_rx_ready 0070                                      _TRISBbits 008D  
                                    i1___ftadd 011C                      __end_of_EUSART_Initialize 0650  
                         ??_EUSART_is_rx_ready 00A0                                _SPI1_Initialize 0701  
                                   main@rxByte 00D8                                    ___ftmul@exp 00C0  
                               __end_of___lmul 062F                     _EUSART_DefaultErrorHandler 0000  
                         __end_of_renderMatrix 04DE                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 0014                                     ?i1___ftadd 0021  
                                ??_EUSART_Read 00A0                                     frexp@value 0070  
               ?_EUSART_SetOverrunErrorHandler 00A0                     _EUSART_FramingErrorHandler 00DD  
                                     ??___lmul 00A8                         _EUSART_SetErrorHandler 0731  
                                  __pdataBANK1 00DF                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                      __end_of_SPI1_Initialize 070D                              renderMatrix@count 0060  
                          __end_of_EUSART_Read 0718                                      __pnvBANK0 0063  
                                    __pnvBANK1 00D9                         _PIN_MANAGER_Initialize 0688  
             __end_of_TMR1_SetInterruptHandler 0720                                       ?___ftadd 00C6  
                                     ?___ftmul 00B7                                       ?___ftsub 0049  
                                     ?___fttol 002D                   ??_INTERRUPT_InterruptManager 007E  
                                     ?_restart 0070                                    ??i1___ftadd 0027  
       EUSART_SetErrorHandler@interruptHandler 00A0                                       _PIE1bits 0091  
                            _eusartRxLastError 00E3                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00A2                                       _SSP1CON1 0215  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 06E1  
                                     _SSP1STAT 0214                              ??_TMR1_Initialize 00A2  
                                  _coordinates 0061                                  _getParameters 0748  
                                  _EUSART_Read 070D                               ?_SPI1_Initialize 0070  
                            ___lmul@multiplier 00A0                                   _renderMatrix 048F  
                                    frexp@eptr 0073                        ??_OSCILLATOR_Initialize 00A0  
                          _EUSART_ErrorHandler 00D9                                       ___altoft 05CB  
                                     ___awtoft 0650                                       ___ftpack 0374  
                                     ___lbtoft 06A2                       _TMR1_SetInterruptHandler 0718  
                        _TMR1_InterruptHandler 0066                                 ?_getParameters 0070  
                                     __ptext10 06B9                                       __ptext11 0718  
                                     __ptext20 070D                                       __ptext12 0701  
                                     __ptext13 0688                                       __ptext30 066C  
                                     __ptext22 06E1                                       __ptext14 0720  
                                     __ptext31 011C                                       __ptext23 0747  
                                     __ptext15 062F                                       __ptext32 0748  
                                     __ptext24 048F                                       __ptext16 0727  
                                     __ptext33 06A2                                       __ptext25 04DE  
                                     __ptext17 072C                                       __ptext34 03D8  
                                     __ptext26 055B                                       __ptext18 0731  
                                     __ptext35 06F3                                       __ptext27 0596  
                                     __ptext19 0736                                       __ptext28 0303  
                                     __ptext29 05CB                                   _SSP1CON1bits 0215  
                                   trunc@expon 0047                        ?_EUSART_SetErrorHandler 00A0  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0012                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0731                  _EUSART_SetFramingErrorHandler 072C  
                            ??_TMR1_WriteTimer 0072                                     _INTCONbits 000B  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0736  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                                __pstringtext1 073F                                ??_getParameters 0070  
               __end_of_PIN_MANAGER_Initialize 06A2                                _TMR1_Initialize 06B9  
                   __end_of_spi1_configuration 0743  
